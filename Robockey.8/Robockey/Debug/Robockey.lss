
Robockey.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00002c46  00002cda  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002c46  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000097  00800124  00800124  00002cfe  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00002cfe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002d60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003a0  00000000  00000000  00002da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000370b  00000000  00000000  00003140  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e16  00000000  00000000  0000684b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002a6d  00000000  00000000  00007661  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ab4  00000000  00000000  0000a0d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b7e  00000000  00000000  0000ab84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000038c3  00000000  00000000  0000b702  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000380  00000000  00000000  0000efc5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__ctors_end>
       4:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
       8:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
       c:	0c 94 99 0f 	jmp	0x1f32	; 0x1f32 <__vector_3>
      10:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      14:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      18:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      1c:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      20:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      24:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      28:	0c 94 f7 01 	jmp	0x3ee	; 0x3ee <__vector_10>
      2c:	0c 94 35 02 	jmp	0x46a	; 0x46a <__vector_11>
      30:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      34:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      38:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      3c:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      40:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      44:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      48:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      4c:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      50:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      54:	0c 94 ad 0f 	jmp	0x1f5a	; 0x1f5a <__vector_21>
      58:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      5c:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      60:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      64:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      68:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      6c:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      70:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      74:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      78:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      7c:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      80:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      84:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      88:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      8c:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      90:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      94:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      98:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      9c:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      a0:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      a4:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      a8:	0c 94 02 01 	jmp	0x204	; 0x204 <__bad_interrupt>
      ac:	ac 0e       	add	r10, r28
      ae:	b1 0e       	add	r11, r17
      b0:	b6 0e       	add	r11, r22
      b2:	bb 0e       	add	r11, r27
      b4:	c0 0e       	add	r12, r16
      b6:	a7 0e       	add	r10, r23
      b8:	c5 0e       	add	r12, r21
      ba:	ca 0e       	add	r12, r26
      bc:	e6 0e       	add	r14, r22
      be:	e9 0e       	add	r14, r25
      c0:	36 0f       	add	r19, r22
      c2:	42 0f       	add	r20, r18
      c4:	6a 0f       	add	r22, r26
      c6:	8b 0f       	add	r24, r27
      c8:	92 0f       	add	r25, r18
      ca:	08 4a       	sbci	r16, 0xA8	; 168
      cc:	d7 3b       	cpi	r29, 0xB7	; 183
      ce:	3b ce       	rjmp	.-906    	; 0xfffffd46 <__eeprom_end+0xff7efd46>
      d0:	01 6e       	ori	r16, 0xE1	; 225
      d2:	84 bc       	out	0x24, r8	; 36
      d4:	bf fd       	.word	0xfdbf	; ????
      d6:	c1 2f       	mov	r28, r17
      d8:	3d 6c       	ori	r19, 0xCD	; 205
      da:	74 31       	cpi	r23, 0x14	; 20
      dc:	9a bd       	out	0x2a, r25	; 42
      de:	56 83       	std	Z+6, r21	; 0x06
      e0:	3d da       	rcall	.-2950   	; 0xfffff55c <__eeprom_end+0xff7ef55c>
      e2:	3d 00       	.word	0x003d	; ????
      e4:	c7 7f       	andi	r28, 0xF7	; 247
      e6:	11 be       	out	0x31, r1	; 49
      e8:	d9 e4       	ldi	r29, 0x49	; 73
      ea:	bb 4c       	sbci	r27, 0xCB	; 203
      ec:	3e 91       	ld	r19, -X
      ee:	6b aa       	std	Y+51, r6	; 0x33
      f0:	aa be       	out	0x3a, r10	; 58
      f2:	00 00       	nop
      f4:	00 80       	ld	r0, Z
      f6:	3f 05       	cpc	r19, r15
      f8:	a8 4c       	sbci	r26, 0xC8	; 200
      fa:	cd b2       	in	r12, 0x1d	; 29
      fc:	d4 4e       	sbci	r29, 0xE4	; 228
      fe:	b9 38       	cpi	r27, 0x89	; 137
     100:	36 a9       	ldd	r19, Z+54	; 0x36
     102:	02 0c       	add	r0, r2
     104:	50 b9       	out	0x00, r21	; 0
     106:	91 86       	std	Z+9, r9	; 0x09
     108:	88 08       	sbc	r8, r8
     10a:	3c a6       	std	Y+44, r3	; 0x2c
     10c:	aa aa       	std	Y+50, r10	; 0x32
     10e:	2a be       	out	0x3a, r2	; 58
     110:	00 00       	nop
     112:	00 80       	ld	r0, Z
     114:	3f 00       	.word	0x003f	; ????

00000116 <__trampolines_end>:
     116:	00 01       	movw	r0, r0
     118:	00 00       	nop
     11a:	ad 01       	movw	r20, r26
     11c:	12 00       	.word	0x0012	; ????
     11e:	02 00       	.word	0x0002	; ????
     120:	00 6a       	ori	r16, 0xA0	; 160
     122:	01 43       	sbci	r16, 0x31	; 49
     124:	00 03       	mulsu	r16, r16
     126:	00 00       	nop
     128:	66 01       	movw	r12, r12
     12a:	04 01       	movw	r0, r8
     12c:	03 09       	sbc	r16, r3
     12e:	04 52       	subi	r16, 0x24	; 36
     130:	01 12       	cpse	r0, r17
     132:	02 03       	mulsu	r16, r18
     134:	09 04       	cpc	r0, r9
     136:	4a 01       	movw	r8, r20
     138:	06 03       	mulsu	r16, r22
     13a:	03 09       	sbc	r16, r3
     13c:	04 40       	sbci	r16, 0x04	; 4
     13e:	01 08       	sbc	r0, r1

00000140 <string3>:
     140:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

0000014a <string2>:
     14a:	06 03 4d 00 32 00 00 00                             ..M.2...

00000152 <string1>:
     152:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     162:	65 00 00 00                                         e...

00000166 <string0>:
     166:	04 03 09 04                                         ....

0000016a <config1_descriptor>:
     16a:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     17a:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     18a:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     19a:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     1aa:	40 00 00                                            @..

000001ad <device_descriptor>:
     1ad:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     1bd:	03 01                                               ..

000001bf <endpoint_config_table>:
     1bf:	00 01 c1 12 01 80 36 01 81 36 00                    ......6..6.

000001ca <__ctors_end>:
     1ca:	11 24       	eor	r1, r1
     1cc:	1f be       	out	0x3f, r1	; 63
     1ce:	cf ef       	ldi	r28, 0xFF	; 255
     1d0:	da e0       	ldi	r29, 0x0A	; 10
     1d2:	de bf       	out	0x3e, r29	; 62
     1d4:	cd bf       	out	0x3d, r28	; 61

000001d6 <__do_copy_data>:
     1d6:	11 e0       	ldi	r17, 0x01	; 1
     1d8:	a0 e0       	ldi	r26, 0x00	; 0
     1da:	b1 e0       	ldi	r27, 0x01	; 1
     1dc:	e6 e4       	ldi	r30, 0x46	; 70
     1de:	fc e2       	ldi	r31, 0x2C	; 44
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <__do_copy_data+0x10>
     1e2:	05 90       	lpm	r0, Z+
     1e4:	0d 92       	st	X+, r0
     1e6:	a4 32       	cpi	r26, 0x24	; 36
     1e8:	b1 07       	cpc	r27, r17
     1ea:	d9 f7       	brne	.-10     	; 0x1e2 <__do_copy_data+0xc>

000001ec <__do_clear_bss>:
     1ec:	21 e0       	ldi	r18, 0x01	; 1
     1ee:	a4 e2       	ldi	r26, 0x24	; 36
     1f0:	b1 e0       	ldi	r27, 0x01	; 1
     1f2:	01 c0       	rjmp	.+2      	; 0x1f6 <.do_clear_bss_start>

000001f4 <.do_clear_bss_loop>:
     1f4:	1d 92       	st	X+, r1

000001f6 <.do_clear_bss_start>:
     1f6:	ab 3b       	cpi	r26, 0xBB	; 187
     1f8:	b2 07       	cpc	r27, r18
     1fa:	e1 f7       	brne	.-8      	; 0x1f4 <.do_clear_bss_loop>
     1fc:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <main>
     200:	0c 94 21 16 	jmp	0x2c42	; 0x2c42 <_exit>

00000204 <__bad_interrupt>:
     204:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000208 <initADC>:
  #include "ADC.h"
 
  void initADC()
  {
  // voltage reference Vcc
  clear(ADMUX,REFS1);
     208:	ec e7       	ldi	r30, 0x7C	; 124
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	80 81       	ld	r24, Z
     20e:	8f 77       	andi	r24, 0x7F	; 127
     210:	80 83       	st	Z, r24
  set(ADMUX,REFS0); 
     212:	80 81       	ld	r24, Z
     214:	80 64       	ori	r24, 0x40	; 64
     216:	80 83       	st	Z, r24

  //ADC Prescaler : /128
  set(ADCSRA, ADPS2);
     218:	ea e7       	ldi	r30, 0x7A	; 122
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	80 81       	ld	r24, Z
     21e:	84 60       	ori	r24, 0x04	; 4
     220:	80 83       	st	Z, r24
  set(ADCSRA, ADPS1);
     222:	80 81       	ld	r24, Z
     224:	82 60       	ori	r24, 0x02	; 2
     226:	80 83       	st	Z, r24
  set(ADCSRA, ADPS0);
     228:	80 81       	ld	r24, Z
     22a:	81 60       	ori	r24, 0x01	; 1
     22c:	80 83       	st	Z, r24

  m_disableJTAG(); // enable F4-F7 as GPIO
     22e:	80 e8       	ldi	r24, 0x80	; 128
     230:	85 bf       	out	0x35, r24	; 53
     232:	85 bf       	out	0x35, r24	; 53
     234:	08 95       	ret

00000236 <ADC0>:
  }


  float ADC0() //F0
  {
   clear(ADCSRA, ADEN); // prepare for channel change
     236:	ea e7       	ldi	r30, 0x7A	; 122
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	80 81       	ld	r24, Z
     23c:	8f 77       	andi	r24, 0x7F	; 127
     23e:	80 83       	st	Z, r24
   set(DIDR0, ADC0D); // disable F0 digital input
     240:	ae e7       	ldi	r26, 0x7E	; 126
     242:	b0 e0       	ldi	r27, 0x00	; 0
     244:	8c 91       	ld	r24, X
     246:	81 60       	ori	r24, 0x01	; 1
     248:	8c 93       	st	X, r24

   // channel selection F0
   clear(ADCSRB, MUX5);
     24a:	ab e7       	ldi	r26, 0x7B	; 123
     24c:	b0 e0       	ldi	r27, 0x00	; 0
     24e:	8c 91       	ld	r24, X
     250:	8f 7d       	andi	r24, 0xDF	; 223
     252:	8c 93       	st	X, r24
   clear(ADMUX, MUX2);
     254:	ac e7       	ldi	r26, 0x7C	; 124
     256:	b0 e0       	ldi	r27, 0x00	; 0
     258:	8c 91       	ld	r24, X
     25a:	8b 7f       	andi	r24, 0xFB	; 251
     25c:	8c 93       	st	X, r24
   clear(ADMUX, MUX1); 
     25e:	8c 91       	ld	r24, X
     260:	8d 7f       	andi	r24, 0xFD	; 253
     262:	8c 93       	st	X, r24
   clear(ADMUX, MUX0);                 
     264:	8c 91       	ld	r24, X
     266:	8e 7f       	andi	r24, 0xFE	; 254
     268:	8c 93       	st	X, r24
   
   //enable and begin ADC conversion
   set(ADCSRA, ADEN); 
     26a:	80 81       	ld	r24, Z
     26c:	80 68       	ori	r24, 0x80	; 128
     26e:	80 83       	st	Z, r24
   set(ADCSRA, ADSC); 
     270:	80 81       	ld	r24, Z
     272:	80 64       	ori	r24, 0x40	; 64
     274:	80 83       	st	Z, r24
   while(!check(ADCSRA,ADIF)){}
     276:	80 81       	ld	r24, Z
     278:	84 ff       	sbrs	r24, 4
     27a:	fd cf       	rjmp	.-6      	; 0x276 <ADC0+0x40>
   float adc = (float)ADC;
     27c:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     280:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
   return adc;
   set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     28c:	08 95       	ret

0000028e <ADC1>:

  float ADC1() //F1
  {
   clear(ADCSRA, ADEN); // prepare for channel change
     28e:	ea e7       	ldi	r30, 0x7A	; 122
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	80 81       	ld	r24, Z
     294:	8f 77       	andi	r24, 0x7F	; 127
     296:	80 83       	st	Z, r24
   set(DIDR0, ADC1D); // disable F1 digital input
     298:	ae e7       	ldi	r26, 0x7E	; 126
     29a:	b0 e0       	ldi	r27, 0x00	; 0
     29c:	8c 91       	ld	r24, X
     29e:	82 60       	ori	r24, 0x02	; 2
     2a0:	8c 93       	st	X, r24

   // channel selection F1
   clear(ADCSRB, MUX5);
     2a2:	ab e7       	ldi	r26, 0x7B	; 123
     2a4:	b0 e0       	ldi	r27, 0x00	; 0
     2a6:	8c 91       	ld	r24, X
     2a8:	8f 7d       	andi	r24, 0xDF	; 223
     2aa:	8c 93       	st	X, r24
   clear(ADMUX, MUX2);
     2ac:	ac e7       	ldi	r26, 0x7C	; 124
     2ae:	b0 e0       	ldi	r27, 0x00	; 0
     2b0:	8c 91       	ld	r24, X
     2b2:	8b 7f       	andi	r24, 0xFB	; 251
     2b4:	8c 93       	st	X, r24
   clear(ADMUX, MUX1);
     2b6:	8c 91       	ld	r24, X
     2b8:	8d 7f       	andi	r24, 0xFD	; 253
     2ba:	8c 93       	st	X, r24
   set(ADMUX, MUX0);
     2bc:	8c 91       	ld	r24, X
     2be:	81 60       	ori	r24, 0x01	; 1
     2c0:	8c 93       	st	X, r24
  
   //enable and begin ADC conversion
   set(ADCSRA, ADEN);
     2c2:	80 81       	ld	r24, Z
     2c4:	80 68       	ori	r24, 0x80	; 128
     2c6:	80 83       	st	Z, r24
   set(ADCSRA, ADSC);
     2c8:	80 81       	ld	r24, Z
     2ca:	80 64       	ori	r24, 0x40	; 64
     2cc:	80 83       	st	Z, r24
   while(!check(ADCSRA,ADIF)){}
     2ce:	80 81       	ld	r24, Z
     2d0:	84 ff       	sbrs	r24, 4
     2d2:	fd cf       	rjmp	.-6      	; 0x2ce <ADC1+0x40>
   float adc = (float)ADC;
     2d4:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     2d8:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     2dc:	80 e0       	ldi	r24, 0x00	; 0
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
   return adc;
   set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     2e4:	08 95       	ret

000002e6 <ADC2>:

  float ADC2() //F4
  {
	   clear(ADCSRA, ADEN); // prepare for channel change
     2e6:	ea e7       	ldi	r30, 0x7A	; 122
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	80 81       	ld	r24, Z
     2ec:	8f 77       	andi	r24, 0x7F	; 127
     2ee:	80 83       	st	Z, r24
	   set(DIDR0, ADC4D); // disable F4 digital input
     2f0:	ae e7       	ldi	r26, 0x7E	; 126
     2f2:	b0 e0       	ldi	r27, 0x00	; 0
     2f4:	8c 91       	ld	r24, X
     2f6:	80 61       	ori	r24, 0x10	; 16
     2f8:	8c 93       	st	X, r24

	   // channel selection F4
	   clear(ADCSRB, MUX5);
     2fa:	ab e7       	ldi	r26, 0x7B	; 123
     2fc:	b0 e0       	ldi	r27, 0x00	; 0
     2fe:	8c 91       	ld	r24, X
     300:	8f 7d       	andi	r24, 0xDF	; 223
     302:	8c 93       	st	X, r24
	   set(ADMUX, MUX2);
     304:	ac e7       	ldi	r26, 0x7C	; 124
     306:	b0 e0       	ldi	r27, 0x00	; 0
     308:	8c 91       	ld	r24, X
     30a:	84 60       	ori	r24, 0x04	; 4
     30c:	8c 93       	st	X, r24
	   clear(ADMUX, MUX1);
     30e:	8c 91       	ld	r24, X
     310:	8d 7f       	andi	r24, 0xFD	; 253
     312:	8c 93       	st	X, r24
	   clear(ADMUX, MUX0);
     314:	8c 91       	ld	r24, X
     316:	8e 7f       	andi	r24, 0xFE	; 254
     318:	8c 93       	st	X, r24
	   
	   //enable and begin ADC conversion
	   set(ADCSRA, ADEN);
     31a:	80 81       	ld	r24, Z
     31c:	80 68       	ori	r24, 0x80	; 128
     31e:	80 83       	st	Z, r24
	   set(ADCSRA, ADSC);
     320:	80 81       	ld	r24, Z
     322:	80 64       	ori	r24, 0x40	; 64
     324:	80 83       	st	Z, r24
	   while(!check(ADCSRA,ADIF)){}
     326:	80 81       	ld	r24, Z
     328:	84 ff       	sbrs	r24, 4
     32a:	fd cf       	rjmp	.-6      	; 0x326 <ADC2+0x40>
	   float adc = (float)ADC;
     32c:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     330:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
	   return adc;
	   set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     33c:	08 95       	ret

0000033e <ADC3>:

  float ADC3() //F5
  {
	  clear(ADCSRA, ADEN); // prepare for channel change
     33e:	ea e7       	ldi	r30, 0x7A	; 122
     340:	f0 e0       	ldi	r31, 0x00	; 0
     342:	80 81       	ld	r24, Z
     344:	8f 77       	andi	r24, 0x7F	; 127
     346:	80 83       	st	Z, r24
	  set(DIDR0, ADC5D); // disable F5 digital input
     348:	ae e7       	ldi	r26, 0x7E	; 126
     34a:	b0 e0       	ldi	r27, 0x00	; 0
     34c:	8c 91       	ld	r24, X
     34e:	80 62       	ori	r24, 0x20	; 32
     350:	8c 93       	st	X, r24

	  // channel selection F5
	  clear(ADCSRB, MUX5);
     352:	ab e7       	ldi	r26, 0x7B	; 123
     354:	b0 e0       	ldi	r27, 0x00	; 0
     356:	8c 91       	ld	r24, X
     358:	8f 7d       	andi	r24, 0xDF	; 223
     35a:	8c 93       	st	X, r24
	  set(ADMUX, MUX2);
     35c:	ac e7       	ldi	r26, 0x7C	; 124
     35e:	b0 e0       	ldi	r27, 0x00	; 0
     360:	8c 91       	ld	r24, X
     362:	84 60       	ori	r24, 0x04	; 4
     364:	8c 93       	st	X, r24
	  clear(ADMUX, MUX1);
     366:	8c 91       	ld	r24, X
     368:	8d 7f       	andi	r24, 0xFD	; 253
     36a:	8c 93       	st	X, r24
	  set(ADMUX, MUX0);
     36c:	8c 91       	ld	r24, X
     36e:	81 60       	ori	r24, 0x01	; 1
     370:	8c 93       	st	X, r24
	  
	  //enable and begin ADC conversion
	  set(ADCSRA, ADEN);
     372:	80 81       	ld	r24, Z
     374:	80 68       	ori	r24, 0x80	; 128
     376:	80 83       	st	Z, r24
	  set(ADCSRA, ADSC);
     378:	80 81       	ld	r24, Z
     37a:	80 64       	ori	r24, 0x40	; 64
     37c:	80 83       	st	Z, r24
	  while(!check(ADCSRA,ADIF)){}
     37e:	80 81       	ld	r24, Z
     380:	84 ff       	sbrs	r24, 4
     382:	fd cf       	rjmp	.-6      	; 0x37e <ADC3+0x40>
	  float adc = (float)ADC;
     384:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     388:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
	  return adc;
	  set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     394:	08 95       	ret

00000396 <ADC4>:

  float ADC4() //F6
  {
	  clear(ADCSRA, ADEN); // prepare for channel change
     396:	ea e7       	ldi	r30, 0x7A	; 122
     398:	f0 e0       	ldi	r31, 0x00	; 0
     39a:	80 81       	ld	r24, Z
     39c:	8f 77       	andi	r24, 0x7F	; 127
     39e:	80 83       	st	Z, r24
	  set(DIDR0, ADC6D); // disable F6 digital input
     3a0:	ae e7       	ldi	r26, 0x7E	; 126
     3a2:	b0 e0       	ldi	r27, 0x00	; 0
     3a4:	8c 91       	ld	r24, X
     3a6:	80 64       	ori	r24, 0x40	; 64
     3a8:	8c 93       	st	X, r24

	  // channel selection F6
	  clear(ADCSRB, MUX5);
     3aa:	ab e7       	ldi	r26, 0x7B	; 123
     3ac:	b0 e0       	ldi	r27, 0x00	; 0
     3ae:	8c 91       	ld	r24, X
     3b0:	8f 7d       	andi	r24, 0xDF	; 223
     3b2:	8c 93       	st	X, r24
	  set(ADMUX, MUX2);
     3b4:	ac e7       	ldi	r26, 0x7C	; 124
     3b6:	b0 e0       	ldi	r27, 0x00	; 0
     3b8:	8c 91       	ld	r24, X
     3ba:	84 60       	ori	r24, 0x04	; 4
     3bc:	8c 93       	st	X, r24
	  set(ADMUX, MUX1);
     3be:	8c 91       	ld	r24, X
     3c0:	82 60       	ori	r24, 0x02	; 2
     3c2:	8c 93       	st	X, r24
	  clear(ADMUX, MUX0);
     3c4:	8c 91       	ld	r24, X
     3c6:	8e 7f       	andi	r24, 0xFE	; 254
     3c8:	8c 93       	st	X, r24
	  
	  //enable and begin ADC conversion
	  set(ADCSRA, ADEN);
     3ca:	80 81       	ld	r24, Z
     3cc:	80 68       	ori	r24, 0x80	; 128
     3ce:	80 83       	st	Z, r24
	  set(ADCSRA, ADSC);
     3d0:	80 81       	ld	r24, Z
     3d2:	80 64       	ori	r24, 0x40	; 64
     3d4:	80 83       	st	Z, r24
	  while(!check(ADCSRA,ADIF)){}
     3d6:	80 81       	ld	r24, Z
     3d8:	84 ff       	sbrs	r24, 4
     3da:	fd cf       	rjmp	.-6      	; 0x3d6 <ADC4+0x40>
	  float adc = (float)ADC;
     3dc:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     3e0:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     3e4:	80 e0       	ldi	r24, 0x00	; 0
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
	  return adc;
	  set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     3ec:	08 95       	ret

000003ee <__vector_10>:
     3ee:	1f 92       	push	r1
     3f0:	0f 92       	push	r0
     3f2:	0f b6       	in	r0, 0x3f	; 63
     3f4:	0f 92       	push	r0
     3f6:	11 24       	eor	r1, r1
     3f8:	8f 93       	push	r24
     3fa:	9f 93       	push	r25
     3fc:	ef 93       	push	r30
     3fe:	ff 93       	push	r31
     400:	e1 ee       	ldi	r30, 0xE1	; 225
     402:	f0 e0       	ldi	r31, 0x00	; 0
     404:	80 81       	ld	r24, Z
     406:	10 82       	st	Z, r1
     408:	83 ff       	sbrs	r24, 3
     40a:	11 c0       	rjmp	.+34     	; 0x42e <__FUSE_REGION_LENGTH__+0x2e>
     40c:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     410:	91 e0       	ldi	r25, 0x01	; 1
     412:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     416:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     41a:	92 e1       	ldi	r25, 0x12	; 18
     41c:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     420:	98 e0       	ldi	r25, 0x08	; 8
     422:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     426:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <usb_configuration>
     42a:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__data_end>
     42e:	82 ff       	sbrs	r24, 2
     430:	13 c0       	rjmp	.+38     	; 0x458 <__FUSE_REGION_LENGTH__+0x58>
     432:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <usb_configuration>
     436:	88 23       	and	r24, r24
     438:	79 f0       	breq	.+30     	; 0x458 <__FUSE_REGION_LENGTH__+0x58>
     43a:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <transmit_flush_timer>
     43e:	88 23       	and	r24, r24
     440:	59 f0       	breq	.+22     	; 0x458 <__FUSE_REGION_LENGTH__+0x58>
     442:	81 50       	subi	r24, 0x01	; 1
     444:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <transmit_flush_timer>
     448:	81 11       	cpse	r24, r1
     44a:	06 c0       	rjmp	.+12     	; 0x458 <__FUSE_REGION_LENGTH__+0x58>
     44c:	84 e0       	ldi	r24, 0x04	; 4
     44e:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     452:	8a e3       	ldi	r24, 0x3A	; 58
     454:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     458:	ff 91       	pop	r31
     45a:	ef 91       	pop	r30
     45c:	9f 91       	pop	r25
     45e:	8f 91       	pop	r24
     460:	0f 90       	pop	r0
     462:	0f be       	out	0x3f, r0	; 63
     464:	0f 90       	pop	r0
     466:	1f 90       	pop	r1
     468:	18 95       	reti

0000046a <__vector_11>:
     46a:	1f 92       	push	r1
     46c:	0f 92       	push	r0
     46e:	0f b6       	in	r0, 0x3f	; 63
     470:	0f 92       	push	r0
     472:	11 24       	eor	r1, r1
     474:	0f 93       	push	r16
     476:	1f 93       	push	r17
     478:	2f 93       	push	r18
     47a:	3f 93       	push	r19
     47c:	4f 93       	push	r20
     47e:	5f 93       	push	r21
     480:	6f 93       	push	r22
     482:	7f 93       	push	r23
     484:	8f 93       	push	r24
     486:	9f 93       	push	r25
     488:	af 93       	push	r26
     48a:	bf 93       	push	r27
     48c:	cf 93       	push	r28
     48e:	df 93       	push	r29
     490:	ef 93       	push	r30
     492:	ff 93       	push	r31
     494:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     498:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     49c:	83 ff       	sbrs	r24, 3
     49e:	4c c1       	rjmp	.+664    	; 0x738 <__vector_11+0x2ce>
     4a0:	e1 ef       	ldi	r30, 0xF1	; 241
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	60 81       	ld	r22, Z
     4a6:	80 81       	ld	r24, Z
     4a8:	20 81       	ld	r18, Z
     4aa:	90 81       	ld	r25, Z
     4ac:	30 e0       	ldi	r19, 0x00	; 0
     4ae:	39 2b       	or	r19, r25
     4b0:	40 81       	ld	r20, Z
     4b2:	90 81       	ld	r25, Z
     4b4:	50 e0       	ldi	r21, 0x00	; 0
     4b6:	59 2b       	or	r21, r25
     4b8:	70 81       	ld	r23, Z
     4ba:	c0 81       	ld	r28, Z
     4bc:	92 ef       	ldi	r25, 0xF2	; 242
     4be:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     4c2:	86 30       	cpi	r24, 0x06	; 6
     4c4:	09 f0       	breq	.+2      	; 0x4c8 <__vector_11+0x5e>
     4c6:	58 c0       	rjmp	.+176    	; 0x578 <__vector_11+0x10e>
     4c8:	04 c0       	rjmp	.+8      	; 0x4d2 <__vector_11+0x68>
     4ca:	81 e2       	ldi	r24, 0x21	; 33
     4cc:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     4d0:	3a c1       	rjmp	.+628    	; 0x746 <__vector_11+0x2dc>
     4d2:	66 e0       	ldi	r22, 0x06	; 6
     4d4:	86 e1       	ldi	r24, 0x16	; 22
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	fc 01       	movw	r30, r24
     4da:	a5 91       	lpm	r26, Z+
     4dc:	b4 91       	lpm	r27, Z
     4de:	2a 17       	cp	r18, r26
     4e0:	3b 07       	cpc	r19, r27
     4e2:	11 f0       	breq	.+4      	; 0x4e8 <__vector_11+0x7e>
     4e4:	07 96       	adiw	r24, 0x07	; 7
     4e6:	23 c0       	rjmp	.+70     	; 0x52e <__vector_11+0xc4>
     4e8:	fc 01       	movw	r30, r24
     4ea:	32 96       	adiw	r30, 0x02	; 2
     4ec:	a5 91       	lpm	r26, Z+
     4ee:	b4 91       	lpm	r27, Z
     4f0:	4a 17       	cp	r20, r26
     4f2:	5b 07       	cpc	r21, r27
     4f4:	11 f0       	breq	.+4      	; 0x4fa <__vector_11+0x90>
     4f6:	07 96       	adiw	r24, 0x07	; 7
     4f8:	1a c0       	rjmp	.+52     	; 0x52e <__vector_11+0xc4>
     4fa:	fc 01       	movw	r30, r24
     4fc:	34 96       	adiw	r30, 0x04	; 4
     4fe:	45 91       	lpm	r20, Z+
     500:	54 91       	lpm	r21, Z
     502:	fc 01       	movw	r30, r24
     504:	36 96       	adiw	r30, 0x06	; 6
     506:	24 91       	lpm	r18, Z
     508:	87 2f       	mov	r24, r23
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	9c 2b       	or	r25, r28
     50e:	8f 3f       	cpi	r24, 0xFF	; 255
     510:	91 05       	cpc	r25, r1
     512:	19 f0       	breq	.+6      	; 0x51a <__vector_11+0xb0>
     514:	10 f0       	brcs	.+4      	; 0x51a <__vector_11+0xb0>
     516:	8f ef       	ldi	r24, 0xFF	; 255
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	82 17       	cp	r24, r18
     51c:	08 f4       	brcc	.+2      	; 0x520 <__vector_11+0xb6>
     51e:	28 2f       	mov	r18, r24
     520:	a8 ee       	ldi	r26, 0xE8	; 232
     522:	b0 e0       	ldi	r27, 0x00	; 0
     524:	70 e1       	ldi	r23, 0x10	; 16
     526:	6e ef       	ldi	r22, 0xFE	; 254
     528:	c1 ef       	ldi	r28, 0xF1	; 241
     52a:	d0 e0       	ldi	r29, 0x00	; 0
     52c:	03 c0       	rjmp	.+6      	; 0x534 <__vector_11+0xca>
     52e:	61 50       	subi	r22, 0x01	; 1
     530:	99 f6       	brne	.-90     	; 0x4d8 <__vector_11+0x6e>
     532:	cb cf       	rjmp	.-106    	; 0x4ca <__vector_11+0x60>
     534:	8c 91       	ld	r24, X
     536:	98 2f       	mov	r25, r24
     538:	95 70       	andi	r25, 0x05	; 5
     53a:	e1 f3       	breq	.-8      	; 0x534 <__vector_11+0xca>
     53c:	82 fd       	sbrc	r24, 2
     53e:	03 c1       	rjmp	.+518    	; 0x746 <__vector_11+0x2dc>
     540:	32 2f       	mov	r19, r18
     542:	21 31       	cpi	r18, 0x11	; 17
     544:	08 f0       	brcs	.+2      	; 0x548 <__vector_11+0xde>
     546:	37 2f       	mov	r19, r23
     548:	33 23       	and	r19, r19
     54a:	09 f4       	brne	.+2      	; 0x54e <__vector_11+0xe4>
     54c:	f9 c0       	rjmp	.+498    	; 0x740 <__vector_11+0x2d6>
     54e:	fa 01       	movw	r30, r20
     550:	83 2f       	mov	r24, r19
     552:	94 91       	lpm	r25, Z
     554:	98 83       	st	Y, r25
     556:	81 50       	subi	r24, 0x01	; 1
     558:	31 96       	adiw	r30, 0x01	; 1
     55a:	81 11       	cpse	r24, r1
     55c:	fa cf       	rjmp	.-12     	; 0x552 <__vector_11+0xe8>
     55e:	8f ef       	ldi	r24, 0xFF	; 255
     560:	83 0f       	add	r24, r19
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	01 96       	adiw	r24, 0x01	; 1
     566:	48 0f       	add	r20, r24
     568:	59 1f       	adc	r21, r25
     56a:	23 1b       	sub	r18, r19
     56c:	6c 93       	st	X, r22
     56e:	21 11       	cpse	r18, r1
     570:	e1 cf       	rjmp	.-62     	; 0x534 <__vector_11+0xca>
     572:	30 31       	cpi	r19, 0x10	; 16
     574:	f9 f2       	breq	.-66     	; 0x534 <__vector_11+0xca>
     576:	e7 c0       	rjmp	.+462    	; 0x746 <__vector_11+0x2dc>
     578:	85 30       	cpi	r24, 0x05	; 5
     57a:	61 f4       	brne	.+24     	; 0x594 <__vector_11+0x12a>
     57c:	8e ef       	ldi	r24, 0xFE	; 254
     57e:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     582:	e8 ee       	ldi	r30, 0xE8	; 232
     584:	f0 e0       	ldi	r31, 0x00	; 0
     586:	80 81       	ld	r24, Z
     588:	80 ff       	sbrs	r24, 0
     58a:	fd cf       	rjmp	.-6      	; 0x586 <__vector_11+0x11c>
     58c:	20 68       	ori	r18, 0x80	; 128
     58e:	20 93 e3 00 	sts	0x00E3, r18	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     592:	d9 c0       	rjmp	.+434    	; 0x746 <__vector_11+0x2dc>
     594:	89 30       	cpi	r24, 0x09	; 9
     596:	09 f0       	breq	.+2      	; 0x59a <__vector_11+0x130>
     598:	35 c0       	rjmp	.+106    	; 0x604 <__vector_11+0x19a>
     59a:	61 11       	cpse	r22, r1
     59c:	cd c0       	rjmp	.+410    	; 0x738 <__vector_11+0x2ce>
     59e:	20 93 26 01 	sts	0x0126, r18	; 0x800126 <usb_configuration>
     5a2:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__data_end>
     5a6:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <transmit_flush_timer>
     5aa:	8e ef       	ldi	r24, 0xFE	; 254
     5ac:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     5b0:	81 e0       	ldi	r24, 0x01	; 1
     5b2:	2f eb       	ldi	r18, 0xBF	; 191
     5b4:	31 e0       	ldi	r19, 0x01	; 1
     5b6:	c9 ee       	ldi	r28, 0xE9	; 233
     5b8:	d0 e0       	ldi	r29, 0x00	; 0
     5ba:	ab ee       	ldi	r26, 0xEB	; 235
     5bc:	b0 e0       	ldi	r27, 0x00	; 0
     5be:	0c ee       	ldi	r16, 0xEC	; 236
     5c0:	10 e0       	ldi	r17, 0x00	; 0
     5c2:	6d ee       	ldi	r22, 0xED	; 237
     5c4:	70 e0       	ldi	r23, 0x00	; 0
     5c6:	88 83       	st	Y, r24
     5c8:	a9 01       	movw	r20, r18
     5ca:	4f 5f       	subi	r20, 0xFF	; 255
     5cc:	5f 4f       	sbci	r21, 0xFF	; 255
     5ce:	f9 01       	movw	r30, r18
     5d0:	94 91       	lpm	r25, Z
     5d2:	9c 93       	st	X, r25
     5d4:	99 23       	and	r25, r25
     5d6:	61 f0       	breq	.+24     	; 0x5f0 <__vector_11+0x186>
     5d8:	fa 01       	movw	r30, r20
     5da:	44 91       	lpm	r20, Z
     5dc:	f8 01       	movw	r30, r16
     5de:	40 83       	st	Z, r20
     5e0:	f9 01       	movw	r30, r18
     5e2:	32 96       	adiw	r30, 0x02	; 2
     5e4:	94 91       	lpm	r25, Z
     5e6:	2d 5f       	subi	r18, 0xFD	; 253
     5e8:	3f 4f       	sbci	r19, 0xFF	; 255
     5ea:	fb 01       	movw	r30, r22
     5ec:	90 83       	st	Z, r25
     5ee:	01 c0       	rjmp	.+2      	; 0x5f2 <__vector_11+0x188>
     5f0:	9a 01       	movw	r18, r20
     5f2:	8f 5f       	subi	r24, 0xFF	; 255
     5f4:	85 30       	cpi	r24, 0x05	; 5
     5f6:	39 f7       	brne	.-50     	; 0x5c6 <__vector_11+0x15c>
     5f8:	ea ee       	ldi	r30, 0xEA	; 234
     5fa:	f0 e0       	ldi	r31, 0x00	; 0
     5fc:	8e e1       	ldi	r24, 0x1E	; 30
     5fe:	80 83       	st	Z, r24
     600:	10 82       	st	Z, r1
     602:	a1 c0       	rjmp	.+322    	; 0x746 <__vector_11+0x2dc>
     604:	88 30       	cpi	r24, 0x08	; 8
     606:	81 f4       	brne	.+32     	; 0x628 <__vector_11+0x1be>
     608:	60 38       	cpi	r22, 0x80	; 128
     60a:	09 f0       	breq	.+2      	; 0x60e <__vector_11+0x1a4>
     60c:	95 c0       	rjmp	.+298    	; 0x738 <__vector_11+0x2ce>
     60e:	e8 ee       	ldi	r30, 0xE8	; 232
     610:	f0 e0       	ldi	r31, 0x00	; 0
     612:	80 81       	ld	r24, Z
     614:	80 ff       	sbrs	r24, 0
     616:	fd cf       	rjmp	.-6      	; 0x612 <__vector_11+0x1a8>
     618:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <usb_configuration>
     61c:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     620:	8e ef       	ldi	r24, 0xFE	; 254
     622:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     626:	8f c0       	rjmp	.+286    	; 0x746 <__vector_11+0x2dc>
     628:	81 32       	cpi	r24, 0x21	; 33
     62a:	b9 f4       	brne	.+46     	; 0x65a <__vector_11+0x1f0>
     62c:	61 3a       	cpi	r22, 0xA1	; 161
     62e:	09 f0       	breq	.+2      	; 0x632 <__vector_11+0x1c8>
     630:	83 c0       	rjmp	.+262    	; 0x738 <__vector_11+0x2ce>
     632:	e8 ee       	ldi	r30, 0xE8	; 232
     634:	f0 e0       	ldi	r31, 0x00	; 0
     636:	80 81       	ld	r24, Z
     638:	80 ff       	sbrs	r24, 0
     63a:	fd cf       	rjmp	.-6      	; 0x636 <__vector_11+0x1cc>
     63c:	e0 e0       	ldi	r30, 0x00	; 0
     63e:	f1 e0       	ldi	r31, 0x01	; 1
     640:	27 e0       	ldi	r18, 0x07	; 7
     642:	31 e0       	ldi	r19, 0x01	; 1
     644:	a1 ef       	ldi	r26, 0xF1	; 241
     646:	b0 e0       	ldi	r27, 0x00	; 0
     648:	81 91       	ld	r24, Z+
     64a:	8c 93       	st	X, r24
     64c:	e2 17       	cp	r30, r18
     64e:	f3 07       	cpc	r31, r19
     650:	d9 f7       	brne	.-10     	; 0x648 <__vector_11+0x1de>
     652:	8e ef       	ldi	r24, 0xFE	; 254
     654:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     658:	76 c0       	rjmp	.+236    	; 0x746 <__vector_11+0x2dc>
     65a:	80 32       	cpi	r24, 0x20	; 32
     65c:	d1 f4       	brne	.+52     	; 0x692 <__vector_11+0x228>
     65e:	61 32       	cpi	r22, 0x21	; 33
     660:	09 f0       	breq	.+2      	; 0x664 <__vector_11+0x1fa>
     662:	6a c0       	rjmp	.+212    	; 0x738 <__vector_11+0x2ce>
     664:	e8 ee       	ldi	r30, 0xE8	; 232
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	82 ff       	sbrs	r24, 2
     66c:	fd cf       	rjmp	.-6      	; 0x668 <__vector_11+0x1fe>
     66e:	e0 e0       	ldi	r30, 0x00	; 0
     670:	f1 e0       	ldi	r31, 0x01	; 1
     672:	27 e0       	ldi	r18, 0x07	; 7
     674:	31 e0       	ldi	r19, 0x01	; 1
     676:	a1 ef       	ldi	r26, 0xF1	; 241
     678:	b0 e0       	ldi	r27, 0x00	; 0
     67a:	8c 91       	ld	r24, X
     67c:	81 93       	st	Z+, r24
     67e:	e2 17       	cp	r30, r18
     680:	f3 07       	cpc	r31, r19
     682:	d9 f7       	brne	.-10     	; 0x67a <__vector_11+0x210>
     684:	e8 ee       	ldi	r30, 0xE8	; 232
     686:	f0 e0       	ldi	r31, 0x00	; 0
     688:	8b ef       	ldi	r24, 0xFB	; 251
     68a:	80 83       	st	Z, r24
     68c:	8e ef       	ldi	r24, 0xFE	; 254
     68e:	80 83       	st	Z, r24
     690:	5a c0       	rjmp	.+180    	; 0x746 <__vector_11+0x2dc>
     692:	82 32       	cpi	r24, 0x22	; 34
     694:	71 f4       	brne	.+28     	; 0x6b2 <__vector_11+0x248>
     696:	61 32       	cpi	r22, 0x21	; 33
     698:	09 f0       	breq	.+2      	; 0x69c <__vector_11+0x232>
     69a:	4e c0       	rjmp	.+156    	; 0x738 <__vector_11+0x2ce>
     69c:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <__data_end>
     6a0:	e8 ee       	ldi	r30, 0xE8	; 232
     6a2:	f0 e0       	ldi	r31, 0x00	; 0
     6a4:	80 81       	ld	r24, Z
     6a6:	80 ff       	sbrs	r24, 0
     6a8:	fd cf       	rjmp	.-6      	; 0x6a4 <__vector_11+0x23a>
     6aa:	8e ef       	ldi	r24, 0xFE	; 254
     6ac:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     6b0:	4a c0       	rjmp	.+148    	; 0x746 <__vector_11+0x2dc>
     6b2:	81 11       	cpse	r24, r1
     6b4:	1a c0       	rjmp	.+52     	; 0x6ea <__vector_11+0x280>
     6b6:	e8 ee       	ldi	r30, 0xE8	; 232
     6b8:	f0 e0       	ldi	r31, 0x00	; 0
     6ba:	80 81       	ld	r24, Z
     6bc:	80 ff       	sbrs	r24, 0
     6be:	fd cf       	rjmp	.-6      	; 0x6ba <__vector_11+0x250>
     6c0:	62 38       	cpi	r22, 0x82	; 130
     6c2:	51 f4       	brne	.+20     	; 0x6d8 <__vector_11+0x26e>
     6c4:	e9 ee       	ldi	r30, 0xE9	; 233
     6c6:	f0 e0       	ldi	r31, 0x00	; 0
     6c8:	40 83       	st	Z, r20
     6ca:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     6ce:	85 fb       	bst	r24, 5
     6d0:	88 27       	eor	r24, r24
     6d2:	80 f9       	bld	r24, 0
     6d4:	10 82       	st	Z, r1
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__vector_11+0x270>
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	e1 ef       	ldi	r30, 0xF1	; 241
     6dc:	f0 e0       	ldi	r31, 0x00	; 0
     6de:	80 83       	st	Z, r24
     6e0:	10 82       	st	Z, r1
     6e2:	8e ef       	ldi	r24, 0xFE	; 254
     6e4:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     6e8:	2e c0       	rjmp	.+92     	; 0x746 <__vector_11+0x2dc>
     6ea:	98 2f       	mov	r25, r24
     6ec:	9d 7f       	andi	r25, 0xFD	; 253
     6ee:	91 30       	cpi	r25, 0x01	; 1
     6f0:	19 f5       	brne	.+70     	; 0x738 <__vector_11+0x2ce>
     6f2:	62 30       	cpi	r22, 0x02	; 2
     6f4:	09 f5       	brne	.+66     	; 0x738 <__vector_11+0x2ce>
     6f6:	23 2b       	or	r18, r19
     6f8:	f9 f4       	brne	.+62     	; 0x738 <__vector_11+0x2ce>
     6fa:	4f 77       	andi	r20, 0x7F	; 127
     6fc:	9f ef       	ldi	r25, 0xFF	; 255
     6fe:	94 0f       	add	r25, r20
     700:	94 30       	cpi	r25, 0x04	; 4
     702:	d0 f4       	brcc	.+52     	; 0x738 <__vector_11+0x2ce>
     704:	9e ef       	ldi	r25, 0xFE	; 254
     706:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     70a:	40 93 e9 00 	sts	0x00E9, r20	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     70e:	83 30       	cpi	r24, 0x03	; 3
     710:	21 f4       	brne	.+8      	; 0x71a <__vector_11+0x2b0>
     712:	81 e2       	ldi	r24, 0x21	; 33
     714:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     718:	16 c0       	rjmp	.+44     	; 0x746 <__vector_11+0x2dc>
     71a:	89 e1       	ldi	r24, 0x19	; 25
     71c:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     720:	81 e0       	ldi	r24, 0x01	; 1
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	02 c0       	rjmp	.+4      	; 0x72a <__vector_11+0x2c0>
     726:	88 0f       	add	r24, r24
     728:	99 1f       	adc	r25, r25
     72a:	4a 95       	dec	r20
     72c:	e2 f7       	brpl	.-8      	; 0x726 <__vector_11+0x2bc>
     72e:	ea ee       	ldi	r30, 0xEA	; 234
     730:	f0 e0       	ldi	r31, 0x00	; 0
     732:	80 83       	st	Z, r24
     734:	10 82       	st	Z, r1
     736:	07 c0       	rjmp	.+14     	; 0x746 <__vector_11+0x2dc>
     738:	81 e2       	ldi	r24, 0x21	; 33
     73a:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     73e:	03 c0       	rjmp	.+6      	; 0x746 <__vector_11+0x2dc>
     740:	6c 93       	st	X, r22
     742:	21 11       	cpse	r18, r1
     744:	f7 ce       	rjmp	.-530    	; 0x534 <__vector_11+0xca>
     746:	ff 91       	pop	r31
     748:	ef 91       	pop	r30
     74a:	df 91       	pop	r29
     74c:	cf 91       	pop	r28
     74e:	bf 91       	pop	r27
     750:	af 91       	pop	r26
     752:	9f 91       	pop	r25
     754:	8f 91       	pop	r24
     756:	7f 91       	pop	r23
     758:	6f 91       	pop	r22
     75a:	5f 91       	pop	r21
     75c:	4f 91       	pop	r20
     75e:	3f 91       	pop	r19
     760:	2f 91       	pop	r18
     762:	1f 91       	pop	r17
     764:	0f 91       	pop	r16
     766:	0f 90       	pop	r0
     768:	0f be       	out	0x3f, r0	; 63
     76a:	0f 90       	pop	r0
     76c:	1f 90       	pop	r1
     76e:	18 95       	reti

00000770 <setMainState>:
     770:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <current_mainstate>
     774:	08 95       	ret

00000776 <getMainState>:
     776:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <current_mainstate>
     77a:	08 95       	ret

0000077c <setPuckState>:
     77c:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <current_puckstate>
     780:	08 95       	ret

00000782 <getPuckState>:
     782:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <current_puckstate>
     786:	08 95       	ret

00000788 <setPosition>:
     788:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <current_position+0x1>
     78c:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <current_position>
     790:	08 95       	ret

00000792 <getPosition>:
     792:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <current_position>
     796:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <current_position+0x1>
     79a:	08 95       	ret

0000079c <set_power>:

void goStraight(float velocity, int direction)
{   
    left_on(velocity,direction);
	right_on(velocity,direction);
}
     79c:	60 93 45 01 	sts	0x0145, r22	; 0x800145 <power>
     7a0:	70 93 46 01 	sts	0x0146, r23	; 0x800146 <power+0x1>
     7a4:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <power+0x2>
     7a8:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <power+0x3>
     7ac:	08 95       	ret

000007ae <diff>:
     7ae:	cf 92       	push	r12
     7b0:	df 92       	push	r13
     7b2:	ef 92       	push	r14
     7b4:	ff 92       	push	r15
     7b6:	6b 01       	movw	r12, r22
     7b8:	7c 01       	movw	r14, r24
     7ba:	0e 94 c9 03 	call	0x792	; 0x792 <getPosition>
     7be:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <location+0x1>
     7c2:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <location>
     7c6:	fc 01       	movw	r30, r24
     7c8:	20 85       	ldd	r18, Z+8	; 0x08
     7ca:	31 85       	ldd	r19, Z+9	; 0x09
     7cc:	42 85       	ldd	r20, Z+10	; 0x0a
     7ce:	53 85       	ldd	r21, Z+11	; 0x0b
     7d0:	c7 01       	movw	r24, r14
     7d2:	b6 01       	movw	r22, r12
     7d4:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     7d8:	6b 01       	movw	r12, r22
     7da:	7c 01       	movw	r14, r24
     7dc:	26 c0       	rjmp	.+76     	; 0x82a <diff+0x7c>
     7de:	20 e0       	ldi	r18, 0x00	; 0
     7e0:	30 e0       	ldi	r19, 0x00	; 0
     7e2:	a9 01       	movw	r20, r18
     7e4:	c7 01       	movw	r24, r14
     7e6:	b6 01       	movw	r22, r12
     7e8:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     7ec:	18 16       	cp	r1, r24
     7ee:	7c f4       	brge	.+30     	; 0x80e <diff+0x60>
     7f0:	29 ef       	ldi	r18, 0xF9	; 249
     7f2:	3f e0       	ldi	r19, 0x0F	; 15
     7f4:	49 ec       	ldi	r20, 0xC9	; 201
     7f6:	50 e4       	ldi	r21, 0x40	; 64
     7f8:	c7 01       	movw	r24, r14
     7fa:	b6 01       	movw	r22, r12
     7fc:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     800:	46 2f       	mov	r20, r22
     802:	57 2f       	mov	r21, r23
     804:	68 2f       	mov	r22, r24
     806:	79 2f       	mov	r23, r25
     808:	6a 01       	movw	r12, r20
     80a:	7b 01       	movw	r14, r22
     80c:	0e c0       	rjmp	.+28     	; 0x82a <diff+0x7c>
     80e:	29 ef       	ldi	r18, 0xF9	; 249
     810:	3f e0       	ldi	r19, 0x0F	; 15
     812:	49 ec       	ldi	r20, 0xC9	; 201
     814:	50 e4       	ldi	r21, 0x40	; 64
     816:	c7 01       	movw	r24, r14
     818:	b6 01       	movw	r22, r12
     81a:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     81e:	46 2f       	mov	r20, r22
     820:	57 2f       	mov	r21, r23
     822:	68 2f       	mov	r22, r24
     824:	79 2f       	mov	r23, r25
     826:	6a 01       	movw	r12, r20
     828:	7b 01       	movw	r14, r22
     82a:	29 ef       	ldi	r18, 0xF9	; 249
     82c:	3f e0       	ldi	r19, 0x0F	; 15
     82e:	49 e4       	ldi	r20, 0x49	; 73
     830:	50 e4       	ldi	r21, 0x40	; 64
     832:	c7 01       	movw	r24, r14
     834:	b6 01       	movw	r22, r12
     836:	9f 77       	andi	r25, 0x7F	; 127
     838:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     83c:	18 16       	cp	r1, r24
     83e:	7c f2       	brlt	.-98     	; 0x7de <diff+0x30>
     840:	c0 92 3d 01 	sts	0x013D, r12	; 0x80013d <delta_angle>
     844:	d0 92 3e 01 	sts	0x013E, r13	; 0x80013e <delta_angle+0x1>
     848:	e0 92 3f 01 	sts	0x013F, r14	; 0x80013f <delta_angle+0x2>
     84c:	f0 92 40 01 	sts	0x0140, r15	; 0x800140 <delta_angle+0x3>
     850:	ff 90       	pop	r15
     852:	ef 90       	pop	r14
     854:	df 90       	pop	r13
     856:	cf 90       	pop	r12
     858:	08 95       	ret

0000085a <left_on>:
     85a:	cf 92       	push	r12
     85c:	df 92       	push	r13
     85e:	ef 92       	push	r14
     860:	ff 92       	push	r15
     862:	cf 93       	push	r28
     864:	df 93       	push	r29
     866:	6b 01       	movw	r12, r22
     868:	7c 01       	movw	r14, r24
     86a:	ea 01       	movw	r28, r20
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	30 e0       	ldi	r19, 0x00	; 0
     870:	40 e8       	ldi	r20, 0x80	; 128
     872:	5f e3       	ldi	r21, 0x3F	; 63
     874:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     878:	18 16       	cp	r1, r24
     87a:	44 f4       	brge	.+16     	; 0x88c <left_on+0x32>
     87c:	0f 2e       	mov	r0, r31
     87e:	c1 2c       	mov	r12, r1
     880:	d1 2c       	mov	r13, r1
     882:	f0 e8       	ldi	r31, 0x80	; 128
     884:	ef 2e       	mov	r14, r31
     886:	ff e3       	ldi	r31, 0x3F	; 63
     888:	ff 2e       	mov	r15, r31
     88a:	f0 2d       	mov	r31, r0
     88c:	21 97       	sbiw	r28, 0x01	; 1
     88e:	19 f4       	brne	.+6      	; 0x896 <left_on+0x3c>
     890:	28 9a       	sbi	0x05, 0	; 5
     892:	29 98       	cbi	0x05, 1	; 5
     894:	02 c0       	rjmp	.+4      	; 0x89a <left_on+0x40>
     896:	28 98       	cbi	0x05, 0	; 5
     898:	29 9a       	sbi	0x05, 1	; 5
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	94 e0       	ldi	r25, 0x04	; 4
     89e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     8a2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     8a6:	20 e0       	ldi	r18, 0x00	; 0
     8a8:	30 e0       	ldi	r19, 0x00	; 0
     8aa:	40 e8       	ldi	r20, 0x80	; 128
     8ac:	54 e4       	ldi	r21, 0x44	; 68
     8ae:	c7 01       	movw	r24, r14
     8b0:	b6 01       	movw	r22, r12
     8b2:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
     8b6:	0e 94 d8 13 	call	0x27b0	; 0x27b0 <__fixsfsi>
     8ba:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     8be:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     8c2:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <L_on>
     8c6:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <L_on+0x1>
     8ca:	89 2b       	or	r24, r25
     8cc:	31 f5       	brne	.+76     	; 0x91a <left_on+0xc0>
     8ce:	e1 e8       	ldi	r30, 0x81	; 129
     8d0:	f0 e0       	ldi	r31, 0x00	; 0
     8d2:	80 81       	ld	r24, Z
     8d4:	8b 7f       	andi	r24, 0xFB	; 251
     8d6:	80 83       	st	Z, r24
     8d8:	80 81       	ld	r24, Z
     8da:	82 60       	ori	r24, 0x02	; 2
     8dc:	80 83       	st	Z, r24
     8de:	80 81       	ld	r24, Z
     8e0:	8e 7f       	andi	r24, 0xFE	; 254
     8e2:	80 83       	st	Z, r24
     8e4:	80 81       	ld	r24, Z
     8e6:	80 61       	ori	r24, 0x10	; 16
     8e8:	80 83       	st	Z, r24
     8ea:	80 81       	ld	r24, Z
     8ec:	88 60       	ori	r24, 0x08	; 8
     8ee:	80 83       	st	Z, r24
     8f0:	e0 e8       	ldi	r30, 0x80	; 128
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	80 81       	ld	r24, Z
     8f6:	82 60       	ori	r24, 0x02	; 2
     8f8:	80 83       	st	Z, r24
     8fa:	80 81       	ld	r24, Z
     8fc:	81 60       	ori	r24, 0x01	; 1
     8fe:	80 83       	st	Z, r24
     900:	80 81       	ld	r24, Z
     902:	80 62       	ori	r24, 0x20	; 32
     904:	80 83       	st	Z, r24
     906:	80 81       	ld	r24, Z
     908:	8f 7e       	andi	r24, 0xEF	; 239
     90a:	80 83       	st	Z, r24
     90c:	26 9a       	sbi	0x04, 6	; 4
     90e:	81 e0       	ldi	r24, 0x01	; 1
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <L_on+0x1>
     916:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <L_on>
     91a:	df 91       	pop	r29
     91c:	cf 91       	pop	r28
     91e:	ff 90       	pop	r15
     920:	ef 90       	pop	r14
     922:	df 90       	pop	r13
     924:	cf 90       	pop	r12
     926:	08 95       	ret

00000928 <right_on>:
     928:	cf 92       	push	r12
     92a:	df 92       	push	r13
     92c:	ef 92       	push	r14
     92e:	ff 92       	push	r15
     930:	cf 93       	push	r28
     932:	df 93       	push	r29
     934:	6b 01       	movw	r12, r22
     936:	7c 01       	movw	r14, r24
     938:	ea 01       	movw	r28, r20
     93a:	20 e0       	ldi	r18, 0x00	; 0
     93c:	30 e0       	ldi	r19, 0x00	; 0
     93e:	40 e8       	ldi	r20, 0x80	; 128
     940:	5f e3       	ldi	r21, 0x3F	; 63
     942:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     946:	18 16       	cp	r1, r24
     948:	44 f4       	brge	.+16     	; 0x95a <right_on+0x32>
     94a:	0f 2e       	mov	r0, r31
     94c:	c1 2c       	mov	r12, r1
     94e:	d1 2c       	mov	r13, r1
     950:	f0 e8       	ldi	r31, 0x80	; 128
     952:	ef 2e       	mov	r14, r31
     954:	ff e3       	ldi	r31, 0x3F	; 63
     956:	ff 2e       	mov	r15, r31
     958:	f0 2d       	mov	r31, r0
     95a:	21 97       	sbiw	r28, 0x01	; 1
     95c:	19 f4       	brne	.+6      	; 0x964 <right_on+0x3c>
     95e:	2a 9a       	sbi	0x05, 2	; 5
     960:	2b 98       	cbi	0x05, 3	; 5
     962:	02 c0       	rjmp	.+4      	; 0x968 <right_on+0x40>
     964:	2a 98       	cbi	0x05, 2	; 5
     966:	2b 9a       	sbi	0x05, 3	; 5
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	94 e0       	ldi	r25, 0x04	; 4
     96c:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__TEXT_REGION_LENGTH__+0x7e0097>
     970:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__TEXT_REGION_LENGTH__+0x7e0096>
     974:	20 e0       	ldi	r18, 0x00	; 0
     976:	30 e0       	ldi	r19, 0x00	; 0
     978:	40 e8       	ldi	r20, 0x80	; 128
     97a:	54 e4       	ldi	r21, 0x44	; 68
     97c:	c7 01       	movw	r24, r14
     97e:	b6 01       	movw	r22, r12
     980:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
     984:	0e 94 d8 13 	call	0x27b0	; 0x27b0 <__fixsfsi>
     988:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     98c:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     990:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <R_on>
     994:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <R_on+0x1>
     998:	89 2b       	or	r24, r25
     99a:	31 f5       	brne	.+76     	; 0x9e8 <right_on+0xc0>
     99c:	e1 e9       	ldi	r30, 0x91	; 145
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	80 81       	ld	r24, Z
     9a2:	8b 7f       	andi	r24, 0xFB	; 251
     9a4:	80 83       	st	Z, r24
     9a6:	80 81       	ld	r24, Z
     9a8:	82 60       	ori	r24, 0x02	; 2
     9aa:	80 83       	st	Z, r24
     9ac:	80 81       	ld	r24, Z
     9ae:	8e 7f       	andi	r24, 0xFE	; 254
     9b0:	80 83       	st	Z, r24
     9b2:	80 81       	ld	r24, Z
     9b4:	80 61       	ori	r24, 0x10	; 16
     9b6:	80 83       	st	Z, r24
     9b8:	80 81       	ld	r24, Z
     9ba:	88 60       	ori	r24, 0x08	; 8
     9bc:	80 83       	st	Z, r24
     9be:	e0 e9       	ldi	r30, 0x90	; 144
     9c0:	f0 e0       	ldi	r31, 0x00	; 0
     9c2:	80 81       	ld	r24, Z
     9c4:	82 60       	ori	r24, 0x02	; 2
     9c6:	80 83       	st	Z, r24
     9c8:	80 81       	ld	r24, Z
     9ca:	8e 7f       	andi	r24, 0xFE	; 254
     9cc:	80 83       	st	Z, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	80 68       	ori	r24, 0x80	; 128
     9d2:	80 83       	st	Z, r24
     9d4:	80 81       	ld	r24, Z
     9d6:	8f 7b       	andi	r24, 0xBF	; 191
     9d8:	80 83       	st	Z, r24
     9da:	3e 9a       	sbi	0x07, 6	; 7
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <R_on+0x1>
     9e4:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <R_on>
     9e8:	df 91       	pop	r29
     9ea:	cf 91       	pop	r28
     9ec:	ff 90       	pop	r15
     9ee:	ef 90       	pop	r14
     9f0:	df 90       	pop	r13
     9f2:	cf 90       	pop	r12
     9f4:	08 95       	ret

000009f6 <search>:
     9f6:	0e 94 c9 03 	call	0x792	; 0x792 <getPosition>
     9fa:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <location+0x1>
     9fe:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <location>
     a02:	41 e0       	ldi	r20, 0x01	; 1
     a04:	50 e0       	ldi	r21, 0x00	; 0
     a06:	6d ec       	ldi	r22, 0xCD	; 205
     a08:	7c ec       	ldi	r23, 0xCC	; 204
     a0a:	8c e4       	ldi	r24, 0x4C	; 76
     a0c:	9e e3       	ldi	r25, 0x3E	; 62
     a0e:	0e 94 94 04 	call	0x928	; 0x928 <right_on>
     a12:	40 e0       	ldi	r20, 0x00	; 0
     a14:	50 e0       	ldi	r21, 0x00	; 0
     a16:	6d ec       	ldi	r22, 0xCD	; 205
     a18:	7c ec       	ldi	r23, 0xCC	; 204
     a1a:	8c e4       	ldi	r24, 0x4C	; 76
     a1c:	9e e3       	ldi	r25, 0x3E	; 62
     a1e:	0e 94 2d 04 	call	0x85a	; 0x85a <left_on>
     a22:	08 95       	ret

00000a24 <move>:

void move(int x, int y){
     a24:	4f 92       	push	r4
     a26:	5f 92       	push	r5
     a28:	6f 92       	push	r6
     a2a:	7f 92       	push	r7
     a2c:	8f 92       	push	r8
     a2e:	9f 92       	push	r9
     a30:	af 92       	push	r10
     a32:	bf 92       	push	r11
     a34:	cf 92       	push	r12
     a36:	df 92       	push	r13
     a38:	ef 92       	push	r14
     a3a:	ff 92       	push	r15
     a3c:	0f 93       	push	r16
     a3e:	1f 93       	push	r17
     a40:	cf 93       	push	r28
     a42:	df 93       	push	r29
     a44:	7c 01       	movw	r14, r24
     a46:	8b 01       	movw	r16, r22
    location = getPosition();
     a48:	0e 94 c9 03 	call	0x792	; 0x792 <getPosition>
     a4c:	ec 01       	movw	r28, r24
     a4e:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <location+0x1>
     a52:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <location>
    float target_angle = atan2f(y - location[1], x - location[0]);
     a56:	b7 01       	movw	r22, r14
     a58:	ff 0c       	add	r15, r15
     a5a:	88 0b       	sbc	r24, r24
     a5c:	99 0b       	sbc	r25, r25
     a5e:	0e 94 10 14 	call	0x2820	; 0x2820 <__floatsisf>
     a62:	28 81       	ld	r18, Y
     a64:	39 81       	ldd	r19, Y+1	; 0x01
     a66:	4a 81       	ldd	r20, Y+2	; 0x02
     a68:	5b 81       	ldd	r21, Y+3	; 0x03
     a6a:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     a6e:	6b 01       	movw	r12, r22
     a70:	7c 01       	movw	r14, r24
     a72:	b8 01       	movw	r22, r16
     a74:	11 0f       	add	r17, r17
     a76:	88 0b       	sbc	r24, r24
     a78:	99 0b       	sbc	r25, r25
     a7a:	0e 94 10 14 	call	0x2820	; 0x2820 <__floatsisf>
     a7e:	2c 81       	ldd	r18, Y+4	; 0x04
     a80:	3d 81       	ldd	r19, Y+5	; 0x05
     a82:	4e 81       	ldd	r20, Y+6	; 0x06
     a84:	5f 81       	ldd	r21, Y+7	; 0x07
     a86:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     a8a:	a7 01       	movw	r20, r14
     a8c:	96 01       	movw	r18, r12
     a8e:	0e 94 fd 12 	call	0x25fa	; 0x25fa <atan2>

    //change target angle to positive 0-2pi
    //if(target_angle < 0) {target_angle = target_angle + 2 * pi;}
    diff(target_angle); //update delta angle
     a92:	0e 94 d7 03 	call	0x7ae	; 0x7ae <diff>

	float P_move;
	static float I_move;
	float D_move;
	//drive PID
	P_move = delta_angle * Kp_move; // Proportional
     a96:	c0 90 3d 01 	lds	r12, 0x013D	; 0x80013d <delta_angle>
     a9a:	d0 90 3e 01 	lds	r13, 0x013E	; 0x80013e <delta_angle+0x1>
     a9e:	e0 90 3f 01 	lds	r14, 0x013F	; 0x80013f <delta_angle+0x2>
     aa2:	f0 90 40 01 	lds	r15, 0x0140	; 0x800140 <delta_angle+0x3>
	I_move = I_move + delta_angle * Ki_move; // Integral
     aa6:	20 e0       	ldi	r18, 0x00	; 0
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	a9 01       	movw	r20, r18
     aac:	c7 01       	movw	r24, r14
     aae:	b6 01       	movw	r22, r12
     ab0:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
     ab4:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <I_move.1861>
     ab8:	30 91 2c 01 	lds	r19, 0x012C	; 0x80012c <I_move.1861+0x1>
     abc:	40 91 2d 01 	lds	r20, 0x012D	; 0x80012d <I_move.1861+0x2>
     ac0:	50 91 2e 01 	lds	r21, 0x012E	; 0x80012e <I_move.1861+0x3>
     ac4:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     ac8:	4b 01       	movw	r8, r22
     aca:	5c 01       	movw	r10, r24
     acc:	60 93 2b 01 	sts	0x012B, r22	; 0x80012b <I_move.1861>
     ad0:	70 93 2c 01 	sts	0x012C, r23	; 0x80012c <I_move.1861+0x1>
     ad4:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <I_move.1861+0x2>
     ad8:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <I_move.1861+0x3>
	D_move = (delta_angle - delta_angle_prev) * Kd_move; // Derivative
     adc:	20 91 41 01 	lds	r18, 0x0141	; 0x800141 <delta_angle_prev>
     ae0:	30 91 42 01 	lds	r19, 0x0142	; 0x800142 <delta_angle_prev+0x1>
     ae4:	40 91 43 01 	lds	r20, 0x0143	; 0x800143 <delta_angle_prev+0x2>
     ae8:	50 91 44 01 	lds	r21, 0x0144	; 0x800144 <delta_angle_prev+0x3>
     aec:	c7 01       	movw	r24, r14
     aee:	b6 01       	movw	r22, r12
     af0:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     af4:	20 e0       	ldi	r18, 0x00	; 0
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	a9 01       	movw	r20, r18
     afa:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
     afe:	2b 01       	movw	r4, r22
     b00:	3c 01       	movw	r6, r24
	delta_angle_prev = delta_angle;
     b02:	c0 92 41 01 	sts	0x0141, r12	; 0x800141 <delta_angle_prev>
     b06:	d0 92 42 01 	sts	0x0142, r13	; 0x800142 <delta_angle_prev+0x1>
     b0a:	e0 92 43 01 	sts	0x0143, r14	; 0x800143 <delta_angle_prev+0x2>
     b0e:	f0 92 44 01 	sts	0x0144, r15	; 0x800144 <delta_angle_prev+0x3>

	float P_move;
	static float I_move;
	float D_move;
	//drive PID
	P_move = delta_angle * Kp_move; // Proportional
     b12:	20 e0       	ldi	r18, 0x00	; 0
     b14:	30 e0       	ldi	r19, 0x00	; 0
     b16:	40 e0       	ldi	r20, 0x00	; 0
     b18:	5f e3       	ldi	r21, 0x3F	; 63
     b1a:	c7 01       	movw	r24, r14
     b1c:	b6 01       	movw	r22, r12
     b1e:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
	I_move = I_move + delta_angle * Ki_move; // Integral
	D_move = (delta_angle - delta_angle_prev) * Kd_move; // Derivative
	delta_angle_prev = delta_angle;
	
	float PID_move = fabs(P_move+I_move+D_move);
     b22:	a5 01       	movw	r20, r10
     b24:	94 01       	movw	r18, r8
     b26:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     b2a:	a3 01       	movw	r20, r6
     b2c:	92 01       	movw	r18, r4
     b2e:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     b32:	4b 01       	movw	r8, r22
     b34:	5c 01       	movw	r10, r24
     b36:	e8 94       	clt
     b38:	b7 f8       	bld	r11, 7
	if(PID_move > 1) {PID_move = 1;}
     b3a:	20 e0       	ldi	r18, 0x00	; 0
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	40 e8       	ldi	r20, 0x80	; 128
     b40:	5f e3       	ldi	r21, 0x3F	; 63
     b42:	c5 01       	movw	r24, r10
     b44:	b4 01       	movw	r22, r8
     b46:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     b4a:	18 16       	cp	r1, r24
     b4c:	44 f4       	brge	.+16     	; 0xb5e <__stack+0x5f>
     b4e:	0f 2e       	mov	r0, r31
     b50:	81 2c       	mov	r8, r1
     b52:	91 2c       	mov	r9, r1
     b54:	f0 e8       	ldi	r31, 0x80	; 128
     b56:	af 2e       	mov	r10, r31
     b58:	ff e3       	ldi	r31, 0x3F	; 63
     b5a:	bf 2e       	mov	r11, r31
     b5c:	f0 2d       	mov	r31, r0
    if(fabs(delta_angle) > Max_delta_angle) {
     b5e:	29 ef       	ldi	r18, 0xF9	; 249
     b60:	3f e0       	ldi	r19, 0x0F	; 15
     b62:	49 ec       	ldi	r20, 0xC9	; 201
     b64:	5f e3       	ldi	r21, 0x3F	; 63
     b66:	c7 01       	movw	r24, r14
     b68:	b6 01       	movw	r22, r12
     b6a:	9f 77       	andi	r25, 0x7F	; 127
     b6c:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     b70:	18 16       	cp	r1, r24
     b72:	1c f5       	brge	.+70     	; 0xbba <__stack+0xbb>
	    if(delta_angle > 0) 
     b74:	20 e0       	ldi	r18, 0x00	; 0
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	a9 01       	movw	r20, r18
     b7a:	c7 01       	movw	r24, r14
     b7c:	b6 01       	movw	r22, r12
     b7e:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     b82:	18 16       	cp	r1, r24
     b84:	6c f4       	brge	.+26     	; 0xba0 <__stack+0xa1>
		     {left_on(PID_move, forwards);
     b86:	41 e0       	ldi	r20, 0x01	; 1
     b88:	50 e0       	ldi	r21, 0x00	; 0
     b8a:	c5 01       	movw	r24, r10
     b8c:	b4 01       	movw	r22, r8
     b8e:	0e 94 2d 04 	call	0x85a	; 0x85a <left_on>
		      right_on(PID_move, backwards);} 
     b92:	40 e0       	ldi	r20, 0x00	; 0
     b94:	50 e0       	ldi	r21, 0x00	; 0
     b96:	c5 01       	movw	r24, r10
     b98:	b4 01       	movw	r22, r8
     b9a:	0e 94 94 04 	call	0x928	; 0x928 <right_on>
     b9e:	c2 c0       	rjmp	.+388    	; 0xd24 <__stack+0x225>
		else {left_on(PID_move, backwards);
     ba0:	40 e0       	ldi	r20, 0x00	; 0
     ba2:	50 e0       	ldi	r21, 0x00	; 0
     ba4:	c5 01       	movw	r24, r10
     ba6:	b4 01       	movw	r22, r8
     ba8:	0e 94 2d 04 	call	0x85a	; 0x85a <left_on>
		      right_on(PID_move, forwards);}
     bac:	41 e0       	ldi	r20, 0x01	; 1
     bae:	50 e0       	ldi	r21, 0x00	; 0
     bb0:	c5 01       	movw	r24, r10
     bb2:	b4 01       	movw	r22, r8
     bb4:	0e 94 94 04 	call	0x928	; 0x928 <right_on>
     bb8:	b5 c0       	rjmp	.+362    	; 0xd24 <__stack+0x225>
	    } 
	else {
	    float left_power;
	    float right_power;
	    if (delta_angle > 0)
     bba:	20 e0       	ldi	r18, 0x00	; 0
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	a9 01       	movw	r20, r18
     bc0:	c7 01       	movw	r24, r14
     bc2:	b6 01       	movw	r22, r12
     bc4:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     bc8:	18 16       	cp	r1, r24
     bca:	ec f4       	brge	.+58     	; 0xc06 <__stack+0x107>
	    {left_power = power + PID_move;
     bcc:	c0 90 45 01 	lds	r12, 0x0145	; 0x800145 <power>
     bd0:	d0 90 46 01 	lds	r13, 0x0146	; 0x800146 <power+0x1>
     bd4:	e0 90 47 01 	lds	r14, 0x0147	; 0x800147 <power+0x2>
     bd8:	f0 90 48 01 	lds	r15, 0x0148	; 0x800148 <power+0x3>
     bdc:	a5 01       	movw	r20, r10
     bde:	94 01       	movw	r18, r8
     be0:	c7 01       	movw	r24, r14
     be2:	b6 01       	movw	r22, r12
     be4:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     be8:	06 2f       	mov	r16, r22
     bea:	17 2f       	mov	r17, r23
     bec:	d8 2f       	mov	r29, r24
     bee:	c9 2f       	mov	r28, r25
	    right_power = power - PID_move;}// !careful direction
     bf0:	a5 01       	movw	r20, r10
     bf2:	94 01       	movw	r18, r8
     bf4:	c7 01       	movw	r24, r14
     bf6:	b6 01       	movw	r22, r12
     bf8:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     bfc:	d6 2e       	mov	r13, r22
     bfe:	c7 2e       	mov	r12, r23
     c00:	f8 2e       	mov	r15, r24
     c02:	e9 2e       	mov	r14, r25
     c04:	3a c0       	rjmp	.+116    	; 0xc7a <__stack+0x17b>
	    else if (delta_angle < 0) {
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	a9 01       	movw	r20, r18
     c0c:	c7 01       	movw	r24, r14
     c0e:	b6 01       	movw	r22, r12
     c10:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
     c14:	88 23       	and	r24, r24
     c16:	ec f4       	brge	.+58     	; 0xc52 <__stack+0x153>
		    left_power = power - PID_move;
     c18:	c0 90 45 01 	lds	r12, 0x0145	; 0x800145 <power>
     c1c:	d0 90 46 01 	lds	r13, 0x0146	; 0x800146 <power+0x1>
     c20:	e0 90 47 01 	lds	r14, 0x0147	; 0x800147 <power+0x2>
     c24:	f0 90 48 01 	lds	r15, 0x0148	; 0x800148 <power+0x3>
     c28:	a5 01       	movw	r20, r10
     c2a:	94 01       	movw	r18, r8
     c2c:	c7 01       	movw	r24, r14
     c2e:	b6 01       	movw	r22, r12
     c30:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     c34:	06 2f       	mov	r16, r22
     c36:	17 2f       	mov	r17, r23
     c38:	d8 2f       	mov	r29, r24
     c3a:	c9 2f       	mov	r28, r25
		    right_power = power + PID_move;
     c3c:	a7 01       	movw	r20, r14
     c3e:	96 01       	movw	r18, r12
     c40:	c5 01       	movw	r24, r10
     c42:	b4 01       	movw	r22, r8
     c44:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     c48:	d6 2e       	mov	r13, r22
     c4a:	c7 2e       	mov	r12, r23
     c4c:	f8 2e       	mov	r15, r24
     c4e:	e9 2e       	mov	r14, r25
     c50:	14 c0       	rjmp	.+40     	; 0xc7a <__stack+0x17b>
	    }
		else {left_power = power + PID_move;
     c52:	20 91 45 01 	lds	r18, 0x0145	; 0x800145 <power>
     c56:	30 91 46 01 	lds	r19, 0x0146	; 0x800146 <power+0x1>
     c5a:	40 91 47 01 	lds	r20, 0x0147	; 0x800147 <power+0x2>
     c5e:	50 91 48 01 	lds	r21, 0x0148	; 0x800148 <power+0x3>
     c62:	c5 01       	movw	r24, r10
     c64:	b4 01       	movw	r22, r8
     c66:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     c6a:	06 2f       	mov	r16, r22
     c6c:	17 2f       	mov	r17, r23
     c6e:	d8 2f       	mov	r29, r24
     c70:	c9 2f       	mov	r28, r25
			right_power = power + PID_move;}
     c72:	d6 2e       	mov	r13, r22
     c74:	c7 2e       	mov	r12, r23
     c76:	f8 2e       	mov	r15, r24
     c78:	e9 2e       	mov	r14, r25

	    if(left_power > 1) {left_power = 1;}
     c7a:	20 e0       	ldi	r18, 0x00	; 0
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	40 e8       	ldi	r20, 0x80	; 128
     c80:	5f e3       	ldi	r21, 0x3F	; 63
     c82:	60 2f       	mov	r22, r16
     c84:	71 2f       	mov	r23, r17
     c86:	8d 2f       	mov	r24, r29
     c88:	9c 2f       	mov	r25, r28
     c8a:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     c8e:	18 16       	cp	r1, r24
     c90:	84 f0       	brlt	.+32     	; 0xcb2 <__stack+0x1b3>
	    if(left_power < 0) {left_power = 0;}
     c92:	20 e0       	ldi	r18, 0x00	; 0
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	a9 01       	movw	r20, r18
     c98:	60 2f       	mov	r22, r16
     c9a:	71 2f       	mov	r23, r17
     c9c:	8d 2f       	mov	r24, r29
     c9e:	9c 2f       	mov	r25, r28
     ca0:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
     ca4:	88 23       	and	r24, r24
     ca6:	4c f4       	brge	.+18     	; 0xcba <__stack+0x1bb>
     ca8:	00 e0       	ldi	r16, 0x00	; 0
     caa:	10 e0       	ldi	r17, 0x00	; 0
     cac:	d0 e0       	ldi	r29, 0x00	; 0
     cae:	c0 e0       	ldi	r28, 0x00	; 0
     cb0:	04 c0       	rjmp	.+8      	; 0xcba <__stack+0x1bb>
		    right_power = power + PID_move;
	    }
		else {left_power = power + PID_move;
			right_power = power + PID_move;}

	    if(left_power > 1) {left_power = 1;}
     cb2:	00 e0       	ldi	r16, 0x00	; 0
     cb4:	10 e0       	ldi	r17, 0x00	; 0
     cb6:	d0 e8       	ldi	r29, 0x80	; 128
     cb8:	cf e3       	ldi	r28, 0x3F	; 63
	    if(left_power < 0) {left_power = 0;}
	    if(right_power > 1) {right_power = 1;}
     cba:	20 e0       	ldi	r18, 0x00	; 0
     cbc:	30 e0       	ldi	r19, 0x00	; 0
     cbe:	40 e8       	ldi	r20, 0x80	; 128
     cc0:	5f e3       	ldi	r21, 0x3F	; 63
     cc2:	6d 2d       	mov	r22, r13
     cc4:	7c 2d       	mov	r23, r12
     cc6:	8f 2d       	mov	r24, r15
     cc8:	9e 2d       	mov	r25, r14
     cca:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     cce:	18 16       	cp	r1, r24
     cd0:	84 f0       	brlt	.+32     	; 0xcf2 <__stack+0x1f3>
	    if(right_power < 0) {right_power = 0;}
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	a9 01       	movw	r20, r18
     cd8:	6d 2d       	mov	r22, r13
     cda:	7c 2d       	mov	r23, r12
     cdc:	8f 2d       	mov	r24, r15
     cde:	9e 2d       	mov	r25, r14
     ce0:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
     ce4:	88 23       	and	r24, r24
     ce6:	74 f4       	brge	.+28     	; 0xd04 <__stack+0x205>
     ce8:	d1 2c       	mov	r13, r1
     cea:	c1 2c       	mov	r12, r1
     cec:	f1 2c       	mov	r15, r1
     cee:	e1 2c       	mov	r14, r1
     cf0:	09 c0       	rjmp	.+18     	; 0xd04 <__stack+0x205>
		else {left_power = power + PID_move;
			right_power = power + PID_move;}

	    if(left_power > 1) {left_power = 1;}
	    if(left_power < 0) {left_power = 0;}
	    if(right_power > 1) {right_power = 1;}
     cf2:	d1 2c       	mov	r13, r1
     cf4:	c1 2c       	mov	r12, r1
     cf6:	68 94       	set
     cf8:	ff 24       	eor	r15, r15
     cfa:	f7 f8       	bld	r15, 7
     cfc:	0f 2e       	mov	r0, r31
     cfe:	ff e3       	ldi	r31, 0x3F	; 63
     d00:	ef 2e       	mov	r14, r31
     d02:	f0 2d       	mov	r31, r0
	    if(right_power < 0) {right_power = 0;}

	    left_on(left_power, forwards);
     d04:	41 e0       	ldi	r20, 0x01	; 1
     d06:	50 e0       	ldi	r21, 0x00	; 0
     d08:	60 2f       	mov	r22, r16
     d0a:	71 2f       	mov	r23, r17
     d0c:	8d 2f       	mov	r24, r29
     d0e:	9c 2f       	mov	r25, r28
     d10:	0e 94 2d 04 	call	0x85a	; 0x85a <left_on>
	    right_on(right_power, forwards);
     d14:	41 e0       	ldi	r20, 0x01	; 1
     d16:	50 e0       	ldi	r21, 0x00	; 0
     d18:	6d 2d       	mov	r22, r13
     d1a:	7c 2d       	mov	r23, r12
     d1c:	8f 2d       	mov	r24, r15
     d1e:	9e 2d       	mov	r25, r14
     d20:	0e 94 94 04 	call	0x928	; 0x928 <right_on>
    }

    //if(fabs(location[0] - target_x) < 5 && fabs(location[1] - target_y) < 5) 
	//{stop();}
}
     d24:	df 91       	pop	r29
     d26:	cf 91       	pop	r28
     d28:	1f 91       	pop	r17
     d2a:	0f 91       	pop	r16
     d2c:	ff 90       	pop	r15
     d2e:	ef 90       	pop	r14
     d30:	df 90       	pop	r13
     d32:	cf 90       	pop	r12
     d34:	bf 90       	pop	r11
     d36:	af 90       	pop	r10
     d38:	9f 90       	pop	r9
     d3a:	8f 90       	pop	r8
     d3c:	7f 90       	pop	r7
     d3e:	6f 90       	pop	r6
     d40:	5f 90       	pop	r5
     d42:	4f 90       	pop	r4
     d44:	08 95       	ret

00000d46 <curve>:

void curve(float turn_target) // angle = puck_angle
{
     d46:	4f 92       	push	r4
     d48:	5f 92       	push	r5
     d4a:	6f 92       	push	r6
     d4c:	7f 92       	push	r7
     d4e:	8f 92       	push	r8
     d50:	9f 92       	push	r9
     d52:	af 92       	push	r10
     d54:	bf 92       	push	r11
     d56:	cf 92       	push	r12
     d58:	df 92       	push	r13
     d5a:	ef 92       	push	r14
     d5c:	ff 92       	push	r15
     d5e:	0f 93       	push	r16
     d60:	1f 93       	push	r17
     d62:	cf 93       	push	r28
     d64:	df 93       	push	r29
     d66:	6b 01       	movw	r12, r22
     d68:	7c 01       	movw	r14, r24
pk_angle = turn_target;
     d6a:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <pk_angle>
     d6e:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <pk_angle+0x1>
     d72:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <pk_angle+0x2>
     d76:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <pk_angle+0x3>
float P_curve = 0;
static float I_curve = 0;
float D_curve = 0;
//drive PID
P_curve = pk_angle * Kp_curve; // Proportional
I_curve = I_curve + pk_angle * Ki_curve; // Integral
     d7a:	20 e0       	ldi	r18, 0x00	; 0
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	a9 01       	movw	r20, r18
     d80:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
     d84:	20 91 27 01 	lds	r18, 0x0127	; 0x800127 <I_curve.1870>
     d88:	30 91 28 01 	lds	r19, 0x0128	; 0x800128 <I_curve.1870+0x1>
     d8c:	40 91 29 01 	lds	r20, 0x0129	; 0x800129 <I_curve.1870+0x2>
     d90:	50 91 2a 01 	lds	r21, 0x012A	; 0x80012a <I_curve.1870+0x3>
     d94:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     d98:	4b 01       	movw	r8, r22
     d9a:	5c 01       	movw	r10, r24
     d9c:	60 93 27 01 	sts	0x0127, r22	; 0x800127 <I_curve.1870>
     da0:	70 93 28 01 	sts	0x0128, r23	; 0x800128 <I_curve.1870+0x1>
     da4:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <I_curve.1870+0x2>
     da8:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <I_curve.1870+0x3>
D_curve = (pk_angle - pk_angle_prev) * Kd_curve; // Derivative
     dac:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <pk_angle_prev>
     db0:	30 91 36 01 	lds	r19, 0x0136	; 0x800136 <pk_angle_prev+0x1>
     db4:	40 91 37 01 	lds	r20, 0x0137	; 0x800137 <pk_angle_prev+0x2>
     db8:	50 91 38 01 	lds	r21, 0x0138	; 0x800138 <pk_angle_prev+0x3>
     dbc:	c7 01       	movw	r24, r14
     dbe:	b6 01       	movw	r22, r12
     dc0:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     dc4:	20 e0       	ldi	r18, 0x00	; 0
     dc6:	30 e0       	ldi	r19, 0x00	; 0
     dc8:	a9 01       	movw	r20, r18
     dca:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
     dce:	2b 01       	movw	r4, r22
     dd0:	3c 01       	movw	r6, r24
pk_angle_prev = pk_angle;
     dd2:	c0 92 35 01 	sts	0x0135, r12	; 0x800135 <pk_angle_prev>
     dd6:	d0 92 36 01 	sts	0x0136, r13	; 0x800136 <pk_angle_prev+0x1>
     dda:	e0 92 37 01 	sts	0x0137, r14	; 0x800137 <pk_angle_prev+0x2>
     dde:	f0 92 38 01 	sts	0x0138, r15	; 0x800138 <pk_angle_prev+0x3>

float P_curve = 0;
static float I_curve = 0;
float D_curve = 0;
//drive PID
P_curve = pk_angle * Kp_curve; // Proportional
     de2:	2a e9       	ldi	r18, 0x9A	; 154
     de4:	39 e9       	ldi	r19, 0x99	; 153
     de6:	49 e1       	ldi	r20, 0x19	; 25
     de8:	5f e3       	ldi	r21, 0x3F	; 63
     dea:	c7 01       	movw	r24, r14
     dec:	b6 01       	movw	r22, r12
     dee:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
I_curve = I_curve + pk_angle * Ki_curve; // Integral
D_curve = (pk_angle - pk_angle_prev) * Kd_curve; // Derivative
pk_angle_prev = pk_angle;

float PID_curve = fabs(P_curve + I_curve + D_curve);
     df2:	a5 01       	movw	r20, r10
     df4:	94 01       	movw	r18, r8
     df6:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     dfa:	a3 01       	movw	r20, r6
     dfc:	92 01       	movw	r18, r4
     dfe:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     e02:	4b 01       	movw	r8, r22
     e04:	5c 01       	movw	r10, r24
     e06:	e8 94       	clt
     e08:	b7 f8       	bld	r11, 7

float left_power;
float right_power;
if (pk_angle > 0)
     e0a:	20 e0       	ldi	r18, 0x00	; 0
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	a9 01       	movw	r20, r18
     e10:	c7 01       	movw	r24, r14
     e12:	b6 01       	movw	r22, r12
     e14:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     e18:	18 16       	cp	r1, r24
     e1a:	ec f4       	brge	.+58     	; 0xe56 <curve+0x110>
{left_power = power + PID_curve;
     e1c:	c0 90 45 01 	lds	r12, 0x0145	; 0x800145 <power>
     e20:	d0 90 46 01 	lds	r13, 0x0146	; 0x800146 <power+0x1>
     e24:	e0 90 47 01 	lds	r14, 0x0147	; 0x800147 <power+0x2>
     e28:	f0 90 48 01 	lds	r15, 0x0148	; 0x800148 <power+0x3>
     e2c:	a5 01       	movw	r20, r10
     e2e:	94 01       	movw	r18, r8
     e30:	c7 01       	movw	r24, r14
     e32:	b6 01       	movw	r22, r12
     e34:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     e38:	06 2f       	mov	r16, r22
     e3a:	17 2f       	mov	r17, r23
     e3c:	d8 2f       	mov	r29, r24
     e3e:	c9 2f       	mov	r28, r25
 right_power = power - PID_curve;}// !careful direction
     e40:	a5 01       	movw	r20, r10
     e42:	94 01       	movw	r18, r8
     e44:	c7 01       	movw	r24, r14
     e46:	b6 01       	movw	r22, r12
     e48:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     e4c:	d6 2e       	mov	r13, r22
     e4e:	c7 2e       	mov	r12, r23
     e50:	f8 2e       	mov	r15, r24
     e52:	e9 2e       	mov	r14, r25
     e54:	3a c0       	rjmp	.+116    	; 0xeca <curve+0x184>
else if (pk_angle < 0) {
     e56:	20 e0       	ldi	r18, 0x00	; 0
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	a9 01       	movw	r20, r18
     e5c:	c7 01       	movw	r24, r14
     e5e:	b6 01       	movw	r22, r12
     e60:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
     e64:	88 23       	and	r24, r24
     e66:	ec f4       	brge	.+58     	; 0xea2 <curve+0x15c>
	left_power = power - PID_curve;
     e68:	c0 90 45 01 	lds	r12, 0x0145	; 0x800145 <power>
     e6c:	d0 90 46 01 	lds	r13, 0x0146	; 0x800146 <power+0x1>
     e70:	e0 90 47 01 	lds	r14, 0x0147	; 0x800147 <power+0x2>
     e74:	f0 90 48 01 	lds	r15, 0x0148	; 0x800148 <power+0x3>
     e78:	a5 01       	movw	r20, r10
     e7a:	94 01       	movw	r18, r8
     e7c:	c7 01       	movw	r24, r14
     e7e:	b6 01       	movw	r22, r12
     e80:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
     e84:	06 2f       	mov	r16, r22
     e86:	17 2f       	mov	r17, r23
     e88:	d8 2f       	mov	r29, r24
     e8a:	c9 2f       	mov	r28, r25
	right_power = power + PID_curve;
     e8c:	a7 01       	movw	r20, r14
     e8e:	96 01       	movw	r18, r12
     e90:	c5 01       	movw	r24, r10
     e92:	b4 01       	movw	r22, r8
     e94:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     e98:	d6 2e       	mov	r13, r22
     e9a:	c7 2e       	mov	r12, r23
     e9c:	f8 2e       	mov	r15, r24
     e9e:	e9 2e       	mov	r14, r25
     ea0:	14 c0       	rjmp	.+40     	; 0xeca <curve+0x184>
}
else {left_power = power + PID_curve;
     ea2:	20 91 45 01 	lds	r18, 0x0145	; 0x800145 <power>
     ea6:	30 91 46 01 	lds	r19, 0x0146	; 0x800146 <power+0x1>
     eaa:	40 91 47 01 	lds	r20, 0x0147	; 0x800147 <power+0x2>
     eae:	50 91 48 01 	lds	r21, 0x0148	; 0x800148 <power+0x3>
     eb2:	c5 01       	movw	r24, r10
     eb4:	b4 01       	movw	r22, r8
     eb6:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
     eba:	06 2f       	mov	r16, r22
     ebc:	17 2f       	mov	r17, r23
     ebe:	d8 2f       	mov	r29, r24
     ec0:	c9 2f       	mov	r28, r25
right_power = power + PID_curve;}
     ec2:	d6 2e       	mov	r13, r22
     ec4:	c7 2e       	mov	r12, r23
     ec6:	f8 2e       	mov	r15, r24
     ec8:	e9 2e       	mov	r14, r25

if(left_power > 1) {left_power = 1;}
     eca:	20 e0       	ldi	r18, 0x00	; 0
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	40 e8       	ldi	r20, 0x80	; 128
     ed0:	5f e3       	ldi	r21, 0x3F	; 63
     ed2:	60 2f       	mov	r22, r16
     ed4:	71 2f       	mov	r23, r17
     ed6:	8d 2f       	mov	r24, r29
     ed8:	9c 2f       	mov	r25, r28
     eda:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     ede:	18 16       	cp	r1, r24
     ee0:	84 f0       	brlt	.+32     	; 0xf02 <curve+0x1bc>
if(left_power < 0) {left_power = 0;}
     ee2:	20 e0       	ldi	r18, 0x00	; 0
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	a9 01       	movw	r20, r18
     ee8:	60 2f       	mov	r22, r16
     eea:	71 2f       	mov	r23, r17
     eec:	8d 2f       	mov	r24, r29
     eee:	9c 2f       	mov	r25, r28
     ef0:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
     ef4:	88 23       	and	r24, r24
     ef6:	4c f4       	brge	.+18     	; 0xf0a <curve+0x1c4>
     ef8:	00 e0       	ldi	r16, 0x00	; 0
     efa:	10 e0       	ldi	r17, 0x00	; 0
     efc:	d0 e0       	ldi	r29, 0x00	; 0
     efe:	c0 e0       	ldi	r28, 0x00	; 0
     f00:	04 c0       	rjmp	.+8      	; 0xf0a <curve+0x1c4>
	right_power = power + PID_curve;
}
else {left_power = power + PID_curve;
right_power = power + PID_curve;}

if(left_power > 1) {left_power = 1;}
     f02:	00 e0       	ldi	r16, 0x00	; 0
     f04:	10 e0       	ldi	r17, 0x00	; 0
     f06:	d0 e8       	ldi	r29, 0x80	; 128
     f08:	cf e3       	ldi	r28, 0x3F	; 63
if(left_power < 0) {left_power = 0;}
if(right_power > 1) {right_power = 1;}
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	40 e8       	ldi	r20, 0x80	; 128
     f10:	5f e3       	ldi	r21, 0x3F	; 63
     f12:	6d 2d       	mov	r22, r13
     f14:	7c 2d       	mov	r23, r12
     f16:	8f 2d       	mov	r24, r15
     f18:	9e 2d       	mov	r25, r14
     f1a:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
     f1e:	18 16       	cp	r1, r24
     f20:	84 f0       	brlt	.+32     	; 0xf42 <curve+0x1fc>
if(right_power < 0) {right_power = 0;}
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	a9 01       	movw	r20, r18
     f28:	6d 2d       	mov	r22, r13
     f2a:	7c 2d       	mov	r23, r12
     f2c:	8f 2d       	mov	r24, r15
     f2e:	9e 2d       	mov	r25, r14
     f30:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
     f34:	88 23       	and	r24, r24
     f36:	74 f4       	brge	.+28     	; 0xf54 <curve+0x20e>
     f38:	d1 2c       	mov	r13, r1
     f3a:	c1 2c       	mov	r12, r1
     f3c:	f1 2c       	mov	r15, r1
     f3e:	e1 2c       	mov	r14, r1
     f40:	09 c0       	rjmp	.+18     	; 0xf54 <curve+0x20e>
else {left_power = power + PID_curve;
right_power = power + PID_curve;}

if(left_power > 1) {left_power = 1;}
if(left_power < 0) {left_power = 0;}
if(right_power > 1) {right_power = 1;}
     f42:	d1 2c       	mov	r13, r1
     f44:	c1 2c       	mov	r12, r1
     f46:	68 94       	set
     f48:	ff 24       	eor	r15, r15
     f4a:	f7 f8       	bld	r15, 7
     f4c:	0f 2e       	mov	r0, r31
     f4e:	ff e3       	ldi	r31, 0x3F	; 63
     f50:	ef 2e       	mov	r14, r31
     f52:	f0 2d       	mov	r31, r0
if(right_power < 0) {right_power = 0;}

left_on(left_power, forwards);
     f54:	41 e0       	ldi	r20, 0x01	; 1
     f56:	50 e0       	ldi	r21, 0x00	; 0
     f58:	60 2f       	mov	r22, r16
     f5a:	71 2f       	mov	r23, r17
     f5c:	8d 2f       	mov	r24, r29
     f5e:	9c 2f       	mov	r25, r28
     f60:	0e 94 2d 04 	call	0x85a	; 0x85a <left_on>
right_on(right_power, forwards);
     f64:	41 e0       	ldi	r20, 0x01	; 1
     f66:	50 e0       	ldi	r21, 0x00	; 0
     f68:	6d 2d       	mov	r22, r13
     f6a:	7c 2d       	mov	r23, r12
     f6c:	8f 2d       	mov	r24, r15
     f6e:	9e 2d       	mov	r25, r14
     f70:	0e 94 94 04 	call	0x928	; 0x928 <right_on>

}
     f74:	df 91       	pop	r29
     f76:	cf 91       	pop	r28
     f78:	1f 91       	pop	r17
     f7a:	0f 91       	pop	r16
     f7c:	ff 90       	pop	r15
     f7e:	ef 90       	pop	r14
     f80:	df 90       	pop	r13
     f82:	cf 90       	pop	r12
     f84:	bf 90       	pop	r11
     f86:	af 90       	pop	r10
     f88:	9f 90       	pop	r9
     f8a:	8f 90       	pop	r8
     f8c:	7f 90       	pop	r7
     f8e:	6f 90       	pop	r6
     f90:	5f 90       	pop	r5
     f92:	4f 90       	pop	r4
     f94:	08 95       	ret

00000f96 <left_off>:
    // turn off the clock
	//clear(TCCR1B, CS12);
	//clear(TCCR1B, CS11);
	//clear(TCCR1B, CS10);
	// set port B6 input
	clear(DDRB, 6);
     f96:	26 98       	cbi	0x04, 6	; 4
	L_on = 0;
     f98:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <L_on+0x1>
     f9c:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <L_on>
     fa0:	08 95       	ret

00000fa2 <right_off>:
    // turn off the clock
	//clear(TCCR3B, CS32);
	//clear(TCCR3B, CS31);
	//clear(TCCR3B, CS30);
	// set port C6 input
	clear(DDRC, 6);
     fa2:	3e 98       	cbi	0x07, 6	; 7
	R_on = 0;
     fa4:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <R_on+0x1>
     fa8:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <R_on>
     fac:	08 95       	ret

00000fae <stop>:
void set_power(float dpower){
    power = dpower;
	}

void stop(){
	right_off();
     fae:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <right_off>
	left_off();
     fb2:	0e 94 cb 07 	call	0xf96	; 0xf96 <left_off>
     fb6:	08 95       	ret

00000fb8 <location_init>:
	*/
}

void calculate3(unsigned int* data)
{
    drop(); // change later
     fb8:	0e 94 c9 10 	call	0x2192	; 0x2192 <m_wii_open>
     fbc:	88 23       	and	r24, r24
     fbe:	19 f0       	breq	.+6      	; 0xfc6 <location_init+0xe>
     fc0:	81 e0       	ldi	r24, 0x01	; 1
     fc2:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <init_mwii>
     fc6:	08 95       	ret

00000fc8 <countstar>:
     fc8:	0f 93       	push	r16
     fca:	1f 93       	push	r17
     fcc:	cf 93       	push	r28
     fce:	df 93       	push	r29
     fd0:	fc 01       	movw	r30, r24
     fd2:	cd e4       	ldi	r28, 0x4D	; 77
     fd4:	d1 e0       	ldi	r29, 0x01	; 1
     fd6:	bc 01       	movw	r22, r24
     fd8:	68 5e       	subi	r22, 0xE8	; 232
     fda:	7f 4f       	sbci	r23, 0xFF	; 255
     fdc:	01 e0       	ldi	r16, 0x01	; 1
     fde:	10 e0       	ldi	r17, 0x00	; 0
     fe0:	de 01       	movw	r26, r28
     fe2:	44 e0       	ldi	r20, 0x04	; 4
     fe4:	50 e0       	ldi	r21, 0x00	; 0
     fe6:	80 81       	ld	r24, Z
     fe8:	91 81       	ldd	r25, Z+1	; 0x01
     fea:	8f 3f       	cpi	r24, 0xFF	; 255
     fec:	93 40       	sbci	r25, 0x03	; 3
     fee:	41 f4       	brne	.+16     	; 0x1000 <countstar+0x38>
     ff0:	82 81       	ldd	r24, Z+2	; 0x02
     ff2:	93 81       	ldd	r25, Z+3	; 0x03
     ff4:	8f 3f       	cpi	r24, 0xFF	; 255
     ff6:	93 40       	sbci	r25, 0x03	; 3
     ff8:	19 f4       	brne	.+6      	; 0x1000 <countstar+0x38>
     ffa:	19 83       	std	Y+1, r17	; 0x01
     ffc:	08 83       	st	Y, r16
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <countstar+0x3c>
    1000:	19 82       	std	Y+1, r1	; 0x01
    1002:	18 82       	st	Y, r1
    1004:	2d 91       	ld	r18, X+
    1006:	3c 91       	ld	r19, X
    1008:	11 97       	sbiw	r26, 0x01	; 1
    100a:	12 96       	adiw	r26, 0x02	; 2
    100c:	8d 91       	ld	r24, X+
    100e:	9c 91       	ld	r25, X
    1010:	13 97       	sbiw	r26, 0x03	; 3
    1012:	82 0f       	add	r24, r18
    1014:	93 1f       	adc	r25, r19
    1016:	14 96       	adiw	r26, 0x04	; 4
    1018:	2d 91       	ld	r18, X+
    101a:	3c 91       	ld	r19, X
    101c:	15 97       	sbiw	r26, 0x05	; 5
    101e:	82 0f       	add	r24, r18
    1020:	93 1f       	adc	r25, r19
    1022:	16 96       	adiw	r26, 0x06	; 6
    1024:	2d 91       	ld	r18, X+
    1026:	3c 91       	ld	r19, X
    1028:	17 97       	sbiw	r26, 0x07	; 7
    102a:	82 0f       	add	r24, r18
    102c:	93 1f       	adc	r25, r19
    102e:	9a 01       	movw	r18, r20
    1030:	28 1b       	sub	r18, r24
    1032:	39 0b       	sbc	r19, r25
    1034:	36 96       	adiw	r30, 0x06	; 6
    1036:	22 96       	adiw	r28, 0x02	; 2
    1038:	e6 17       	cp	r30, r22
    103a:	f7 07       	cpc	r31, r23
    103c:	a1 f6       	brne	.-88     	; 0xfe6 <countstar+0x1e>
    103e:	30 93 56 01 	sts	0x0156, r19	; 0x800156 <stars+0x1>
    1042:	20 93 55 01 	sts	0x0155, r18	; 0x800155 <stars>
    1046:	df 91       	pop	r29
    1048:	cf 91       	pop	r28
    104a:	1f 91       	pop	r17
    104c:	0f 91       	pop	r16
    104e:	08 95       	ret

00001050 <calculate4>:
    1050:	2f 92       	push	r2
    1052:	3f 92       	push	r3
    1054:	4f 92       	push	r4
    1056:	5f 92       	push	r5
    1058:	6f 92       	push	r6
    105a:	7f 92       	push	r7
    105c:	8f 92       	push	r8
    105e:	9f 92       	push	r9
    1060:	af 92       	push	r10
    1062:	bf 92       	push	r11
    1064:	cf 92       	push	r12
    1066:	df 92       	push	r13
    1068:	ef 92       	push	r14
    106a:	ff 92       	push	r15
    106c:	0f 93       	push	r16
    106e:	1f 93       	push	r17
    1070:	cf 93       	push	r28
    1072:	df 93       	push	r29
    1074:	cd b7       	in	r28, 0x3d	; 61
    1076:	de b7       	in	r29, 0x3e	; 62
    1078:	ce 56       	subi	r28, 0x6E	; 110
    107a:	d1 09       	sbc	r29, r1
    107c:	0f b6       	in	r0, 0x3f	; 63
    107e:	f8 94       	cli
    1080:	de bf       	out	0x3e, r29	; 62
    1082:	0f be       	out	0x3f, r0	; 63
    1084:	cd bf       	out	0x3d, r28	; 61
    1086:	ad 96       	adiw	r28, 0x2d	; 45
    1088:	9f af       	std	Y+63, r25	; 0x3f
    108a:	8e af       	std	Y+62, r24	; 0x3e
    108c:	ad 97       	sbiw	r28, 0x2d	; 45
    108e:	9e 01       	movw	r18, r28
    1090:	2f 5f       	subi	r18, 0xFF	; 255
    1092:	3f 4f       	sbci	r19, 0xFF	; 255
    1094:	ab 96       	adiw	r28, 0x2b	; 43
    1096:	3f af       	std	Y+63, r19	; 0x3f
    1098:	2e af       	std	Y+62, r18	; 0x3e
    109a:	ab 97       	sbiw	r28, 0x2b	; 43
    109c:	a7 96       	adiw	r28, 0x27	; 39
    109e:	9f af       	std	Y+63, r25	; 0x3f
    10a0:	8e af       	std	Y+62, r24	; 0x3e
    10a2:	a7 97       	sbiw	r28, 0x27	; 39
    10a4:	61 2c       	mov	r6, r1
    10a6:	71 2c       	mov	r7, r1
    10a8:	62 96       	adiw	r28, 0x12	; 18
    10aa:	1f ae       	std	Y+63, r1	; 0x3f
    10ac:	62 97       	sbiw	r28, 0x12	; 18
    10ae:	66 96       	adiw	r28, 0x16	; 22
    10b0:	1f ae       	std	Y+63, r1	; 0x3f
    10b2:	66 97       	sbiw	r28, 0x16	; 22
    10b4:	6a 96       	adiw	r28, 0x1a	; 26
    10b6:	1f ae       	std	Y+63, r1	; 0x3f
    10b8:	6a 97       	sbiw	r28, 0x1a	; 26
    10ba:	6b 96       	adiw	r28, 0x1b	; 27
    10bc:	1f ae       	std	Y+63, r1	; 0x3f
    10be:	6b 97       	sbiw	r28, 0x1b	; 27
    10c0:	ac 96       	adiw	r28, 0x2c	; 44
    10c2:	3f ad       	ldd	r19, Y+63	; 0x3f
    10c4:	ac 97       	sbiw	r28, 0x2c	; 44
    10c6:	ae 96       	adiw	r28, 0x2e	; 46
    10c8:	3f af       	std	Y+63, r19	; 0x3f
    10ca:	ae 97       	sbiw	r28, 0x2e	; 46
    10cc:	ad 96       	adiw	r28, 0x2d	; 45
    10ce:	8f ad       	ldd	r24, Y+63	; 0x3f
    10d0:	ad 97       	sbiw	r28, 0x2d	; 45
    10d2:	af 96       	adiw	r28, 0x2f	; 47
    10d4:	8f af       	std	Y+63, r24	; 0x3f
    10d6:	af 97       	sbiw	r28, 0x2f	; 47
    10d8:	a5 96       	adiw	r28, 0x25	; 37
    10da:	7f ae       	std	Y+63, r7	; 0x3f
    10dc:	6e ae       	std	Y+62, r6	; 0x3e
    10de:	a5 97       	sbiw	r28, 0x25	; 37
    10e0:	c6 c0       	rjmp	.+396    	; 0x126e <calculate4+0x21e>
    10e2:	42 2c       	mov	r4, r2
    10e4:	53 2c       	mov	r5, r3
    10e6:	78 01       	movw	r14, r16
    10e8:	d8 01       	movw	r26, r16
    10ea:	6d 91       	ld	r22, X+
    10ec:	7c 91       	ld	r23, X
    10ee:	80 e0       	ldi	r24, 0x00	; 0
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    10f6:	9b 01       	movw	r18, r22
    10f8:	ac 01       	movw	r20, r24
    10fa:	6f 96       	adiw	r28, 0x1f	; 31
    10fc:	6c ad       	ldd	r22, Y+60	; 0x3c
    10fe:	7d ad       	ldd	r23, Y+61	; 0x3d
    1100:	8e ad       	ldd	r24, Y+62	; 0x3e
    1102:	9f ad       	ldd	r25, Y+63	; 0x3f
    1104:	6f 97       	sbiw	r28, 0x1f	; 31
    1106:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    110a:	0e 94 d8 13 	call	0x27b0	; 0x27b0 <__fixsfsi>
    110e:	9b 01       	movw	r18, r22
    1110:	77 23       	and	r23, r23
    1112:	24 f4       	brge	.+8      	; 0x111c <calculate4+0xcc>
    1114:	22 27       	eor	r18, r18
    1116:	33 27       	eor	r19, r19
    1118:	26 1b       	sub	r18, r22
    111a:	37 0b       	sbc	r19, r23
    111c:	b9 01       	movw	r22, r18
    111e:	33 0f       	add	r19, r19
    1120:	88 0b       	sbc	r24, r24
    1122:	99 0b       	sbc	r25, r25
    1124:	0e 94 10 14 	call	0x2820	; 0x2820 <__floatsisf>
    1128:	4b 01       	movw	r8, r22
    112a:	5c 01       	movw	r10, r24
    112c:	f7 01       	movw	r30, r14
    112e:	62 81       	ldd	r22, Z+2	; 0x02
    1130:	73 81       	ldd	r23, Z+3	; 0x03
    1132:	80 e0       	ldi	r24, 0x00	; 0
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    113a:	9b 01       	movw	r18, r22
    113c:	ac 01       	movw	r20, r24
    113e:	a3 96       	adiw	r28, 0x23	; 35
    1140:	6c ad       	ldd	r22, Y+60	; 0x3c
    1142:	7d ad       	ldd	r23, Y+61	; 0x3d
    1144:	8e ad       	ldd	r24, Y+62	; 0x3e
    1146:	9f ad       	ldd	r25, Y+63	; 0x3f
    1148:	a3 97       	sbiw	r28, 0x23	; 35
    114a:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    114e:	0e 94 d8 13 	call	0x27b0	; 0x27b0 <__fixsfsi>
    1152:	9b 01       	movw	r18, r22
    1154:	77 23       	and	r23, r23
    1156:	24 f4       	brge	.+8      	; 0x1160 <calculate4+0x110>
    1158:	22 27       	eor	r18, r18
    115a:	33 27       	eor	r19, r19
    115c:	26 1b       	sub	r18, r22
    115e:	37 0b       	sbc	r19, r23
    1160:	b9 01       	movw	r22, r18
    1162:	33 0f       	add	r19, r19
    1164:	88 0b       	sbc	r24, r24
    1166:	99 0b       	sbc	r25, r25
    1168:	0e 94 10 14 	call	0x2820	; 0x2820 <__floatsisf>
    116c:	6b 01       	movw	r12, r22
    116e:	7c 01       	movw	r14, r24
    1170:	a5 01       	movw	r20, r10
    1172:	94 01       	movw	r18, r8
    1174:	c5 01       	movw	r24, r10
    1176:	b4 01       	movw	r22, r8
    1178:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    117c:	29 96       	adiw	r28, 0x09	; 9
    117e:	6c af       	std	Y+60, r22	; 0x3c
    1180:	7d af       	std	Y+61, r23	; 0x3d
    1182:	8e af       	std	Y+62, r24	; 0x3e
    1184:	9f af       	std	Y+63, r25	; 0x3f
    1186:	29 97       	sbiw	r28, 0x09	; 9
    1188:	a5 01       	movw	r20, r10
    118a:	94 01       	movw	r18, r8
    118c:	c5 01       	movw	r24, r10
    118e:	b4 01       	movw	r22, r8
    1190:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    1194:	4b 01       	movw	r8, r22
    1196:	5c 01       	movw	r10, r24
    1198:	a7 01       	movw	r20, r14
    119a:	96 01       	movw	r18, r12
    119c:	c7 01       	movw	r24, r14
    119e:	b6 01       	movw	r22, r12
    11a0:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    11a4:	9b 01       	movw	r18, r22
    11a6:	ac 01       	movw	r20, r24
    11a8:	c5 01       	movw	r24, r10
    11aa:	b4 01       	movw	r22, r8
    11ac:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    11b0:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <sqrt>
    11b4:	6b 01       	movw	r12, r22
    11b6:	7c 01       	movw	r14, r24
    11b8:	d3 01       	movw	r26, r6
    11ba:	6d 93       	st	X+, r22
    11bc:	7d 93       	st	X+, r23
    11be:	8d 93       	st	X+, r24
    11c0:	9d 93       	st	X+, r25
    11c2:	3d 01       	movw	r6, r26
    11c4:	62 96       	adiw	r28, 0x12	; 18
    11c6:	2f ad       	ldd	r18, Y+63	; 0x3f
    11c8:	62 97       	sbiw	r28, 0x12	; 18
    11ca:	66 96       	adiw	r28, 0x16	; 22
    11cc:	3f ad       	ldd	r19, Y+63	; 0x3f
    11ce:	66 97       	sbiw	r28, 0x16	; 22
    11d0:	6a 96       	adiw	r28, 0x1a	; 26
    11d2:	4f ad       	ldd	r20, Y+63	; 0x3f
    11d4:	6a 97       	sbiw	r28, 0x1a	; 26
    11d6:	6b 96       	adiw	r28, 0x1b	; 27
    11d8:	5f ad       	ldd	r21, Y+63	; 0x3f
    11da:	6b 97       	sbiw	r28, 0x1b	; 27
    11dc:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
    11e0:	18 16       	cp	r1, r24
    11e2:	f4 f4       	brge	.+60     	; 0x1220 <calculate4+0x1d0>
    11e4:	2a 96       	adiw	r28, 0x0a	; 10
    11e6:	4f ae       	std	Y+63, r4	; 0x3f
    11e8:	2a 97       	sbiw	r28, 0x0a	; 10
    11ea:	2b 96       	adiw	r28, 0x0b	; 11
    11ec:	5f ae       	std	Y+63, r5	; 0x3f
    11ee:	2b 97       	sbiw	r28, 0x0b	; 11
    11f0:	a8 96       	adiw	r28, 0x28	; 40
    11f2:	bf ad       	ldd	r27, Y+63	; 0x3f
    11f4:	a8 97       	sbiw	r28, 0x28	; 40
    11f6:	2e 96       	adiw	r28, 0x0e	; 14
    11f8:	bf af       	std	Y+63, r27	; 0x3f
    11fa:	2e 97       	sbiw	r28, 0x0e	; 14
    11fc:	a9 96       	adiw	r28, 0x29	; 41
    11fe:	ef ad       	ldd	r30, Y+63	; 0x3f
    1200:	a9 97       	sbiw	r28, 0x29	; 41
    1202:	2f 96       	adiw	r28, 0x0f	; 15
    1204:	ef af       	std	Y+63, r30	; 0x3f
    1206:	2f 97       	sbiw	r28, 0x0f	; 15
    1208:	62 96       	adiw	r28, 0x12	; 18
    120a:	cf ae       	std	Y+63, r12	; 0x3f
    120c:	62 97       	sbiw	r28, 0x12	; 18
    120e:	66 96       	adiw	r28, 0x16	; 22
    1210:	df ae       	std	Y+63, r13	; 0x3f
    1212:	66 97       	sbiw	r28, 0x16	; 22
    1214:	6a 96       	adiw	r28, 0x1a	; 26
    1216:	ef ae       	std	Y+63, r14	; 0x3f
    1218:	6a 97       	sbiw	r28, 0x1a	; 26
    121a:	6b 96       	adiw	r28, 0x1b	; 27
    121c:	ff ae       	std	Y+63, r15	; 0x3f
    121e:	6b 97       	sbiw	r28, 0x1b	; 27
    1220:	ff ef       	ldi	r31, 0xFF	; 255
    1222:	2f 1a       	sub	r2, r31
    1224:	3f 0a       	sbc	r3, r31
    1226:	0a 5f       	subi	r16, 0xFA	; 250
    1228:	1f 4f       	sbci	r17, 0xFF	; 255
    122a:	24 e0       	ldi	r18, 0x04	; 4
    122c:	22 16       	cp	r2, r18
    122e:	31 04       	cpc	r3, r1
    1230:	09 f0       	breq	.+2      	; 0x1234 <calculate4+0x1e4>
    1232:	57 cf       	rjmp	.-338    	; 0x10e2 <calculate4+0x92>
    1234:	a5 96       	adiw	r28, 0x25	; 37
    1236:	8e ad       	ldd	r24, Y+62	; 0x3e
    1238:	9f ad       	ldd	r25, Y+63	; 0x3f
    123a:	a5 97       	sbiw	r28, 0x25	; 37
    123c:	01 96       	adiw	r24, 0x01	; 1
    123e:	a5 96       	adiw	r28, 0x25	; 37
    1240:	9f af       	std	Y+63, r25	; 0x3f
    1242:	8e af       	std	Y+62, r24	; 0x3e
    1244:	a5 97       	sbiw	r28, 0x25	; 37
    1246:	a7 96       	adiw	r28, 0x27	; 39
    1248:	ae ad       	ldd	r26, Y+62	; 0x3e
    124a:	bf ad       	ldd	r27, Y+63	; 0x3f
    124c:	a7 97       	sbiw	r28, 0x27	; 39
    124e:	16 96       	adiw	r26, 0x06	; 6
    1250:	a7 96       	adiw	r28, 0x27	; 39
    1252:	bf af       	std	Y+63, r27	; 0x3f
    1254:	ae af       	std	Y+62, r26	; 0x3e
    1256:	a7 97       	sbiw	r28, 0x27	; 39
    1258:	ab 96       	adiw	r28, 0x2b	; 43
    125a:	ee ad       	ldd	r30, Y+62	; 0x3e
    125c:	ff ad       	ldd	r31, Y+63	; 0x3f
    125e:	ab 97       	sbiw	r28, 0x2b	; 43
    1260:	70 96       	adiw	r30, 0x10	; 16
    1262:	ab 96       	adiw	r28, 0x2b	; 43
    1264:	ff af       	std	Y+63, r31	; 0x3f
    1266:	ee af       	std	Y+62, r30	; 0x3e
    1268:	ab 97       	sbiw	r28, 0x2b	; 43
    126a:	04 97       	sbiw	r24, 0x04	; 4
    126c:	d1 f1       	breq	.+116    	; 0x12e2 <calculate4+0x292>
    126e:	a4 96       	adiw	r28, 0x24	; 36
    1270:	0f ad       	ldd	r16, Y+63	; 0x3f
    1272:	a4 97       	sbiw	r28, 0x24	; 36
    1274:	a5 96       	adiw	r28, 0x25	; 37
    1276:	1f ad       	ldd	r17, Y+63	; 0x3f
    1278:	a5 97       	sbiw	r28, 0x25	; 37
    127a:	a7 96       	adiw	r28, 0x27	; 39
    127c:	ae ad       	ldd	r26, Y+62	; 0x3e
    127e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1280:	a7 97       	sbiw	r28, 0x27	; 39
    1282:	6d 91       	ld	r22, X+
    1284:	7c 91       	ld	r23, X
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    128e:	6f 96       	adiw	r28, 0x1f	; 31
    1290:	6c af       	std	Y+60, r22	; 0x3c
    1292:	7d af       	std	Y+61, r23	; 0x3d
    1294:	8e af       	std	Y+62, r24	; 0x3e
    1296:	9f af       	std	Y+63, r25	; 0x3f
    1298:	6f 97       	sbiw	r28, 0x1f	; 31
    129a:	a7 96       	adiw	r28, 0x27	; 39
    129c:	ee ad       	ldd	r30, Y+62	; 0x3e
    129e:	ff ad       	ldd	r31, Y+63	; 0x3f
    12a0:	a7 97       	sbiw	r28, 0x27	; 39
    12a2:	62 81       	ldd	r22, Z+2	; 0x02
    12a4:	73 81       	ldd	r23, Z+3	; 0x03
    12a6:	80 e0       	ldi	r24, 0x00	; 0
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    12ae:	a3 96       	adiw	r28, 0x23	; 35
    12b0:	6c af       	std	Y+60, r22	; 0x3c
    12b2:	7d af       	std	Y+61, r23	; 0x3d
    12b4:	8e af       	std	Y+62, r24	; 0x3e
    12b6:	9f af       	std	Y+63, r25	; 0x3f
    12b8:	a3 97       	sbiw	r28, 0x23	; 35
    12ba:	ab 96       	adiw	r28, 0x2b	; 43
    12bc:	6e ac       	ldd	r6, Y+62	; 0x3e
    12be:	7f ac       	ldd	r7, Y+63	; 0x3f
    12c0:	ab 97       	sbiw	r28, 0x2b	; 43
    12c2:	ae 96       	adiw	r28, 0x2e	; 46
    12c4:	4f ac       	ldd	r4, Y+63	; 0x3f
    12c6:	ae 97       	sbiw	r28, 0x2e	; 46
    12c8:	af 96       	adiw	r28, 0x2f	; 47
    12ca:	5f ac       	ldd	r5, Y+63	; 0x3f
    12cc:	af 97       	sbiw	r28, 0x2f	; 47
    12ce:	21 2c       	mov	r2, r1
    12d0:	31 2c       	mov	r3, r1
    12d2:	a8 96       	adiw	r28, 0x28	; 40
    12d4:	0f af       	std	Y+63, r16	; 0x3f
    12d6:	a8 97       	sbiw	r28, 0x28	; 40
    12d8:	a9 96       	adiw	r28, 0x29	; 41
    12da:	1f af       	std	Y+63, r17	; 0x3f
    12dc:	a9 97       	sbiw	r28, 0x29	; 41
    12de:	82 01       	movw	r16, r4
    12e0:	00 cf       	rjmp	.-512    	; 0x10e2 <calculate4+0x92>
    12e2:	80 e0       	ldi	r24, 0x00	; 0
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	20 e0       	ldi	r18, 0x00	; 0
    12e8:	30 e0       	ldi	r19, 0x00	; 0
    12ea:	2b 96       	adiw	r28, 0x0b	; 11
    12ec:	4e ad       	ldd	r20, Y+62	; 0x3e
    12ee:	5f ad       	ldd	r21, Y+63	; 0x3f
    12f0:	2b 97       	sbiw	r28, 0x0b	; 11
    12f2:	2f 96       	adiw	r28, 0x0f	; 15
    12f4:	6e ad       	ldd	r22, Y+62	; 0x3e
    12f6:	7f ad       	ldd	r23, Y+63	; 0x3f
    12f8:	2f 97       	sbiw	r28, 0x0f	; 15
    12fa:	68 17       	cp	r22, r24
    12fc:	79 07       	cpc	r23, r25
    12fe:	81 f0       	breq	.+32     	; 0x1320 <calculate4+0x2d0>
    1300:	48 17       	cp	r20, r24
    1302:	59 07       	cpc	r21, r25
    1304:	69 f0       	breq	.+26     	; 0x1320 <calculate4+0x2d0>
    1306:	f9 01       	movw	r30, r18
    1308:	ee 0f       	add	r30, r30
    130a:	ff 1f       	adc	r31, r31
    130c:	a1 e4       	ldi	r26, 0x41	; 65
    130e:	b0 e0       	ldi	r27, 0x00	; 0
    1310:	ac 0f       	add	r26, r28
    1312:	bd 1f       	adc	r27, r29
    1314:	ea 0f       	add	r30, r26
    1316:	fb 1f       	adc	r31, r27
    1318:	91 83       	std	Z+1, r25	; 0x01
    131a:	80 83       	st	Z, r24
    131c:	2f 5f       	subi	r18, 0xFF	; 255
    131e:	3f 4f       	sbci	r19, 0xFF	; 255
    1320:	01 96       	adiw	r24, 0x01	; 1
    1322:	84 30       	cpi	r24, 0x04	; 4
    1324:	91 05       	cpc	r25, r1
    1326:	49 f7       	brne	.-46     	; 0x12fa <calculate4+0x2aa>
    1328:	23 96       	adiw	r28, 0x03	; 3
    132a:	0e ad       	ldd	r16, Y+62	; 0x3e
    132c:	1f ad       	ldd	r17, Y+63	; 0x3f
    132e:	23 97       	sbiw	r28, 0x03	; 3
    1330:	25 96       	adiw	r28, 0x05	; 5
    1332:	ee ac       	ldd	r14, Y+62	; 0x3e
    1334:	ff ac       	ldd	r15, Y+63	; 0x3f
    1336:	25 97       	sbiw	r28, 0x05	; 5
    1338:	2f 96       	adiw	r28, 0x0f	; 15
    133a:	8e ad       	ldd	r24, Y+62	; 0x3e
    133c:	9f ad       	ldd	r25, Y+63	; 0x3f
    133e:	2f 97       	sbiw	r28, 0x0f	; 15
    1340:	88 0f       	add	r24, r24
    1342:	99 1f       	adc	r25, r25
    1344:	88 0f       	add	r24, r24
    1346:	99 1f       	adc	r25, r25
    1348:	dc 01       	movw	r26, r24
    134a:	a0 0f       	add	r26, r16
    134c:	b1 1f       	adc	r27, r17
    134e:	aa 0f       	add	r26, r26
    1350:	bb 1f       	adc	r27, r27
    1352:	aa 0f       	add	r26, r26
    1354:	bb 1f       	adc	r27, r27
    1356:	e1 e0       	ldi	r30, 0x01	; 1
    1358:	f0 e0       	ldi	r31, 0x00	; 0
    135a:	ec 0f       	add	r30, r28
    135c:	fd 1f       	adc	r31, r29
    135e:	ae 0f       	add	r26, r30
    1360:	bf 1f       	adc	r27, r31
    1362:	fc 01       	movw	r30, r24
    1364:	ee 0d       	add	r30, r14
    1366:	ff 1d       	adc	r31, r15
    1368:	ee 0f       	add	r30, r30
    136a:	ff 1f       	adc	r31, r31
    136c:	ee 0f       	add	r30, r30
    136e:	ff 1f       	adc	r31, r31
    1370:	21 e0       	ldi	r18, 0x01	; 1
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	2c 0f       	add	r18, r28
    1376:	3d 1f       	adc	r19, r29
    1378:	e2 0f       	add	r30, r18
    137a:	f3 1f       	adc	r31, r19
    137c:	20 81       	ld	r18, Z
    137e:	31 81       	ldd	r19, Z+1	; 0x01
    1380:	42 81       	ldd	r20, Z+2	; 0x02
    1382:	53 81       	ldd	r21, Z+3	; 0x03
    1384:	6d 91       	ld	r22, X+
    1386:	7d 91       	ld	r23, X+
    1388:	8d 91       	ld	r24, X+
    138a:	9c 91       	ld	r25, X
    138c:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    1390:	4b 01       	movw	r8, r22
    1392:	5c 01       	movw	r10, r24
    1394:	2b 96       	adiw	r28, 0x0b	; 11
    1396:	ae ad       	ldd	r26, Y+62	; 0x3e
    1398:	bf ad       	ldd	r27, Y+63	; 0x3f
    139a:	2b 97       	sbiw	r28, 0x0b	; 11
    139c:	aa 0f       	add	r26, r26
    139e:	bb 1f       	adc	r27, r27
    13a0:	aa 0f       	add	r26, r26
    13a2:	bb 1f       	adc	r27, r27
    13a4:	fd 01       	movw	r30, r26
    13a6:	e0 0f       	add	r30, r16
    13a8:	f1 1f       	adc	r31, r17
    13aa:	ee 0f       	add	r30, r30
    13ac:	ff 1f       	adc	r31, r31
    13ae:	ee 0f       	add	r30, r30
    13b0:	ff 1f       	adc	r31, r31
    13b2:	81 e0       	ldi	r24, 0x01	; 1
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	8c 0f       	add	r24, r28
    13b8:	9d 1f       	adc	r25, r29
    13ba:	e8 0f       	add	r30, r24
    13bc:	f9 1f       	adc	r31, r25
    13be:	ae 0d       	add	r26, r14
    13c0:	bf 1d       	adc	r27, r15
    13c2:	aa 0f       	add	r26, r26
    13c4:	bb 1f       	adc	r27, r27
    13c6:	aa 0f       	add	r26, r26
    13c8:	bb 1f       	adc	r27, r27
    13ca:	a8 0f       	add	r26, r24
    13cc:	b9 1f       	adc	r27, r25
    13ce:	2d 91       	ld	r18, X+
    13d0:	3d 91       	ld	r19, X+
    13d2:	4d 91       	ld	r20, X+
    13d4:	5c 91       	ld	r21, X
    13d6:	60 81       	ld	r22, Z
    13d8:	71 81       	ldd	r23, Z+1	; 0x01
    13da:	82 81       	ldd	r24, Z+2	; 0x02
    13dc:	93 81       	ldd	r25, Z+3	; 0x03
    13de:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    13e2:	9b 01       	movw	r18, r22
    13e4:	ac 01       	movw	r20, r24
    13e6:	c5 01       	movw	r24, r10
    13e8:	b4 01       	movw	r22, r8
    13ea:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
    13ee:	88 23       	and	r24, r24
    13f0:	8c f4       	brge	.+34     	; 0x1414 <calculate4+0x3c4>
    13f2:	2f 96       	adiw	r28, 0x0f	; 15
    13f4:	ae ad       	ldd	r26, Y+62	; 0x3e
    13f6:	bf ad       	ldd	r27, Y+63	; 0x3f
    13f8:	2f 97       	sbiw	r28, 0x0f	; 15
    13fa:	b0 93 4c 01 	sts	0x014C, r27	; 0x80014c <northstar.2014+0x1>
    13fe:	a0 93 4b 01 	sts	0x014B, r26	; 0x80014b <northstar.2014>
    1402:	2b 96       	adiw	r28, 0x0b	; 11
    1404:	ee ad       	ldd	r30, Y+62	; 0x3e
    1406:	ff ad       	ldd	r31, Y+63	; 0x3f
    1408:	2b 97       	sbiw	r28, 0x0b	; 11
    140a:	f0 93 4a 01 	sts	0x014A, r31	; 0x80014a <southstar.2015+0x1>
    140e:	e0 93 49 01 	sts	0x0149, r30	; 0x800149 <southstar.2015>
    1412:	10 c0       	rjmp	.+32     	; 0x1434 <calculate4+0x3e4>
    1414:	2b 96       	adiw	r28, 0x0b	; 11
    1416:	2e ad       	ldd	r18, Y+62	; 0x3e
    1418:	3f ad       	ldd	r19, Y+63	; 0x3f
    141a:	2b 97       	sbiw	r28, 0x0b	; 11
    141c:	30 93 4c 01 	sts	0x014C, r19	; 0x80014c <northstar.2014+0x1>
    1420:	20 93 4b 01 	sts	0x014B, r18	; 0x80014b <northstar.2014>
    1424:	2f 96       	adiw	r28, 0x0f	; 15
    1426:	8e ad       	ldd	r24, Y+62	; 0x3e
    1428:	9f ad       	ldd	r25, Y+63	; 0x3f
    142a:	2f 97       	sbiw	r28, 0x0f	; 15
    142c:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <southstar.2015+0x1>
    1430:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <southstar.2015>
    1434:	e0 90 4b 01 	lds	r14, 0x014B	; 0x80014b <northstar.2014>
    1438:	f0 90 4c 01 	lds	r15, 0x014C	; 0x80014c <northstar.2014+0x1>
    143c:	00 91 49 01 	lds	r16, 0x0149	; 0x800149 <southstar.2015>
    1440:	10 91 4a 01 	lds	r17, 0x014A	; 0x80014a <southstar.2015+0x1>
    1444:	f7 01       	movw	r30, r14
    1446:	ee 0f       	add	r30, r30
    1448:	ff 1f       	adc	r31, r31
    144a:	ee 0f       	add	r30, r30
    144c:	ff 1f       	adc	r31, r31
    144e:	e0 0f       	add	r30, r16
    1450:	f1 1f       	adc	r31, r17
    1452:	ee 0f       	add	r30, r30
    1454:	ff 1f       	adc	r31, r31
    1456:	ee 0f       	add	r30, r30
    1458:	ff 1f       	adc	r31, r31
    145a:	ec 0f       	add	r30, r28
    145c:	fd 1f       	adc	r31, r29
    145e:	21 81       	ldd	r18, Z+1	; 0x01
    1460:	32 81       	ldd	r19, Z+2	; 0x02
    1462:	43 81       	ldd	r20, Z+3	; 0x03
    1464:	54 81       	ldd	r21, Z+4	; 0x04
    1466:	60 e0       	ldi	r22, 0x00	; 0
    1468:	70 e0       	ldi	r23, 0x00	; 0
    146a:	88 ee       	ldi	r24, 0xE8	; 232
    146c:	91 e4       	ldi	r25, 0x41	; 65
    146e:	0e 94 66 13 	call	0x26cc	; 0x26cc <__divsf3>
    1472:	29 96       	adiw	r28, 0x09	; 9
    1474:	6c af       	std	Y+60, r22	; 0x3c
    1476:	7d af       	std	Y+61, r23	; 0x3d
    1478:	8e af       	std	Y+62, r24	; 0x3e
    147a:	9f af       	std	Y+63, r25	; 0x3f
    147c:	29 97       	sbiw	r28, 0x09	; 9
    147e:	60 93 64 01 	sts	0x0164, r22	; 0x800164 <scale>
    1482:	70 93 65 01 	sts	0x0165, r23	; 0x800165 <scale+0x1>
    1486:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <scale+0x2>
    148a:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <scale+0x3>
    148e:	d7 01       	movw	r26, r14
    1490:	aa 0f       	add	r26, r26
    1492:	bb 1f       	adc	r27, r27
    1494:	ae 0d       	add	r26, r14
    1496:	bf 1d       	adc	r27, r15
    1498:	aa 0f       	add	r26, r26
    149a:	bb 1f       	adc	r27, r27
    149c:	ad 96       	adiw	r28, 0x2d	; 45
    149e:	ee ad       	ldd	r30, Y+62	; 0x3e
    14a0:	ff ad       	ldd	r31, Y+63	; 0x3f
    14a2:	ad 97       	sbiw	r28, 0x2d	; 45
    14a4:	ae 0f       	add	r26, r30
    14a6:	bf 1f       	adc	r27, r31
    14a8:	12 96       	adiw	r26, 0x02	; 2
    14aa:	2d 90       	ld	r2, X+
    14ac:	3c 90       	ld	r3, X
    14ae:	13 97       	sbiw	r26, 0x03	; 3
    14b0:	f8 01       	movw	r30, r16
    14b2:	ee 0f       	add	r30, r30
    14b4:	ff 1f       	adc	r31, r31
    14b6:	e0 0f       	add	r30, r16
    14b8:	f1 1f       	adc	r31, r17
    14ba:	ee 0f       	add	r30, r30
    14bc:	ff 1f       	adc	r31, r31
    14be:	ad 96       	adiw	r28, 0x2d	; 45
    14c0:	2e ad       	ldd	r18, Y+62	; 0x3e
    14c2:	3f ad       	ldd	r19, Y+63	; 0x3f
    14c4:	ad 97       	sbiw	r28, 0x2d	; 45
    14c6:	e2 0f       	add	r30, r18
    14c8:	f3 1f       	adc	r31, r19
    14ca:	e2 80       	ldd	r14, Z+2	; 0x02
    14cc:	f3 80       	ldd	r15, Z+3	; 0x03
    14ce:	0d 91       	ld	r16, X+
    14d0:	1c 91       	ld	r17, X
    14d2:	c0 80       	ld	r12, Z
    14d4:	d1 80       	ldd	r13, Z+1	; 0x01
    14d6:	b1 01       	movw	r22, r2
    14d8:	80 e0       	ldi	r24, 0x00	; 0
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    14e0:	4b 01       	movw	r8, r22
    14e2:	5c 01       	movw	r10, r24
    14e4:	b7 01       	movw	r22, r14
    14e6:	80 e0       	ldi	r24, 0x00	; 0
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    14ee:	9b 01       	movw	r18, r22
    14f0:	ac 01       	movw	r20, r24
    14f2:	c5 01       	movw	r24, r10
    14f4:	b4 01       	movw	r22, r8
    14f6:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    14fa:	4b 01       	movw	r8, r22
    14fc:	5c 01       	movw	r10, r24
    14fe:	b8 01       	movw	r22, r16
    1500:	80 e0       	ldi	r24, 0x00	; 0
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    1508:	2b 01       	movw	r4, r22
    150a:	3c 01       	movw	r6, r24
    150c:	b6 01       	movw	r22, r12
    150e:	80 e0       	ldi	r24, 0x00	; 0
    1510:	90 e0       	ldi	r25, 0x00	; 0
    1512:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    1516:	9b 01       	movw	r18, r22
    1518:	ac 01       	movw	r20, r24
    151a:	c3 01       	movw	r24, r6
    151c:	b2 01       	movw	r22, r4
    151e:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    1522:	a5 01       	movw	r20, r10
    1524:	94 01       	movw	r18, r8
    1526:	0e 94 fd 12 	call	0x25fa	; 0x25fa <atan2>
    152a:	4b 01       	movw	r8, r22
    152c:	5c 01       	movw	r10, r24
    152e:	b6 01       	movw	r22, r12
    1530:	60 0f       	add	r22, r16
    1532:	71 1f       	adc	r23, r17
    1534:	80 e0       	ldi	r24, 0x00	; 0
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    153c:	20 e0       	ldi	r18, 0x00	; 0
    153e:	30 e0       	ldi	r19, 0x00	; 0
    1540:	40 e0       	ldi	r20, 0x00	; 0
    1542:	5f e3       	ldi	r21, 0x3F	; 63
    1544:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    1548:	20 e0       	ldi	r18, 0x00	; 0
    154a:	30 e8       	ldi	r19, 0x80	; 128
    154c:	4c ef       	ldi	r20, 0xFC	; 252
    154e:	53 e4       	ldi	r21, 0x43	; 67
    1550:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    1554:	2b 01       	movw	r4, r22
    1556:	3c 01       	movw	r6, r24
    1558:	77 fa       	bst	r7, 7
    155a:	70 94       	com	r7
    155c:	77 f8       	bld	r7, 7
    155e:	70 94       	com	r7
    1560:	b7 01       	movw	r22, r14
    1562:	62 0d       	add	r22, r2
    1564:	73 1d       	adc	r23, r3
    1566:	80 e0       	ldi	r24, 0x00	; 0
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	0e 94 0e 14 	call	0x281c	; 0x281c <__floatunsisf>
    156e:	20 e0       	ldi	r18, 0x00	; 0
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	40 e0       	ldi	r20, 0x00	; 0
    1574:	5f e3       	ldi	r21, 0x3F	; 63
    1576:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    157a:	20 e0       	ldi	r18, 0x00	; 0
    157c:	30 e0       	ldi	r19, 0x00	; 0
    157e:	49 eb       	ldi	r20, 0xB9	; 185
    1580:	53 e4       	ldi	r21, 0x43	; 67
    1582:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    1586:	6b 01       	movw	r12, r22
    1588:	7c 01       	movw	r14, r24
    158a:	f7 fa       	bst	r15, 7
    158c:	f0 94       	com	r15
    158e:	f7 f8       	bld	r15, 7
    1590:	f0 94       	com	r15
    1592:	c5 01       	movw	r24, r10
    1594:	b4 01       	movw	r22, r8
    1596:	0e 94 61 13 	call	0x26c2	; 0x26c2 <cos>
    159a:	2d 96       	adiw	r28, 0x0d	; 13
    159c:	6c af       	std	Y+60, r22	; 0x3c
    159e:	7d af       	std	Y+61, r23	; 0x3d
    15a0:	8e af       	std	Y+62, r24	; 0x3e
    15a2:	9f af       	std	Y+63, r25	; 0x3f
    15a4:	2d 97       	sbiw	r28, 0x0d	; 13
    15a6:	c5 01       	movw	r24, r10
    15a8:	b4 01       	movw	r22, r8
    15aa:	0e 94 a0 15 	call	0x2b40	; 0x2b40 <sin>
    15ae:	61 96       	adiw	r28, 0x11	; 17
    15b0:	6c af       	std	Y+60, r22	; 0x3c
    15b2:	7d af       	std	Y+61, r23	; 0x3d
    15b4:	8e af       	std	Y+62, r24	; 0x3e
    15b6:	9f af       	std	Y+63, r25	; 0x3f
    15b8:	61 97       	sbiw	r28, 0x11	; 17
    15ba:	2d ec       	ldi	r18, 0xCD	; 205
    15bc:	3c ec       	ldi	r19, 0xCC	; 204
    15be:	4c e4       	ldi	r20, 0x4C	; 76
    15c0:	5d e3       	ldi	r21, 0x3D	; 61
    15c2:	60 91 68 01 	lds	r22, 0x0168	; 0x800168 <orientation>
    15c6:	70 91 69 01 	lds	r23, 0x0169	; 0x800169 <orientation+0x1>
    15ca:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <orientation+0x2>
    15ce:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <orientation+0x3>
    15d2:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    15d6:	65 96       	adiw	r28, 0x15	; 21
    15d8:	6c af       	std	Y+60, r22	; 0x3c
    15da:	7d af       	std	Y+61, r23	; 0x3d
    15dc:	8e af       	std	Y+62, r24	; 0x3e
    15de:	9f af       	std	Y+63, r25	; 0x3f
    15e0:	65 97       	sbiw	r28, 0x15	; 21
    15e2:	23 e3       	ldi	r18, 0x33	; 51
    15e4:	33 e3       	ldi	r19, 0x33	; 51
    15e6:	43 e7       	ldi	r20, 0x73	; 115
    15e8:	5f e3       	ldi	r21, 0x3F	; 63
    15ea:	c5 01       	movw	r24, r10
    15ec:	b4 01       	movw	r22, r8
    15ee:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    15f2:	9b 01       	movw	r18, r22
    15f4:	ac 01       	movw	r20, r24
    15f6:	65 96       	adiw	r28, 0x15	; 21
    15f8:	6c ad       	ldd	r22, Y+60	; 0x3c
    15fa:	7d ad       	ldd	r23, Y+61	; 0x3d
    15fc:	8e ad       	ldd	r24, Y+62	; 0x3e
    15fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    1600:	65 97       	sbiw	r28, 0x15	; 21
    1602:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    1606:	65 96       	adiw	r28, 0x15	; 21
    1608:	6c af       	std	Y+60, r22	; 0x3c
    160a:	7d af       	std	Y+61, r23	; 0x3d
    160c:	8e af       	std	Y+62, r24	; 0x3e
    160e:	9f af       	std	Y+63, r25	; 0x3f
    1610:	65 97       	sbiw	r28, 0x15	; 21
    1612:	0c e6       	ldi	r16, 0x6C	; 108
    1614:	11 e0       	ldi	r17, 0x01	; 1
    1616:	2d ec       	ldi	r18, 0xCD	; 205
    1618:	3c ec       	ldi	r19, 0xCC	; 204
    161a:	4c e4       	ldi	r20, 0x4C	; 76
    161c:	5d e3       	ldi	r21, 0x3D	; 61
    161e:	d8 01       	movw	r26, r16
    1620:	6d 91       	ld	r22, X+
    1622:	7d 91       	ld	r23, X+
    1624:	8d 91       	ld	r24, X+
    1626:	9c 91       	ld	r25, X
    1628:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    162c:	69 96       	adiw	r28, 0x19	; 25
    162e:	6c af       	std	Y+60, r22	; 0x3c
    1630:	7d af       	std	Y+61, r23	; 0x3d
    1632:	8e af       	std	Y+62, r24	; 0x3e
    1634:	9f af       	std	Y+63, r25	; 0x3f
    1636:	69 97       	sbiw	r28, 0x19	; 25
    1638:	2d 96       	adiw	r28, 0x0d	; 13
    163a:	2c ad       	ldd	r18, Y+60	; 0x3c
    163c:	3d ad       	ldd	r19, Y+61	; 0x3d
    163e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1640:	5f ad       	ldd	r21, Y+63	; 0x3f
    1642:	2d 97       	sbiw	r28, 0x0d	; 13
    1644:	c3 01       	movw	r24, r6
    1646:	b2 01       	movw	r22, r4
    1648:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    164c:	4b 01       	movw	r8, r22
    164e:	5c 01       	movw	r10, r24
    1650:	61 96       	adiw	r28, 0x11	; 17
    1652:	2c ad       	ldd	r18, Y+60	; 0x3c
    1654:	3d ad       	ldd	r19, Y+61	; 0x3d
    1656:	4e ad       	ldd	r20, Y+62	; 0x3e
    1658:	5f ad       	ldd	r21, Y+63	; 0x3f
    165a:	61 97       	sbiw	r28, 0x11	; 17
    165c:	c7 01       	movw	r24, r14
    165e:	b6 01       	movw	r22, r12
    1660:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    1664:	9b 01       	movw	r18, r22
    1666:	ac 01       	movw	r20, r24
    1668:	c5 01       	movw	r24, r10
    166a:	b4 01       	movw	r22, r8
    166c:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    1670:	23 e3       	ldi	r18, 0x33	; 51
    1672:	33 e3       	ldi	r19, 0x33	; 51
    1674:	43 e7       	ldi	r20, 0x73	; 115
    1676:	5f e3       	ldi	r21, 0x3F	; 63
    1678:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    167c:	9b 01       	movw	r18, r22
    167e:	ac 01       	movw	r20, r24
    1680:	69 96       	adiw	r28, 0x19	; 25
    1682:	6c ad       	ldd	r22, Y+60	; 0x3c
    1684:	7d ad       	ldd	r23, Y+61	; 0x3d
    1686:	8e ad       	ldd	r24, Y+62	; 0x3e
    1688:	9f ad       	ldd	r25, Y+63	; 0x3f
    168a:	69 97       	sbiw	r28, 0x19	; 25
    168c:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    1690:	4b 01       	movw	r8, r22
    1692:	5c 01       	movw	r10, r24
    1694:	f8 01       	movw	r30, r16
    1696:	60 83       	st	Z, r22
    1698:	71 83       	std	Z+1, r23	; 0x01
    169a:	82 83       	std	Z+2, r24	; 0x02
    169c:	93 83       	std	Z+3, r25	; 0x03
    169e:	2d ec       	ldi	r18, 0xCD	; 205
    16a0:	3c ec       	ldi	r19, 0xCC	; 204
    16a2:	4c e4       	ldi	r20, 0x4C	; 76
    16a4:	5d e3       	ldi	r21, 0x3D	; 61
    16a6:	64 81       	ldd	r22, Z+4	; 0x04
    16a8:	75 81       	ldd	r23, Z+5	; 0x05
    16aa:	86 81       	ldd	r24, Z+6	; 0x06
    16ac:	97 81       	ldd	r25, Z+7	; 0x07
    16ae:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    16b2:	69 96       	adiw	r28, 0x19	; 25
    16b4:	6c af       	std	Y+60, r22	; 0x3c
    16b6:	7d af       	std	Y+61, r23	; 0x3d
    16b8:	8e af       	std	Y+62, r24	; 0x3e
    16ba:	9f af       	std	Y+63, r25	; 0x3f
    16bc:	69 97       	sbiw	r28, 0x19	; 25
    16be:	61 96       	adiw	r28, 0x11	; 17
    16c0:	2c ad       	ldd	r18, Y+60	; 0x3c
    16c2:	3d ad       	ldd	r19, Y+61	; 0x3d
    16c4:	4e ad       	ldd	r20, Y+62	; 0x3e
    16c6:	5f ad       	ldd	r21, Y+63	; 0x3f
    16c8:	61 97       	sbiw	r28, 0x11	; 17
    16ca:	c3 01       	movw	r24, r6
    16cc:	b2 01       	movw	r22, r4
    16ce:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    16d2:	2b 01       	movw	r4, r22
    16d4:	3c 01       	movw	r6, r24
    16d6:	2d 96       	adiw	r28, 0x0d	; 13
    16d8:	2c ad       	ldd	r18, Y+60	; 0x3c
    16da:	3d ad       	ldd	r19, Y+61	; 0x3d
    16dc:	4e ad       	ldd	r20, Y+62	; 0x3e
    16de:	5f ad       	ldd	r21, Y+63	; 0x3f
    16e0:	2d 97       	sbiw	r28, 0x0d	; 13
    16e2:	c7 01       	movw	r24, r14
    16e4:	b6 01       	movw	r22, r12
    16e6:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    16ea:	9b 01       	movw	r18, r22
    16ec:	ac 01       	movw	r20, r24
    16ee:	c3 01       	movw	r24, r6
    16f0:	b2 01       	movw	r22, r4
    16f2:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    16f6:	23 e3       	ldi	r18, 0x33	; 51
    16f8:	33 e3       	ldi	r19, 0x33	; 51
    16fa:	43 e7       	ldi	r20, 0x73	; 115
    16fc:	5f e3       	ldi	r21, 0x3F	; 63
    16fe:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    1702:	9b 01       	movw	r18, r22
    1704:	ac 01       	movw	r20, r24
    1706:	69 96       	adiw	r28, 0x19	; 25
    1708:	6c ad       	ldd	r22, Y+60	; 0x3c
    170a:	7d ad       	ldd	r23, Y+61	; 0x3d
    170c:	8e ad       	ldd	r24, Y+62	; 0x3e
    170e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1710:	69 97       	sbiw	r28, 0x19	; 25
    1712:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    1716:	6b 01       	movw	r12, r22
    1718:	7c 01       	movw	r14, r24
    171a:	d8 01       	movw	r26, r16
    171c:	14 96       	adiw	r26, 0x04	; 4
    171e:	6d 93       	st	X+, r22
    1720:	7d 93       	st	X+, r23
    1722:	8d 93       	st	X+, r24
    1724:	9c 93       	st	X, r25
    1726:	17 97       	sbiw	r26, 0x07	; 7
    1728:	29 ef       	ldi	r18, 0xF9	; 249
    172a:	3f e0       	ldi	r19, 0x0F	; 15
    172c:	49 e4       	ldi	r20, 0x49	; 73
    172e:	50 e4       	ldi	r21, 0x40	; 64
    1730:	65 96       	adiw	r28, 0x15	; 21
    1732:	6c ad       	ldd	r22, Y+60	; 0x3c
    1734:	7d ad       	ldd	r23, Y+61	; 0x3d
    1736:	8e ad       	ldd	r24, Y+62	; 0x3e
    1738:	9f ad       	ldd	r25, Y+63	; 0x3f
    173a:	65 97       	sbiw	r28, 0x15	; 21
    173c:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    1740:	2b 01       	movw	r4, r22
    1742:	3c 01       	movw	r6, r24
    1744:	29 ef       	ldi	r18, 0xF9	; 249
    1746:	3f e0       	ldi	r19, 0x0F	; 15
    1748:	49 e4       	ldi	r20, 0x49	; 73
    174a:	50 ec       	ldi	r21, 0xC0	; 192
    174c:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
    1750:	88 23       	and	r24, r24
    1752:	4c f0       	brlt	.+18     	; 0x1766 <calculate4+0x716>
    1754:	40 92 68 01 	sts	0x0168, r4	; 0x800168 <orientation>
    1758:	50 92 69 01 	sts	0x0169, r5	; 0x800169 <orientation+0x1>
    175c:	60 92 6a 01 	sts	0x016A, r6	; 0x80016a <orientation+0x2>
    1760:	70 92 6b 01 	sts	0x016B, r7	; 0x80016b <orientation+0x3>
    1764:	10 c0       	rjmp	.+32     	; 0x1786 <calculate4+0x736>
    1766:	29 ef       	ldi	r18, 0xF9	; 249
    1768:	3f e0       	ldi	r19, 0x0F	; 15
    176a:	49 ec       	ldi	r20, 0xC9	; 201
    176c:	50 e4       	ldi	r21, 0x40	; 64
    176e:	c3 01       	movw	r24, r6
    1770:	b2 01       	movw	r22, r4
    1772:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    1776:	60 93 68 01 	sts	0x0168, r22	; 0x800168 <orientation>
    177a:	70 93 69 01 	sts	0x0169, r23	; 0x800169 <orientation+0x1>
    177e:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <orientation+0x2>
    1782:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <orientation+0x3>
    1786:	08 e5       	ldi	r16, 0x58	; 88
    1788:	11 e0       	ldi	r17, 0x01	; 1
    178a:	a5 01       	movw	r20, r10
    178c:	94 01       	movw	r18, r8
    178e:	29 96       	adiw	r28, 0x09	; 9
    1790:	6c ad       	ldd	r22, Y+60	; 0x3c
    1792:	7d ad       	ldd	r23, Y+61	; 0x3d
    1794:	8e ad       	ldd	r24, Y+62	; 0x3e
    1796:	9f ad       	ldd	r25, Y+63	; 0x3f
    1798:	29 97       	sbiw	r28, 0x09	; 9
    179a:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    179e:	f8 01       	movw	r30, r16
    17a0:	60 83       	st	Z, r22
    17a2:	71 83       	std	Z+1, r23	; 0x01
    17a4:	82 83       	std	Z+2, r24	; 0x02
    17a6:	93 83       	std	Z+3, r25	; 0x03
    17a8:	a7 01       	movw	r20, r14
    17aa:	96 01       	movw	r18, r12
    17ac:	29 96       	adiw	r28, 0x09	; 9
    17ae:	6c ad       	ldd	r22, Y+60	; 0x3c
    17b0:	7d ad       	ldd	r23, Y+61	; 0x3d
    17b2:	8e ad       	ldd	r24, Y+62	; 0x3e
    17b4:	9f ad       	ldd	r25, Y+63	; 0x3f
    17b6:	29 97       	sbiw	r28, 0x09	; 9
    17b8:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    17bc:	d8 01       	movw	r26, r16
    17be:	14 96       	adiw	r26, 0x04	; 4
    17c0:	6d 93       	st	X+, r22
    17c2:	7d 93       	st	X+, r23
    17c4:	8d 93       	st	X+, r24
    17c6:	9c 93       	st	X, r25
    17c8:	17 97       	sbiw	r26, 0x07	; 7
    17ca:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <orientation>
    17ce:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <orientation+0x1>
    17d2:	a0 91 6a 01 	lds	r26, 0x016A	; 0x80016a <orientation+0x2>
    17d6:	b0 91 6b 01 	lds	r27, 0x016B	; 0x80016b <orientation+0x3>
    17da:	f8 01       	movw	r30, r16
    17dc:	80 87       	std	Z+8, r24	; 0x08
    17de:	91 87       	std	Z+9, r25	; 0x09
    17e0:	a2 87       	std	Z+10, r26	; 0x0a
    17e2:	b3 87       	std	Z+11, r27	; 0x0b
    17e4:	c2 59       	subi	r28, 0x92	; 146
    17e6:	df 4f       	sbci	r29, 0xFF	; 255
    17e8:	0f b6       	in	r0, 0x3f	; 63
    17ea:	f8 94       	cli
    17ec:	de bf       	out	0x3e, r29	; 62
    17ee:	0f be       	out	0x3f, r0	; 63
    17f0:	cd bf       	out	0x3d, r28	; 61
    17f2:	df 91       	pop	r29
    17f4:	cf 91       	pop	r28
    17f6:	1f 91       	pop	r17
    17f8:	0f 91       	pop	r16
    17fa:	ff 90       	pop	r15
    17fc:	ef 90       	pop	r14
    17fe:	df 90       	pop	r13
    1800:	cf 90       	pop	r12
    1802:	bf 90       	pop	r11
    1804:	af 90       	pop	r10
    1806:	9f 90       	pop	r9
    1808:	8f 90       	pop	r8
    180a:	7f 90       	pop	r7
    180c:	6f 90       	pop	r6
    180e:	5f 90       	pop	r5
    1810:	4f 90       	pop	r4
    1812:	3f 90       	pop	r3
    1814:	2f 90       	pop	r2
    1816:	08 95       	ret

00001818 <drop>:
    1818:	cf 92       	push	r12
    181a:	df 92       	push	r13
    181c:	ef 92       	push	r14
    181e:	ff 92       	push	r15
    1820:	0f 93       	push	r16
    1822:	1f 93       	push	r17
    1824:	cf 93       	push	r28
    1826:	df 93       	push	r29
    1828:	c0 90 64 01 	lds	r12, 0x0164	; 0x800164 <scale>
    182c:	d0 90 65 01 	lds	r13, 0x0165	; 0x800165 <scale+0x1>
    1830:	e0 90 66 01 	lds	r14, 0x0166	; 0x800166 <scale+0x2>
    1834:	f0 90 67 01 	lds	r15, 0x0167	; 0x800167 <scale+0x3>
    1838:	c8 e5       	ldi	r28, 0x58	; 88
    183a:	d1 e0       	ldi	r29, 0x01	; 1
    183c:	0c e6       	ldi	r16, 0x6C	; 108
    183e:	11 e0       	ldi	r17, 0x01	; 1
    1840:	a7 01       	movw	r20, r14
    1842:	96 01       	movw	r18, r12
    1844:	f8 01       	movw	r30, r16
    1846:	60 81       	ld	r22, Z
    1848:	71 81       	ldd	r23, Z+1	; 0x01
    184a:	82 81       	ldd	r24, Z+2	; 0x02
    184c:	93 81       	ldd	r25, Z+3	; 0x03
    184e:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    1852:	68 83       	st	Y, r22
    1854:	79 83       	std	Y+1, r23	; 0x01
    1856:	8a 83       	std	Y+2, r24	; 0x02
    1858:	9b 83       	std	Y+3, r25	; 0x03
    185a:	f8 01       	movw	r30, r16
    185c:	24 81       	ldd	r18, Z+4	; 0x04
    185e:	35 81       	ldd	r19, Z+5	; 0x05
    1860:	46 81       	ldd	r20, Z+6	; 0x06
    1862:	57 81       	ldd	r21, Z+7	; 0x07
    1864:	c7 01       	movw	r24, r14
    1866:	b6 01       	movw	r22, r12
    1868:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    186c:	6c 83       	std	Y+4, r22	; 0x04
    186e:	7d 83       	std	Y+5, r23	; 0x05
    1870:	8e 83       	std	Y+6, r24	; 0x06
    1872:	9f 83       	std	Y+7, r25	; 0x07
    1874:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <orientation>
    1878:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <orientation+0x1>
    187c:	a0 91 6a 01 	lds	r26, 0x016A	; 0x80016a <orientation+0x2>
    1880:	b0 91 6b 01 	lds	r27, 0x016B	; 0x80016b <orientation+0x3>
    1884:	88 87       	std	Y+8, r24	; 0x08
    1886:	99 87       	std	Y+9, r25	; 0x09
    1888:	aa 87       	std	Y+10, r26	; 0x0a
    188a:	bb 87       	std	Y+11, r27	; 0x0b
    188c:	df 91       	pop	r29
    188e:	cf 91       	pop	r28
    1890:	1f 91       	pop	r17
    1892:	0f 91       	pop	r16
    1894:	ff 90       	pop	r15
    1896:	ef 90       	pop	r14
    1898:	df 90       	pop	r13
    189a:	cf 90       	pop	r12
    189c:	08 95       	ret

0000189e <location_calculate>:
 stars = 4 - (lost[0]+lost[1]+lost[2]+lost[3]);
 }
 }

void location_calculate(unsigned int* data)
{
    189e:	cf 93       	push	r28
    18a0:	df 93       	push	r29
    18a2:	ec 01       	movw	r28, r24
countstar(data);
    18a4:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <countstar>
switch(stars) 
    18a8:	20 91 55 01 	lds	r18, 0x0155	; 0x800155 <stars>
    18ac:	30 91 56 01 	lds	r19, 0x0156	; 0x800156 <stars+0x1>
    18b0:	22 30       	cpi	r18, 0x02	; 2
    18b2:	31 05       	cpc	r19, r1
    18b4:	a9 f0       	breq	.+42     	; 0x18e0 <location_calculate+0x42>
    18b6:	3c f4       	brge	.+14     	; 0x18c6 <location_calculate+0x28>
    18b8:	21 15       	cp	r18, r1
    18ba:	31 05       	cpc	r19, r1
    18bc:	b9 f0       	breq	.+46     	; 0x18ec <location_calculate+0x4e>
    18be:	21 30       	cpi	r18, 0x01	; 1
    18c0:	31 05       	cpc	r19, r1
    18c2:	89 f0       	breq	.+34     	; 0x18e6 <location_calculate+0x48>
    18c4:	16 c0       	rjmp	.+44     	; 0x18f2 <location_calculate+0x54>
    18c6:	23 30       	cpi	r18, 0x03	; 3
    18c8:	31 05       	cpc	r19, r1
    18ca:	39 f0       	breq	.+14     	; 0x18da <location_calculate+0x3c>
    18cc:	24 30       	cpi	r18, 0x04	; 4
    18ce:	31 05       	cpc	r19, r1
    18d0:	81 f4       	brne	.+32     	; 0x18f2 <location_calculate+0x54>
{
	case 4:
	calculate4(data);
    18d2:	ce 01       	movw	r24, r28
    18d4:	0e 94 28 08 	call	0x1050	; 0x1050 <calculate4>
	break;
    18d8:	0e c0       	rjmp	.+28     	; 0x18f6 <location_calculate+0x58>
	*/
}

void calculate3(unsigned int* data)
{
    drop(); // change later
    18da:	0e 94 0c 0c 	call	0x1818	; 0x1818 <drop>
    18de:	0b c0       	rjmp	.+22     	; 0x18f6 <location_calculate+0x58>
	case 3:
	calculate3(data);
	break;
	
	case 2:
	drop();
    18e0:	0e 94 0c 0c 	call	0x1818	; 0x1818 <drop>
	break;
    18e4:	08 c0       	rjmp	.+16     	; 0x18f6 <location_calculate+0x58>
	
	case 1:
	drop();
    18e6:	0e 94 0c 0c 	call	0x1818	; 0x1818 <drop>
	break;
    18ea:	05 c0       	rjmp	.+10     	; 0x18f6 <location_calculate+0x58>
	
	case 0:
	drop();
    18ec:	0e 94 0c 0c 	call	0x1818	; 0x1818 <drop>
	break;
    18f0:	02 c0       	rjmp	.+4      	; 0x18f6 <location_calculate+0x58>
	
	default: 
	drop(); // caution
    18f2:	0e 94 0c 0c 	call	0x1818	; 0x1818 <drop>
}

}
    18f6:	df 91       	pop	r29
    18f8:	cf 91       	pop	r28
    18fa:	08 95       	ret

000018fc <location_update>:
 if (m_wii_open()){init_mwii =1;}
 else {}//error
 }

 void location_update(unsigned int* data)
 {
    18fc:	cf 93       	push	r28
    18fe:	df 93       	push	r29
    1900:	ec 01       	movw	r28, r24
 if (!init_mwii){location_init();}
    1902:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <init_mwii>
    1906:	81 11       	cpse	r24, r1
    1908:	02 c0       	rjmp	.+4      	; 0x190e <location_update+0x12>
    190a:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <location_init>
 // if (m_wii_read(data)) 
 //{
 location_calculate(data);
    190e:	ce 01       	movw	r24, r28
    1910:	0e 94 4f 0c 	call	0x189e	; 0x189e <location_calculate>
 setPosition(location);
    1914:	88 e5       	ldi	r24, 0x58	; 88
    1916:	91 e0       	ldi	r25, 0x01	; 1
    1918:	0e 94 c4 03 	call	0x788	; 0x788 <setPosition>
  //}
 //else {}//error
 }
    191c:	df 91       	pop	r29
    191e:	cf 91       	pop	r28
    1920:	08 95       	ret

00001922 <update_puck>:
	 m_usb_tx_int(PT_ADC[4]);
     m_usb_tx_string("\t state: ");
	 m_usb_tx_int(getPuckState());
	 m_usb_tx_string("\n");

}
    1922:	2f 92       	push	r2
    1924:	3f 92       	push	r3
    1926:	4f 92       	push	r4
    1928:	5f 92       	push	r5
    192a:	6f 92       	push	r6
    192c:	7f 92       	push	r7
    192e:	8f 92       	push	r8
    1930:	9f 92       	push	r9
    1932:	af 92       	push	r10
    1934:	bf 92       	push	r11
    1936:	cf 92       	push	r12
    1938:	df 92       	push	r13
    193a:	ef 92       	push	r14
    193c:	ff 92       	push	r15
    193e:	0f 93       	push	r16
    1940:	1f 93       	push	r17
    1942:	cf 93       	push	r28
    1944:	df 93       	push	r29
    1946:	cd b7       	in	r28, 0x3d	; 61
    1948:	de b7       	in	r29, 0x3e	; 62
    194a:	64 97       	sbiw	r28, 0x14	; 20
    194c:	0f b6       	in	r0, 0x3f	; 63
    194e:	f8 94       	cli
    1950:	de bf       	out	0x3e, r29	; 62
    1952:	0f be       	out	0x3f, r0	; 63
    1954:	cd bf       	out	0x3d, r28	; 61
    1956:	84 e1       	ldi	r24, 0x14	; 20
    1958:	ef e0       	ldi	r30, 0x0F	; 15
    195a:	f1 e0       	ldi	r31, 0x01	; 1
    195c:	de 01       	movw	r26, r28
    195e:	11 96       	adiw	r26, 0x01	; 1
    1960:	01 90       	ld	r0, Z+
    1962:	0d 92       	st	X+, r0
    1964:	8a 95       	dec	r24
    1966:	e1 f7       	brne	.-8      	; 0x1960 <update_puck+0x3e>
    1968:	0e 94 1b 01 	call	0x236	; 0x236 <ADC0>
    196c:	0a e7       	ldi	r16, 0x7A	; 122
    196e:	11 e0       	ldi	r17, 0x01	; 1
    1970:	f8 01       	movw	r30, r16
    1972:	60 83       	st	Z, r22
    1974:	71 83       	std	Z+1, r23	; 0x01
    1976:	82 83       	std	Z+2, r24	; 0x02
    1978:	93 83       	std	Z+3, r25	; 0x03
    197a:	0e 94 47 01 	call	0x28e	; 0x28e <ADC1>
    197e:	f8 01       	movw	r30, r16
    1980:	64 83       	std	Z+4, r22	; 0x04
    1982:	75 83       	std	Z+5, r23	; 0x05
    1984:	86 83       	std	Z+6, r24	; 0x06
    1986:	97 83       	std	Z+7, r25	; 0x07
    1988:	0e 94 73 01 	call	0x2e6	; 0x2e6 <ADC2>
    198c:	f8 01       	movw	r30, r16
    198e:	60 87       	std	Z+8, r22	; 0x08
    1990:	71 87       	std	Z+9, r23	; 0x09
    1992:	82 87       	std	Z+10, r24	; 0x0a
    1994:	93 87       	std	Z+11, r25	; 0x0b
    1996:	0e 94 9f 01 	call	0x33e	; 0x33e <ADC3>
    199a:	f8 01       	movw	r30, r16
    199c:	64 87       	std	Z+12, r22	; 0x0c
    199e:	75 87       	std	Z+13, r23	; 0x0d
    19a0:	86 87       	std	Z+14, r24	; 0x0e
    19a2:	97 87       	std	Z+15, r25	; 0x0f
    19a4:	0e 94 cb 01 	call	0x396	; 0x396 <ADC4>
    19a8:	f8 01       	movw	r30, r16
    19aa:	60 8b       	std	Z+16, r22	; 0x10
    19ac:	71 8b       	std	Z+17, r23	; 0x11
    19ae:	82 8b       	std	Z+18, r24	; 0x12
    19b0:	93 8b       	std	Z+19, r25	; 0x13
    19b2:	78 01       	movw	r14, r16
    19b4:	0f 2e       	mov	r0, r31
    19b6:	fe e8       	ldi	r31, 0x8E	; 142
    19b8:	cf 2e       	mov	r12, r31
    19ba:	f1 e0       	ldi	r31, 0x01	; 1
    19bc:	df 2e       	mov	r13, r31
    19be:	f0 2d       	mov	r31, r0
    19c0:	20 e0       	ldi	r18, 0x00	; 0
    19c2:	30 e0       	ldi	r19, 0x00	; 0
    19c4:	48 e4       	ldi	r20, 0x48	; 72
    19c6:	53 e4       	ldi	r21, 0x43	; 67
    19c8:	f8 01       	movw	r30, r16
    19ca:	60 81       	ld	r22, Z
    19cc:	71 81       	ldd	r23, Z+1	; 0x01
    19ce:	82 81       	ldd	r24, Z+2	; 0x02
    19d0:	93 81       	ldd	r25, Z+3	; 0x03
    19d2:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
    19d6:	88 23       	and	r24, r24
    19d8:	2c f4       	brge	.+10     	; 0x19e4 <update_puck+0xc2>
    19da:	f8 01       	movw	r30, r16
    19dc:	10 82       	st	Z, r1
    19de:	11 82       	std	Z+1, r1	; 0x01
    19e0:	12 82       	std	Z+2, r1	; 0x02
    19e2:	13 82       	std	Z+3, r1	; 0x03
    19e4:	0c 5f       	subi	r16, 0xFC	; 252
    19e6:	1f 4f       	sbci	r17, 0xFF	; 255
    19e8:	0c 15       	cp	r16, r12
    19ea:	1d 05       	cpc	r17, r13
    19ec:	49 f7       	brne	.-46     	; 0x19c0 <update_puck+0x9e>
    19ee:	ce 01       	movw	r24, r28
    19f0:	01 96       	adiw	r24, 0x01	; 1
    19f2:	1c 01       	movw	r2, r24
    19f4:	41 2c       	mov	r4, r1
    19f6:	51 2c       	mov	r5, r1
    19f8:	32 01       	movw	r6, r4
    19fa:	00 e0       	ldi	r16, 0x00	; 0
    19fc:	10 e0       	ldi	r17, 0x00	; 0
    19fe:	f7 01       	movw	r30, r14
    1a00:	81 90       	ld	r8, Z+
    1a02:	91 90       	ld	r9, Z+
    1a04:	a1 90       	ld	r10, Z+
    1a06:	b1 90       	ld	r11, Z+
    1a08:	7f 01       	movw	r14, r30
    1a0a:	f1 01       	movw	r30, r2
    1a0c:	21 91       	ld	r18, Z+
    1a0e:	31 91       	ld	r19, Z+
    1a10:	41 91       	ld	r20, Z+
    1a12:	51 91       	ld	r21, Z+
    1a14:	1f 01       	movw	r2, r30
    1a16:	c5 01       	movw	r24, r10
    1a18:	b4 01       	movw	r22, r8
    1a1a:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    1a1e:	9b 01       	movw	r18, r22
    1a20:	ac 01       	movw	r20, r24
    1a22:	c3 01       	movw	r24, r6
    1a24:	b2 01       	movw	r22, r4
    1a26:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    1a2a:	2b 01       	movw	r4, r22
    1a2c:	3c 01       	movw	r6, r24
    1a2e:	b8 01       	movw	r22, r16
    1a30:	11 0f       	add	r17, r17
    1a32:	88 0b       	sbc	r24, r24
    1a34:	99 0b       	sbc	r25, r25
    1a36:	0e 94 10 14 	call	0x2820	; 0x2820 <__floatsisf>
    1a3a:	9b 01       	movw	r18, r22
    1a3c:	ac 01       	movw	r20, r24
    1a3e:	c5 01       	movw	r24, r10
    1a40:	b4 01       	movw	r22, r8
    1a42:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__addsf3>
    1a46:	0e 94 d8 13 	call	0x27b0	; 0x27b0 <__fixsfsi>
    1a4a:	8b 01       	movw	r16, r22
    1a4c:	ec 14       	cp	r14, r12
    1a4e:	fd 04       	cpc	r15, r13
    1a50:	b1 f6       	brne	.-84     	; 0x19fe <update_puck+0xdc>
    1a52:	07 2e       	mov	r0, r23
    1a54:	00 0c       	add	r0, r0
    1a56:	88 0b       	sbc	r24, r24
    1a58:	99 0b       	sbc	r25, r25
    1a5a:	0e 94 10 14 	call	0x2820	; 0x2820 <__floatsisf>
    1a5e:	9b 01       	movw	r18, r22
    1a60:	ac 01       	movw	r20, r24
    1a62:	c3 01       	movw	r24, r6
    1a64:	b2 01       	movw	r22, r4
    1a66:	0e 94 66 13 	call	0x26cc	; 0x26cc <__divsf3>
    1a6a:	60 93 8e 01 	sts	0x018E, r22	; 0x80018e <puck_angle>
    1a6e:	70 93 8f 01 	sts	0x018F, r23	; 0x80018f <puck_angle+0x1>
    1a72:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <puck_angle+0x2>
    1a76:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <puck_angle+0x3>
    1a7a:	09 3c       	cpi	r16, 0xC9	; 201
    1a7c:	11 05       	cpc	r17, r1
    1a7e:	0c f4       	brge	.+2      	; 0x1a82 <update_puck+0x160>
    1a80:	46 c0       	rjmp	.+140    	; 0x1b0e <update_puck+0x1ec>
    1a82:	c0 90 82 01 	lds	r12, 0x0182	; 0x800182 <PT_ADC+0x8>
    1a86:	d0 90 83 01 	lds	r13, 0x0183	; 0x800183 <PT_ADC+0x9>
    1a8a:	e0 90 84 01 	lds	r14, 0x0184	; 0x800184 <PT_ADC+0xa>
    1a8e:	f0 90 85 01 	lds	r15, 0x0185	; 0x800185 <PT_ADC+0xb>
    1a92:	20 e0       	ldi	r18, 0x00	; 0
    1a94:	30 ec       	ldi	r19, 0xC0	; 192
    1a96:	48 e7       	ldi	r20, 0x78	; 120
    1a98:	54 e4       	ldi	r21, 0x44	; 68
    1a9a:	c7 01       	movw	r24, r14
    1a9c:	b6 01       	movw	r22, r12
    1a9e:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
    1aa2:	18 16       	cp	r1, r24
    1aa4:	7c f5       	brge	.+94     	; 0x1b04 <update_puck+0x1e2>
    1aa6:	20 e0       	ldi	r18, 0x00	; 0
    1aa8:	30 e8       	ldi	r19, 0x80	; 128
    1aaa:	4c e7       	ldi	r20, 0x7C	; 124
    1aac:	54 e4       	ldi	r21, 0x44	; 68
    1aae:	c7 01       	movw	r24, r14
    1ab0:	b6 01       	movw	r22, r12
    1ab2:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
    1ab6:	88 23       	and	r24, r24
    1ab8:	2c f5       	brge	.+74     	; 0x1b04 <update_puck+0x1e2>
    1aba:	20 e0       	ldi	r18, 0x00	; 0
    1abc:	30 e8       	ldi	r19, 0x80	; 128
    1abe:	47 e7       	ldi	r20, 0x77	; 119
    1ac0:	54 e4       	ldi	r21, 0x44	; 68
    1ac2:	60 91 7e 01 	lds	r22, 0x017E	; 0x80017e <PT_ADC+0x4>
    1ac6:	70 91 7f 01 	lds	r23, 0x017F	; 0x80017f <PT_ADC+0x5>
    1aca:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <PT_ADC+0x6>
    1ace:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <PT_ADC+0x7>
    1ad2:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
    1ad6:	18 16       	cp	r1, r24
    1ad8:	84 f0       	brlt	.+32     	; 0x1afa <update_puck+0x1d8>
    1ada:	20 e0       	ldi	r18, 0x00	; 0
    1adc:	30 e8       	ldi	r19, 0x80	; 128
    1ade:	47 e7       	ldi	r20, 0x77	; 119
    1ae0:	54 e4       	ldi	r21, 0x44	; 68
    1ae2:	60 91 86 01 	lds	r22, 0x0186	; 0x800186 <PT_ADC+0xc>
    1ae6:	70 91 87 01 	lds	r23, 0x0187	; 0x800187 <PT_ADC+0xd>
    1aea:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <PT_ADC+0xe>
    1aee:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <PT_ADC+0xf>
    1af2:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <__gesf2>
    1af6:	18 16       	cp	r1, r24
    1af8:	2c f4       	brge	.+10     	; 0x1b04 <update_puck+0x1e2>
    1afa:	82 e0       	ldi	r24, 0x02	; 2
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	0e 94 be 03 	call	0x77c	; 0x77c <setPuckState>
    1b02:	09 c0       	rjmp	.+18     	; 0x1b16 <update_puck+0x1f4>
    1b04:	81 e0       	ldi	r24, 0x01	; 1
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	0e 94 be 03 	call	0x77c	; 0x77c <setPuckState>
    1b0c:	04 c0       	rjmp	.+8      	; 0x1b16 <update_puck+0x1f4>
    1b0e:	80 e0       	ldi	r24, 0x00	; 0
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	0e 94 be 03 	call	0x77c	; 0x77c <setPuckState>
    1b16:	64 96       	adiw	r28, 0x14	; 20
    1b18:	0f b6       	in	r0, 0x3f	; 63
    1b1a:	f8 94       	cli
    1b1c:	de bf       	out	0x3e, r29	; 62
    1b1e:	0f be       	out	0x3f, r0	; 63
    1b20:	cd bf       	out	0x3d, r28	; 61
    1b22:	df 91       	pop	r29
    1b24:	cf 91       	pop	r28
    1b26:	1f 91       	pop	r17
    1b28:	0f 91       	pop	r16
    1b2a:	ff 90       	pop	r15
    1b2c:	ef 90       	pop	r14
    1b2e:	df 90       	pop	r13
    1b30:	cf 90       	pop	r12
    1b32:	bf 90       	pop	r11
    1b34:	af 90       	pop	r10
    1b36:	9f 90       	pop	r9
    1b38:	8f 90       	pop	r8
    1b3a:	7f 90       	pop	r7
    1b3c:	6f 90       	pop	r6
    1b3e:	5f 90       	pop	r5
    1b40:	4f 90       	pop	r4
    1b42:	3f 90       	pop	r3
    1b44:	2f 90       	pop	r2
    1b46:	08 95       	ret

00001b48 <shoot>:
	
}

void shoot(){
	//kick the puck into the goal
	set(PORTB, 7);
    1b48:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1b4a:	87 ea       	ldi	r24, 0xA7	; 167
    1b4c:	91 e6       	ldi	r25, 0x61	; 97
    1b4e:	01 97       	sbiw	r24, 0x01	; 1
    1b50:	f1 f7       	brne	.-4      	; 0x1b4e <shoot+0x6>
    1b52:	00 c0       	rjmp	.+0      	; 0x1b54 <shoot+0xc>
    1b54:	00 00       	nop
	m_wait(100);
	clear(PORTB, 7);
    1b56:	2f 98       	cbi	0x05, 7	; 5
    1b58:	08 95       	ret

00001b5a <comm_test>:
}


void comm_test(){
    1b5a:	4a e0       	ldi	r20, 0x0A	; 10
    1b5c:	50 e0       	ldi	r21, 0x00	; 0
     int i; // for flashing
     for(i=0;i<10;i++){
     clear(PORTD,LED_pin);
    1b5e:	ed e0       	ldi	r30, 0x0D	; 13
    1b60:	f1 e0       	ldi	r31, 0x01	; 1
    1b62:	61 e0       	ldi	r22, 0x01	; 1
    1b64:	70 e0       	ldi	r23, 0x00	; 0
    1b66:	9b b1       	in	r25, 0x0b	; 11
    1b68:	9b 01       	movw	r18, r22
    1b6a:	00 80       	ld	r0, Z
    1b6c:	02 c0       	rjmp	.+4      	; 0x1b72 <comm_test+0x18>
    1b6e:	22 0f       	add	r18, r18
    1b70:	33 1f       	adc	r19, r19
    1b72:	0a 94       	dec	r0
    1b74:	e2 f7       	brpl	.-8      	; 0x1b6e <comm_test+0x14>
    1b76:	82 2f       	mov	r24, r18
    1b78:	80 95       	com	r24
    1b7a:	89 23       	and	r24, r25
    1b7c:	8b b9       	out	0x0b, r24	; 11
    1b7e:	2f e3       	ldi	r18, 0x3F	; 63
    1b80:	82 e4       	ldi	r24, 0x42	; 66
    1b82:	9f e0       	ldi	r25, 0x0F	; 15
    1b84:	21 50       	subi	r18, 0x01	; 1
    1b86:	80 40       	sbci	r24, 0x00	; 0
    1b88:	90 40       	sbci	r25, 0x00	; 0
    1b8a:	e1 f7       	brne	.-8      	; 0x1b84 <comm_test+0x2a>
    1b8c:	00 c0       	rjmp	.+0      	; 0x1b8e <comm_test+0x34>
    1b8e:	00 00       	nop
	 m_wait(5000);
	 set(PORTD,LED_pin);
    1b90:	2b b1       	in	r18, 0x0b	; 11
    1b92:	cb 01       	movw	r24, r22
    1b94:	00 80       	ld	r0, Z
    1b96:	02 c0       	rjmp	.+4      	; 0x1b9c <comm_test+0x42>
    1b98:	88 0f       	add	r24, r24
    1b9a:	99 1f       	adc	r25, r25
    1b9c:	0a 94       	dec	r0
    1b9e:	e2 f7       	brpl	.-8      	; 0x1b98 <comm_test+0x3e>
    1ba0:	82 2b       	or	r24, r18
    1ba2:	8b b9       	out	0x0b, r24	; 11
    1ba4:	2f e3       	ldi	r18, 0x3F	; 63
    1ba6:	82 e4       	ldi	r24, 0x42	; 66
    1ba8:	9f e0       	ldi	r25, 0x0F	; 15
    1baa:	21 50       	subi	r18, 0x01	; 1
    1bac:	80 40       	sbci	r24, 0x00	; 0
    1bae:	90 40       	sbci	r25, 0x00	; 0
    1bb0:	e1 f7       	brne	.-8      	; 0x1baa <comm_test+0x50>
    1bb2:	00 c0       	rjmp	.+0      	; 0x1bb4 <comm_test+0x5a>
    1bb4:	00 00       	nop
    1bb6:	41 50       	subi	r20, 0x01	; 1
    1bb8:	51 09       	sbc	r21, r1
}


void comm_test(){
     int i; // for flashing
     for(i=0;i<10;i++){
    1bba:	a9 f6       	brne	.-86     	; 0x1b66 <comm_test+0xc>
     clear(PORTD,LED_pin);
	 m_wait(5000);
	 set(PORTD,LED_pin);
	 m_wait(5000);} // flash for 10 times				
     }
    1bbc:	08 95       	ret

00001bbe <init0>:

void init0(unsigned int frequency)
{
	OCR0A = frequency;
    1bbe:	87 bd       	out	0x27, r24	; 39

	//clock prescaler /1024
	set(TCCR0B, CS02);
    1bc0:	85 b5       	in	r24, 0x25	; 37
    1bc2:	84 60       	ori	r24, 0x04	; 4
    1bc4:	85 bd       	out	0x25, r24	; 37
	clear(TCCR0B, CS01);
    1bc6:	85 b5       	in	r24, 0x25	; 37
    1bc8:	8d 7f       	andi	r24, 0xFD	; 253
    1bca:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS00);
    1bcc:	85 b5       	in	r24, 0x25	; 37
    1bce:	81 60       	ori	r24, 0x01	; 1
    1bd0:	85 bd       	out	0x25, r24	; 37

	//timer mode: up to OCR0A
	clear(TCCR0B, WGM02);
    1bd2:	85 b5       	in	r24, 0x25	; 37
    1bd4:	87 7f       	andi	r24, 0xF7	; 247
    1bd6:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A, WGM01);
    1bd8:	84 b5       	in	r24, 0x24	; 36
    1bda:	82 60       	ori	r24, 0x02	; 2
    1bdc:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A, WGM00);
    1bde:	84 b5       	in	r24, 0x24	; 36
    1be0:	8e 7f       	andi	r24, 0xFE	; 254
    1be2:	84 bd       	out	0x24, r24	; 36
    1be4:	08 95       	ret

00001be6 <interupt0>:
}

void interupt0(bool on)
{    if(on)
    1be6:	88 23       	and	r24, r24
    1be8:	39 f0       	breq	.+14     	; 0x1bf8 <interupt0+0x12>
	{
		set(TIMSK0, OCIE0A); //enable timer interupt
    1bea:	ee e6       	ldi	r30, 0x6E	; 110
    1bec:	f0 e0       	ldi	r31, 0x00	; 0
    1bee:	80 81       	ld	r24, Z
    1bf0:	82 60       	ori	r24, 0x02	; 2
    1bf2:	80 83       	st	Z, r24
		sei(); //turn on interupts
    1bf4:	78 94       	sei
    1bf6:	08 95       	ret
	}
	else
	{   clear(TIMSK0, OCIE0A);}
    1bf8:	ee e6       	ldi	r30, 0x6E	; 110
    1bfa:	f0 e0       	ldi	r31, 0x00	; 0
    1bfc:	80 81       	ld	r24, Z
    1bfe:	8d 7f       	andi	r24, 0xFD	; 253
    1c00:	80 83       	st	Z, r24
    1c02:	08 95       	ret

00001c04 <initialize>:
}



void initialize() {
	m_clockdivide(0); //the system clock must have 16 MHz frequency to use mBUS
    1c04:	e1 e6       	ldi	r30, 0x61	; 97
    1c06:	f0 e0       	ldi	r31, 0x00	; 0
    1c08:	80 e8       	ldi	r24, 0x80	; 128
    1c0a:	80 83       	st	Z, r24
    1c0c:	10 82       	st	Z, r1
	m_red(OFF);
    1c0e:	6e 9a       	sbi	0x0d, 6	; 13
    1c10:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
    1c12:	6a 9a       	sbi	0x0d, 2	; 13
    1c14:	72 9a       	sbi	0x0e, 2	; 14

    //enable inputs for switches,  enable the internal pull-up resistor
	clear(DDRB, 4);
    1c16:	24 98       	cbi	0x04, 4	; 4
	set(PORTB, 4);
    1c18:	2c 9a       	sbi	0x05, 4	; 5
	clear(DDRB, 5);
    1c1a:	25 98       	cbi	0x04, 5	; 4
	set(PORTB, 5);
    1c1c:	2d 9a       	sbi	0x05, 5	; 5

    // use a switch on B4 for team
	if(!check(PINB,4)) 
    1c1e:	1c 99       	sbic	0x03, 4	; 3
    1c20:	06 c0       	rjmp	.+12     	; 0x1c2e <initialize+0x2a>
	{LED_pin = 3;} 
    1c22:	83 e0       	ldi	r24, 0x03	; 3
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <LED_pin+0x1>
    1c2a:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <LED_pin>
    //use a switch on B5 for goal
    if(!check(PINB,5)) 
    1c2e:	1d 99       	sbic	0x03, 5	; 3
    1c30:	12 c0       	rjmp	.+36     	; 0x1c56 <initialize+0x52>
	{goal_x = 115;
    1c32:	83 e7       	ldi	r24, 0x73	; 115
    1c34:	90 e0       	ldi	r25, 0x00	; 0
    1c36:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <goal_x+0x1>
    1c3a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <goal_x>
	goal_y = 15;
    1c3e:	8f e0       	ldi	r24, 0x0F	; 15
    1c40:	90 e0       	ldi	r25, 0x00	; 0
    1c42:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <goal_y+0x1>
    1c46:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <goal_y>
	home_x = -70;}
    1c4a:	8a eb       	ldi	r24, 0xBA	; 186
    1c4c:	9f ef       	ldi	r25, 0xFF	; 255
    1c4e:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <home_x+0x1>
    1c52:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <home_x>
	
	// common cathode for LED input
	clear(DDRD, 4); 
    1c56:	54 98       	cbi	0x0a, 4	; 10
	set(PORTD,4);
    1c58:	5c 9a       	sbi	0x0b, 4	; 11
	//Enabling Positioning LED Pins for output
	set(DDRD, LED_pin);
    1c5a:	4a b1       	in	r20, 0x0a	; 10
    1c5c:	ed e0       	ldi	r30, 0x0D	; 13
    1c5e:	f1 e0       	ldi	r31, 0x01	; 1
    1c60:	81 e0       	ldi	r24, 0x01	; 1
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	9c 01       	movw	r18, r24
    1c66:	00 80       	ld	r0, Z
    1c68:	02 c0       	rjmp	.+4      	; 0x1c6e <initialize+0x6a>
    1c6a:	22 0f       	add	r18, r18
    1c6c:	33 1f       	adc	r19, r19
    1c6e:	0a 94       	dec	r0
    1c70:	e2 f7       	brpl	.-8      	; 0x1c6a <initialize+0x66>
    1c72:	24 2b       	or	r18, r20
    1c74:	2a b9       	out	0x0a, r18	; 10
	set(PORTD, LED_pin);
    1c76:	2b b1       	in	r18, 0x0b	; 11
    1c78:	00 80       	ld	r0, Z
    1c7a:	02 c0       	rjmp	.+4      	; 0x1c80 <initialize+0x7c>
    1c7c:	88 0f       	add	r24, r24
    1c7e:	99 1f       	adc	r25, r25
    1c80:	0a 94       	dec	r0
    1c82:	e2 f7       	brpl	.-8      	; 0x1c7c <initialize+0x78>
    1c84:	82 2b       	or	r24, r18
    1c86:	8b b9       	out	0x0b, r24	; 11

    // driver board PWM line B6,C6
	// enable direction line B0B1 for left motor, B2B3 for right motor
	set(DDRB, 0);
    1c88:	20 9a       	sbi	0x04, 0	; 4
	set(DDRB, 1);
    1c8a:	21 9a       	sbi	0x04, 1	; 4
	set(DDRB, 2);
    1c8c:	22 9a       	sbi	0x04, 2	; 4
	set(DDRB, 3);
    1c8e:	23 9a       	sbi	0x04, 3	; 4

	//enable kicker ports
	set(DDRB, 7);
    1c90:	27 9a       	sbi	0x04, 7	; 4

	set_power(INITIAL_POWER);
    1c92:	60 e0       	ldi	r22, 0x00	; 0
    1c94:	70 e0       	ldi	r23, 0x00	; 0
    1c96:	80 e0       	ldi	r24, 0x00	; 0
    1c98:	9f e3       	ldi	r25, 0x3F	; 63
    1c9a:	0e 94 ce 03 	call	0x79c	; 0x79c <set_power>

	//initialize mRF
	m_bus_init();
    1c9e:	0e 94 c7 0f 	call	0x1f8e	; 0x1f8e <m_bus_init>
	m_rf_open(CHANNEL, MY_ADDRESS, BUFFER_SIZE);
    1ca2:	4a e0       	ldi	r20, 0x0A	; 10
    1ca4:	69 e3       	ldi	r22, 0x39	; 57
    1ca6:	81 e0       	ldi	r24, 0x01	; 1
    1ca8:	0e 94 d8 0f 	call	0x1fb0	; 0x1fb0 <m_rf_open>

	// initialize mWii
	m_wii_open();
    1cac:	0e 94 c9 10 	call	0x2192	; 0x2192 <m_wii_open>

	//start timer0
	init0(MWII_FREQUENCY);
    1cb0:	8a ef       	ldi	r24, 0xFA	; 250
    1cb2:	90 e0       	ldi	r25, 0x00	; 0
    1cb4:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <init0>
	interupt0(1);
    1cb8:	81 e0       	ldi	r24, 0x01	; 1
    1cba:	0e 94 f3 0d 	call	0x1be6	; 0x1be6 <interupt0>

	// start ADC
	initADC();
    1cbe:	0e 94 04 01 	call	0x208	; 0x208 <initADC>

	sei(); //enable interrupts
    1cc2:	78 94       	sei
    1cc4:	08 95       	ret

00001cc6 <main>:
void init0(unsigned int frequency); // timer0 init for mwii reading
void interupt0(bool on);

int main(void)
{
    initialize();
    1cc6:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <initialize>
	m_red(ON);
    1cca:	6e 9a       	sbi	0x0d, 6	; 13
    1ccc:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
    1cce:	6a 9a       	sbi	0x0d, 2	; 13
    1cd0:	72 98       	cbi	0x0e, 2	; 14
	//curve(puck_angle); // find puck
	
	if(receive){
	    m_wii_read(data);
		location_update(data);
    	m_green(TOGGLE);
    1cd2:	68 94       	set
    1cd4:	ee 24       	eor	r14, r14
    1cd6:	e2 f8       	bld	r14, 2
			case GAME_OVER:
			setMainState(WAIT);
			break;
		}
		RF_READ = 0;
		m_red(TOGGLE);
    1cd8:	68 94       	set
    1cda:	ff 24       	eor	r15, r15
    1cdc:	f6 f8       	bld	r15, 6
		//	setMainState(SHOOT);
		if( getPuckState()!= I_HAVE_PUCK ){
			setMainState(APPROACH_PUCK);
		}
		else{move(goal_x, goal_y);}
		clear(PORTD,LED_pin);
    1cde:	0d e0       	ldi	r16, 0x0D	; 13
    1ce0:	11 e0       	ldi	r17, 0x01	; 1
    1ce2:	c1 e0       	ldi	r28, 0x01	; 1
    1ce4:	d0 e0       	ldi	r29, 0x00	; 0
    //search();
	
	//move(goal_x,goal_y);//qualification
	//curve(puck_angle); // find puck
	
	if(receive){
    1ce6:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <receive>
    1cea:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <receive+0x1>
    1cee:	89 2b       	or	r24, r25
    1cf0:	81 f0       	breq	.+32     	; 0x1d12 <main+0x4c>
	    m_wii_read(data);
    1cf2:	82 e9       	ldi	r24, 0x92	; 146
    1cf4:	91 e0       	ldi	r25, 0x01	; 1
    1cf6:	0e 94 ea 11 	call	0x23d4	; 0x23d4 <m_wii_read>
		location_update(data);
    1cfa:	82 e9       	ldi	r24, 0x92	; 146
    1cfc:	91 e0       	ldi	r25, 0x01	; 1
    1cfe:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <location_update>
    	m_green(TOGGLE);
    1d02:	6a 9a       	sbi	0x0d, 2	; 13
    1d04:	8e b1       	in	r24, 0x0e	; 14
    1d06:	8e 25       	eor	r24, r14
    1d08:	8e b9       	out	0x0e, r24	; 14
		receive = 0;
    1d0a:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <receive+0x1>
    1d0e:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <receive>
	}

	update_puck();
    1d12:	0e 94 91 0c 	call	0x1922	; 0x1922 <update_puck>

	
	if(RF_READ) {
    1d16:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <RF_READ>
    1d1a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <RF_READ+0x1>
    1d1e:	89 2b       	or	r24, r25
    1d20:	09 f4       	brne	.+2      	; 0x1d24 <main+0x5e>
    1d22:	44 c0       	rjmp	.+136    	; 0x1dac <main+0xe6>
     	m_rf_read(buffer, BUFFER_SIZE);
    1d24:	6a e0       	ldi	r22, 0x0A	; 10
    1d26:	81 eb       	ldi	r24, 0xB1	; 177
    1d28:	91 e0       	ldi	r25, 0x01	; 1
    1d2a:	0e 94 2e 10 	call	0x205c	; 0x205c <m_rf_read>
    	message = buffer[0];
    1d2e:	e0 91 b1 01 	lds	r30, 0x01B1	; 0x8001b1 <buffer>
    1d32:	e0 93 b0 01 	sts	0x01B0, r30	; 0x8001b0 <message>
		switch(message){
    1d36:	8e 2f       	mov	r24, r30
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	fc 01       	movw	r30, r24
    1d3c:	e0 5a       	subi	r30, 0xA0	; 160
    1d3e:	f1 09       	sbc	r31, r1
    1d40:	e8 30       	cpi	r30, 0x08	; 8
    1d42:	f1 05       	cpc	r31, r1
    1d44:	20 f4       	brcc	.+8      	; 0x1d4e <main+0x88>
    1d46:	ea 5a       	subi	r30, 0xAA	; 170
    1d48:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4a:	0c 94 1b 16 	jmp	0x2c36	; 0x2c36 <__tablejump2__>
			default:
			setMainState(COMM);
    1d4e:	86 e0       	ldi	r24, 0x06	; 6
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
			break;
    1d56:	22 c0       	rjmp	.+68     	; 0x1d9c <main+0xd6>
			case COMM_TEST:
			setMainState(COMM);
    1d58:	86 e0       	ldi	r24, 0x06	; 6
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
			break;
    1d60:	1d c0       	rjmp	.+58     	; 0x1d9c <main+0xd6>
			case PLAY:
			setMainState(SEARCH);
    1d62:	82 e0       	ldi	r24, 0x02	; 2
    1d64:	90 e0       	ldi	r25, 0x00	; 0
    1d66:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
			break;
    1d6a:	18 c0       	rjmp	.+48     	; 0x1d9c <main+0xd6>
			case GOAL_R:
			setMainState(WAIT);
    1d6c:	80 e0       	ldi	r24, 0x00	; 0
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
			break;
    1d74:	13 c0       	rjmp	.+38     	; 0x1d9c <main+0xd6>
			case GOAL_B:
			setMainState(WAIT);
    1d76:	80 e0       	ldi	r24, 0x00	; 0
    1d78:	90 e0       	ldi	r25, 0x00	; 0
    1d7a:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
			break;
    1d7e:	0e c0       	rjmp	.+28     	; 0x1d9c <main+0xd6>
			case PAUSE:
			setMainState(WAIT);
    1d80:	80 e0       	ldi	r24, 0x00	; 0
    1d82:	90 e0       	ldi	r25, 0x00	; 0
    1d84:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
			break;
    1d88:	09 c0       	rjmp	.+18     	; 0x1d9c <main+0xd6>
			case HALFTIME:
			setMainState(WAIT); // how to deal with halftime change?
    1d8a:	80 e0       	ldi	r24, 0x00	; 0
    1d8c:	90 e0       	ldi	r25, 0x00	; 0
    1d8e:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
			break;
    1d92:	04 c0       	rjmp	.+8      	; 0x1d9c <main+0xd6>
			case GAME_OVER:
			setMainState(WAIT);
    1d94:	80 e0       	ldi	r24, 0x00	; 0
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
			break;
		}
		RF_READ = 0;
    1d9c:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <RF_READ+0x1>
    1da0:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <RF_READ>
		m_red(TOGGLE);
    1da4:	6e 9a       	sbi	0x0d, 6	; 13
    1da6:	8e b1       	in	r24, 0x0e	; 14
    1da8:	8f 25       	eor	r24, r15
    1daa:	8e b9       	out	0x0e, r24	; 14
	}

	switch(getMainState()){
    1dac:	0e 94 bb 03 	call	0x776	; 0x776 <getMainState>
    1db0:	90 e0       	ldi	r25, 0x00	; 0
    1db2:	87 30       	cpi	r24, 0x07	; 7
    1db4:	91 05       	cpc	r25, r1
    1db6:	28 f4       	brcc	.+10     	; 0x1dc2 <main+0xfc>
    1db8:	fc 01       	movw	r30, r24
    1dba:	e2 5a       	subi	r30, 0xA2	; 162
    1dbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dbe:	0c 94 1b 16 	jmp	0x2c36	; 0x2c36 <__tablejump2__>
		default:
		setMainState(WAIT); // should be WAIT
    1dc2:	80 e0       	ldi	r24, 0x00	; 0
    1dc4:	90 e0       	ldi	r25, 0x00	; 0
    1dc6:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
		break;
    1dca:	8d cf       	rjmp	.-230    	; 0x1ce6 <main+0x20>

		case WAIT:
		stop(); // in drive.c
    1dcc:	0e 94 d7 07 	call	0xfae	; 0xfae <stop>
		break;
    1dd0:	8a cf       	rjmp	.-236    	; 0x1ce6 <main+0x20>

		case RETURN:
		position = getPosition();
    1dd2:	0e 94 c9 03 	call	0x792	; 0x792 <getPosition>
    1dd6:	6c 01       	movw	r12, r24
    1dd8:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <position+0x1>
    1ddc:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <position>
		if((fabs(position[0] - home_x) < 10) && (fabs(position[1] - home_y) < 10))
    1de0:	a0 90 07 01 	lds	r10, 0x0107	; 0x800107 <home_x>
    1de4:	b0 90 08 01 	lds	r11, 0x0108	; 0x800108 <home_x+0x1>
    1de8:	b5 01       	movw	r22, r10
    1dea:	0b 2c       	mov	r0, r11
    1dec:	00 0c       	add	r0, r0
    1dee:	88 0b       	sbc	r24, r24
    1df0:	99 0b       	sbc	r25, r25
    1df2:	0e 94 10 14 	call	0x2820	; 0x2820 <__floatsisf>
    1df6:	9b 01       	movw	r18, r22
    1df8:	ac 01       	movw	r20, r24
    1dfa:	f6 01       	movw	r30, r12
    1dfc:	60 81       	ld	r22, Z
    1dfe:	71 81       	ldd	r23, Z+1	; 0x01
    1e00:	82 81       	ldd	r24, Z+2	; 0x02
    1e02:	93 81       	ldd	r25, Z+3	; 0x03
    1e04:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    1e08:	9f 77       	andi	r25, 0x7F	; 127
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	30 e0       	ldi	r19, 0x00	; 0
    1e0e:	40 e2       	ldi	r20, 0x20	; 32
    1e10:	51 e4       	ldi	r21, 0x41	; 65
    1e12:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
    1e16:	88 23       	and	r24, r24
    1e18:	0c f5       	brge	.+66     	; 0x1e5c <main+0x196>
    1e1a:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <home_y>
    1e1e:	70 91 75 01 	lds	r23, 0x0175	; 0x800175 <home_y+0x1>
    1e22:	07 2e       	mov	r0, r23
    1e24:	00 0c       	add	r0, r0
    1e26:	88 0b       	sbc	r24, r24
    1e28:	99 0b       	sbc	r25, r25
    1e2a:	0e 94 10 14 	call	0x2820	; 0x2820 <__floatsisf>
    1e2e:	9b 01       	movw	r18, r22
    1e30:	ac 01       	movw	r20, r24
    1e32:	f6 01       	movw	r30, r12
    1e34:	64 81       	ldd	r22, Z+4	; 0x04
    1e36:	75 81       	ldd	r23, Z+5	; 0x05
    1e38:	86 81       	ldd	r24, Z+6	; 0x06
    1e3a:	97 81       	ldd	r25, Z+7	; 0x07
    1e3c:	0e 94 7d 12 	call	0x24fa	; 0x24fa <__subsf3>
    1e40:	9f 77       	andi	r25, 0x7F	; 127
    1e42:	20 e0       	ldi	r18, 0x00	; 0
    1e44:	30 e0       	ldi	r19, 0x00	; 0
    1e46:	40 e2       	ldi	r20, 0x20	; 32
    1e48:	51 e4       	ldi	r21, 0x41	; 65
    1e4a:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__cmpsf2>
    1e4e:	88 23       	and	r24, r24
    1e50:	2c f4       	brge	.+10     	; 0x1e5c <main+0x196>
		{setMainState(SEARCH);}
    1e52:	82 e0       	ldi	r24, 0x02	; 2
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
    1e5a:	45 cf       	rjmp	.-374    	; 0x1ce6 <main+0x20>
		else{move(home_x,home_y);}
    1e5c:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <home_y>
    1e60:	70 91 75 01 	lds	r23, 0x0175	; 0x800175 <home_y+0x1>
    1e64:	c5 01       	movw	r24, r10
    1e66:	0e 94 12 05 	call	0xa24	; 0xa24 <move>
    1e6a:	3d cf       	rjmp	.-390    	; 0x1ce6 <main+0x20>
		break;

		case SEARCH:
		if(getPuckState()==PUCK_VISIBLE)
    1e6c:	0e 94 c1 03 	call	0x782	; 0x782 <getPuckState>
    1e70:	81 30       	cpi	r24, 0x01	; 1
    1e72:	29 f4       	brne	.+10     	; 0x1e7e <main+0x1b8>
		{setMainState(APPROACH_PUCK);}
    1e74:	83 e0       	ldi	r24, 0x03	; 3
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
    1e7c:	34 cf       	rjmp	.-408    	; 0x1ce6 <main+0x20>
		else{search();}
    1e7e:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <search>
    1e82:	31 cf       	rjmp	.-414    	; 0x1ce6 <main+0x20>
		break;

		case APPROACH_PUCK:
		if(getPuckState()==I_HAVE_PUCK){
    1e84:	0e 94 c1 03 	call	0x782	; 0x782 <getPuckState>
    1e88:	82 30       	cpi	r24, 0x02	; 2
    1e8a:	29 f4       	brne	.+10     	; 0x1e96 <main+0x1d0>
			setMainState(APPROACH_GOAL);
    1e8c:	84 e0       	ldi	r24, 0x04	; 4
    1e8e:	90 e0       	ldi	r25, 0x00	; 0
    1e90:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
    1e94:	13 c0       	rjmp	.+38     	; 0x1ebc <main+0x1f6>
		}
		else if(getPuckState()==PUCK_NDEF){
    1e96:	0e 94 c1 03 	call	0x782	; 0x782 <getPuckState>
    1e9a:	81 11       	cpse	r24, r1
    1e9c:	05 c0       	rjmp	.+10     	; 0x1ea8 <main+0x1e2>
			setMainState(SEARCH);
    1e9e:	82 e0       	ldi	r24, 0x02	; 2
    1ea0:	90 e0       	ldi	r25, 0x00	; 0
    1ea2:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
    1ea6:	0a c0       	rjmp	.+20     	; 0x1ebc <main+0x1f6>
		}
		else{curve(puck_angle);}
    1ea8:	60 91 8e 01 	lds	r22, 0x018E	; 0x80018e <puck_angle>
    1eac:	70 91 8f 01 	lds	r23, 0x018F	; 0x80018f <puck_angle+0x1>
    1eb0:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <puck_angle+0x2>
    1eb4:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <puck_angle+0x3>
    1eb8:	0e 94 a3 06 	call	0xd46	; 0xd46 <curve>
		set(PORTD,LED_pin);
    1ebc:	2b b1       	in	r18, 0x0b	; 11
    1ebe:	ce 01       	movw	r24, r28
    1ec0:	f8 01       	movw	r30, r16
    1ec2:	00 80       	ld	r0, Z
    1ec4:	02 c0       	rjmp	.+4      	; 0x1eca <main+0x204>
    1ec6:	88 0f       	add	r24, r24
    1ec8:	99 1f       	adc	r25, r25
    1eca:	0a 94       	dec	r0
    1ecc:	e2 f7       	brpl	.-8      	; 0x1ec6 <main+0x200>
    1ece:	82 2b       	or	r24, r18
    1ed0:	8b b9       	out	0x0b, r24	; 11
		break;
    1ed2:	09 cf       	rjmp	.-494    	; 0x1ce6 <main+0x20>

		case APPROACH_GOAL:
		//if close enough
		//	setMainState(SHOOT);
		if( getPuckState()!= I_HAVE_PUCK ){
    1ed4:	0e 94 c1 03 	call	0x782	; 0x782 <getPuckState>
    1ed8:	82 30       	cpi	r24, 0x02	; 2
    1eda:	29 f0       	breq	.+10     	; 0x1ee6 <main+0x220>
			setMainState(APPROACH_PUCK);
    1edc:	83 e0       	ldi	r24, 0x03	; 3
    1ede:	90 e0       	ldi	r25, 0x00	; 0
    1ee0:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
    1ee4:	0a c0       	rjmp	.+20     	; 0x1efa <main+0x234>
		}
		else{move(goal_x, goal_y);}
    1ee6:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <goal_y>
    1eea:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <goal_y+0x1>
    1eee:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <goal_x>
    1ef2:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <goal_x+0x1>
    1ef6:	0e 94 12 05 	call	0xa24	; 0xa24 <move>
		clear(PORTD,LED_pin);
    1efa:	9b b1       	in	r25, 0x0b	; 11
    1efc:	9e 01       	movw	r18, r28
    1efe:	f8 01       	movw	r30, r16
    1f00:	00 80       	ld	r0, Z
    1f02:	02 c0       	rjmp	.+4      	; 0x1f08 <main+0x242>
    1f04:	22 0f       	add	r18, r18
    1f06:	33 1f       	adc	r19, r19
    1f08:	0a 94       	dec	r0
    1f0a:	e2 f7       	brpl	.-8      	; 0x1f04 <main+0x23e>
    1f0c:	82 2f       	mov	r24, r18
    1f0e:	80 95       	com	r24
    1f10:	89 23       	and	r24, r25
    1f12:	8b b9       	out	0x0b, r24	; 11
		break;
    1f14:	e8 ce       	rjmp	.-560    	; 0x1ce6 <main+0x20>

		case SHOOT:
		shoot();
    1f16:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <shoot>
		setMainState(SEARCH);
    1f1a:	82 e0       	ldi	r24, 0x02	; 2
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
		break;
    1f22:	e1 ce       	rjmp	.-574    	; 0x1ce6 <main+0x20>

		case COMM:
		comm_test();
    1f24:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <comm_test>
		setMainState(WAIT);
    1f28:	80 e0       	ldi	r24, 0x00	; 0
    1f2a:	90 e0       	ldi	r25, 0x00	; 0
    1f2c:	0e 94 b8 03 	call	0x770	; 0x770 <setMainState>
		break;
    1f30:	da ce       	rjmp	.-588    	; 0x1ce6 <main+0x20>

00001f32 <__vector_3>:
	{   clear(TIMSK0, OCIE0A);}
}


ISR(INT2_vect)
{   
    1f32:	1f 92       	push	r1
    1f34:	0f 92       	push	r0
    1f36:	0f b6       	in	r0, 0x3f	; 63
    1f38:	0f 92       	push	r0
    1f3a:	11 24       	eor	r1, r1
    1f3c:	8f 93       	push	r24
    1f3e:	9f 93       	push	r25
	RF_READ = 1;
    1f40:	81 e0       	ldi	r24, 0x01	; 1
    1f42:	90 e0       	ldi	r25, 0x00	; 0
    1f44:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <RF_READ+0x1>
    1f48:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <RF_READ>
}
    1f4c:	9f 91       	pop	r25
    1f4e:	8f 91       	pop	r24
    1f50:	0f 90       	pop	r0
    1f52:	0f be       	out	0x3f, r0	; 63
    1f54:	0f 90       	pop	r0
    1f56:	1f 90       	pop	r1
    1f58:	18 95       	reti

00001f5a <__vector_21>:

ISR(TIMER0_COMPA_vect){
    1f5a:	1f 92       	push	r1
    1f5c:	0f 92       	push	r0
    1f5e:	0f b6       	in	r0, 0x3f	; 63
    1f60:	0f 92       	push	r0
    1f62:	11 24       	eor	r1, r1
    1f64:	8f 93       	push	r24
    1f66:	9f 93       	push	r25
	if(receive) {}
    1f68:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <receive>
    1f6c:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <receive+0x1>
    1f70:	89 2b       	or	r24, r25
    1f72:	31 f4       	brne	.+12     	; 0x1f80 <__vector_21+0x26>
	else
	{receive = 1;}
    1f74:	81 e0       	ldi	r24, 0x01	; 1
    1f76:	90 e0       	ldi	r25, 0x00	; 0
    1f78:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <receive+0x1>
    1f7c:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <receive>
}
    1f80:	9f 91       	pop	r25
    1f82:	8f 91       	pop	r24
    1f84:	0f 90       	pop	r0
    1f86:	0f be       	out	0x3f, r0	; 63
    1f88:	0f 90       	pop	r0
    1f8a:	1f 90       	pop	r1
    1f8c:	18 95       	reti

00001f8e <m_bus_init>:
    1f8e:	58 9a       	sbi	0x0b, 0	; 11
    1f90:	59 9a       	sbi	0x0b, 1	; 11
    1f92:	5a 9a       	sbi	0x0b, 2	; 11
    1f94:	8c e0       	ldi	r24, 0x0C	; 12
    1f96:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    1f9a:	e9 e6       	ldi	r30, 0x69	; 105
    1f9c:	f0 e0       	ldi	r31, 0x00	; 0
    1f9e:	80 81       	ld	r24, Z
    1fa0:	80 62       	ori	r24, 0x20	; 32
    1fa2:	80 83       	st	Z, r24
    1fa4:	80 81       	ld	r24, Z
    1fa6:	8f 7e       	andi	r24, 0xEF	; 239
    1fa8:	80 83       	st	Z, r24
    1faa:	ea 9a       	sbi	0x1d, 2	; 29
    1fac:	78 94       	sei
    1fae:	08 95       	ret

00001fb0 <m_rf_open>:
    1fb0:	1f 93       	push	r17
    1fb2:	cf 93       	push	r28
    1fb4:	df 93       	push	r29
    1fb6:	18 2f       	mov	r17, r24
    1fb8:	d6 2f       	mov	r29, r22
    1fba:	c4 2f       	mov	r28, r20
    1fbc:	0e 94 c7 0f 	call	0x1f8e	; 0x1f8e <m_bus_init>
    1fc0:	94 ea       	ldi	r25, 0xA4	; 164
    1fc2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1fc6:	ec eb       	ldi	r30, 0xBC	; 188
    1fc8:	f0 e0       	ldi	r31, 0x00	; 0
    1fca:	90 81       	ld	r25, Z
    1fcc:	99 23       	and	r25, r25
    1fce:	ec f7       	brge	.-6      	; 0x1fca <m_rf_open+0x1a>
    1fd0:	90 e5       	ldi	r25, 0x50	; 80
    1fd2:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1fd6:	94 e8       	ldi	r25, 0x84	; 132
    1fd8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1fdc:	ec eb       	ldi	r30, 0xBC	; 188
    1fde:	f0 e0       	ldi	r31, 0x00	; 0
    1fe0:	90 81       	ld	r25, Z
    1fe2:	99 23       	and	r25, r25
    1fe4:	ec f7       	brge	.-6      	; 0x1fe0 <m_rf_open+0x30>
    1fe6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1fea:	98 7f       	andi	r25, 0xF8	; 248
    1fec:	90 32       	cpi	r25, 0x20	; 32
    1fee:	29 f4       	brne	.+10     	; 0x1ffa <m_rf_open+0x4a>
    1ff0:	84 e9       	ldi	r24, 0x94	; 148
    1ff2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1ff6:	80 e0       	ldi	r24, 0x00	; 0
    1ff8:	2d c0       	rjmp	.+90     	; 0x2054 <m_rf_open+0xa4>
    1ffa:	81 e0       	ldi	r24, 0x01	; 1
    1ffc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2000:	84 e8       	ldi	r24, 0x84	; 132
    2002:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2006:	ec eb       	ldi	r30, 0xBC	; 188
    2008:	f0 e0       	ldi	r31, 0x00	; 0
    200a:	90 81       	ld	r25, Z
    200c:	99 23       	and	r25, r25
    200e:	ec f7       	brge	.-6      	; 0x200a <m_rf_open+0x5a>
    2010:	10 93 bb 00 	sts	0x00BB, r17	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2014:	84 e8       	ldi	r24, 0x84	; 132
    2016:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    201a:	ec eb       	ldi	r30, 0xBC	; 188
    201c:	f0 e0       	ldi	r31, 0x00	; 0
    201e:	80 81       	ld	r24, Z
    2020:	88 23       	and	r24, r24
    2022:	ec f7       	brge	.-6      	; 0x201e <m_rf_open+0x6e>
    2024:	d0 93 bb 00 	sts	0x00BB, r29	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2028:	84 e8       	ldi	r24, 0x84	; 132
    202a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    202e:	ec eb       	ldi	r30, 0xBC	; 188
    2030:	f0 e0       	ldi	r31, 0x00	; 0
    2032:	80 81       	ld	r24, Z
    2034:	88 23       	and	r24, r24
    2036:	ec f7       	brge	.-6      	; 0x2032 <m_rf_open+0x82>
    2038:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    203c:	84 e8       	ldi	r24, 0x84	; 132
    203e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2042:	ec eb       	ldi	r30, 0xBC	; 188
    2044:	f0 e0       	ldi	r31, 0x00	; 0
    2046:	80 81       	ld	r24, Z
    2048:	88 23       	and	r24, r24
    204a:	ec f7       	brge	.-6      	; 0x2046 <m_rf_open+0x96>
    204c:	84 e9       	ldi	r24, 0x94	; 148
    204e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2052:	81 e0       	ldi	r24, 0x01	; 1
    2054:	df 91       	pop	r29
    2056:	cf 91       	pop	r28
    2058:	1f 91       	pop	r17
    205a:	08 95       	ret

0000205c <m_rf_read>:
    205c:	cf 93       	push	r28
    205e:	df 93       	push	r29
    2060:	9c 01       	movw	r18, r24
    2062:	84 ea       	ldi	r24, 0xA4	; 164
    2064:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2068:	ec eb       	ldi	r30, 0xBC	; 188
    206a:	f0 e0       	ldi	r31, 0x00	; 0
    206c:	90 81       	ld	r25, Z
    206e:	99 23       	and	r25, r25
    2070:	ec f7       	brge	.-6      	; 0x206c <m_rf_read+0x10>
    2072:	81 e5       	ldi	r24, 0x51	; 81
    2074:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2078:	84 e8       	ldi	r24, 0x84	; 132
    207a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    207e:	ec eb       	ldi	r30, 0xBC	; 188
    2080:	f0 e0       	ldi	r31, 0x00	; 0
    2082:	90 81       	ld	r25, Z
    2084:	99 23       	and	r25, r25
    2086:	ec f7       	brge	.-6      	; 0x2082 <m_rf_read+0x26>
    2088:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    208c:	88 7f       	andi	r24, 0xF8	; 248
    208e:	88 34       	cpi	r24, 0x48	; 72
    2090:	29 f4       	brne	.+10     	; 0x209c <m_rf_read+0x40>
    2092:	84 e9       	ldi	r24, 0x94	; 148
    2094:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2098:	80 e0       	ldi	r24, 0x00	; 0
    209a:	41 c0       	rjmp	.+130    	; 0x211e <m_rf_read+0xc2>
    209c:	84 ec       	ldi	r24, 0xC4	; 196
    209e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    20a2:	ec eb       	ldi	r30, 0xBC	; 188
    20a4:	f0 e0       	ldi	r31, 0x00	; 0
    20a6:	90 81       	ld	r25, Z
    20a8:	99 23       	and	r25, r25
    20aa:	ec f7       	brge	.-6      	; 0x20a6 <m_rf_read+0x4a>
    20ac:	40 91 bb 00 	lds	r20, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    20b0:	46 13       	cpse	r20, r22
    20b2:	09 c0       	rjmp	.+18     	; 0x20c6 <m_rf_read+0x6a>
    20b4:	84 2f       	mov	r24, r20
    20b6:	90 e0       	ldi	r25, 0x00	; 0
    20b8:	01 97       	sbiw	r24, 0x01	; 1
    20ba:	18 16       	cp	r1, r24
    20bc:	19 06       	cpc	r1, r25
    20be:	44 f0       	brlt	.+16     	; 0x20d0 <m_rf_read+0x74>
    20c0:	40 e0       	ldi	r20, 0x00	; 0
    20c2:	50 e0       	ldi	r21, 0x00	; 0
    20c4:	1a c0       	rjmp	.+52     	; 0x20fa <m_rf_read+0x9e>
    20c6:	84 e9       	ldi	r24, 0x94	; 148
    20c8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    20cc:	80 e0       	ldi	r24, 0x00	; 0
    20ce:	27 c0       	rjmp	.+78     	; 0x211e <m_rf_read+0xc2>
    20d0:	d9 01       	movw	r26, r18
    20d2:	50 e0       	ldi	r21, 0x00	; 0
    20d4:	41 50       	subi	r20, 0x01	; 1
    20d6:	51 09       	sbc	r21, r1
    20d8:	b9 01       	movw	r22, r18
    20da:	64 0f       	add	r22, r20
    20dc:	75 1f       	adc	r23, r21
    20de:	ec eb       	ldi	r30, 0xBC	; 188
    20e0:	f0 e0       	ldi	r31, 0x00	; 0
    20e2:	84 ec       	ldi	r24, 0xC4	; 196
    20e4:	cb eb       	ldi	r28, 0xBB	; 187
    20e6:	d0 e0       	ldi	r29, 0x00	; 0
    20e8:	80 83       	st	Z, r24
    20ea:	90 81       	ld	r25, Z
    20ec:	99 23       	and	r25, r25
    20ee:	ec f7       	brge	.-6      	; 0x20ea <m_rf_read+0x8e>
    20f0:	98 81       	ld	r25, Y
    20f2:	9d 93       	st	X+, r25
    20f4:	a6 17       	cp	r26, r22
    20f6:	b7 07       	cpc	r27, r23
    20f8:	b9 f7       	brne	.-18     	; 0x20e8 <m_rf_read+0x8c>
    20fa:	84 e8       	ldi	r24, 0x84	; 132
    20fc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2100:	ec eb       	ldi	r30, 0xBC	; 188
    2102:	f0 e0       	ldi	r31, 0x00	; 0
    2104:	90 81       	ld	r25, Z
    2106:	99 23       	and	r25, r25
    2108:	ec f7       	brge	.-6      	; 0x2104 <m_rf_read+0xa8>
    210a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    210e:	f9 01       	movw	r30, r18
    2110:	e4 0f       	add	r30, r20
    2112:	f5 1f       	adc	r31, r21
    2114:	80 83       	st	Z, r24
    2116:	84 e9       	ldi	r24, 0x94	; 148
    2118:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    211c:	81 e0       	ldi	r24, 0x01	; 1
    211e:	df 91       	pop	r29
    2120:	cf 91       	pop	r28
    2122:	08 95       	ret

00002124 <twi_wait>:
    2124:	20 e0       	ldi	r18, 0x00	; 0
    2126:	30 e0       	ldi	r19, 0x00	; 0
    2128:	ec eb       	ldi	r30, 0xBC	; 188
    212a:	f0 e0       	ldi	r31, 0x00	; 0
    212c:	80 81       	ld	r24, Z
    212e:	88 23       	and	r24, r24
    2130:	34 f0       	brlt	.+12     	; 0x213e <twi_wait+0x1a>
    2132:	2f 5f       	subi	r18, 0xFF	; 255
    2134:	3f 4f       	sbci	r19, 0xFF	; 255
    2136:	29 3e       	cpi	r18, 0xE9	; 233
    2138:	83 e0       	ldi	r24, 0x03	; 3
    213a:	38 07       	cpc	r19, r24
    213c:	b9 f7       	brne	.-18     	; 0x212c <twi_wait+0x8>
    213e:	81 e0       	ldi	r24, 0x01	; 1
    2140:	28 3e       	cpi	r18, 0xE8	; 232
    2142:	33 40       	sbci	r19, 0x03	; 3
    2144:	09 f4       	brne	.+2      	; 0x2148 <twi_wait+0x24>
    2146:	80 e0       	ldi	r24, 0x00	; 0
    2148:	08 95       	ret

0000214a <send_byte>:
    214a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    214e:	84 e8       	ldi	r24, 0x84	; 132
    2150:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2154:	0e 94 92 10 	call	0x2124	; 0x2124 <twi_wait>
    2158:	88 23       	and	r24, r24
    215a:	19 f0       	breq	.+6      	; 0x2162 <send_byte+0x18>
    215c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    2160:	88 7f       	andi	r24, 0xF8	; 248
    2162:	08 95       	ret

00002164 <start_write>:
    2164:	cf 93       	push	r28
    2166:	c8 2f       	mov	r28, r24
    2168:	94 ea       	ldi	r25, 0xA4	; 164
    216a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    216e:	0e 94 92 10 	call	0x2124	; 0x2124 <twi_wait>
    2172:	88 23       	and	r24, r24
    2174:	61 f0       	breq	.+24     	; 0x218e <start_write+0x2a>
    2176:	8c 2f       	mov	r24, r28
    2178:	88 0f       	add	r24, r24
    217a:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    217e:	80 32       	cpi	r24, 0x20	; 32
    2180:	29 f4       	brne	.+10     	; 0x218c <start_write+0x28>
    2182:	84 e9       	ldi	r24, 0x94	; 148
    2184:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2188:	80 e0       	ldi	r24, 0x00	; 0
    218a:	01 c0       	rjmp	.+2      	; 0x218e <start_write+0x2a>
    218c:	81 e0       	ldi	r24, 0x01	; 1
    218e:	cf 91       	pop	r28
    2190:	08 95       	ret

00002192 <m_wii_open>:
    2192:	0e 94 c7 0f 	call	0x1f8e	; 0x1f8e <m_bus_init>
    2196:	88 e5       	ldi	r24, 0x58	; 88
    2198:	0e 94 b2 10 	call	0x2164	; 0x2164 <start_write>
    219c:	88 23       	and	r24, r24
    219e:	09 f4       	brne	.+2      	; 0x21a2 <m_wii_open+0x10>
    21a0:	cd c0       	rjmp	.+410    	; 0x233c <m_wii_open+0x1aa>
    21a2:	80 e3       	ldi	r24, 0x30	; 48
    21a4:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    21a8:	88 23       	and	r24, r24
    21aa:	09 f4       	brne	.+2      	; 0x21ae <m_wii_open+0x1c>
    21ac:	c9 c0       	rjmp	.+402    	; 0x2340 <m_wii_open+0x1ae>
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    21b4:	88 23       	and	r24, r24
    21b6:	09 f4       	brne	.+2      	; 0x21ba <m_wii_open+0x28>
    21b8:	c5 c0       	rjmp	.+394    	; 0x2344 <m_wii_open+0x1b2>
    21ba:	84 e9       	ldi	r24, 0x94	; 148
    21bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    21c0:	83 ec       	ldi	r24, 0xC3	; 195
    21c2:	99 e0       	ldi	r25, 0x09	; 9
    21c4:	01 97       	sbiw	r24, 0x01	; 1
    21c6:	f1 f7       	brne	.-4      	; 0x21c4 <m_wii_open+0x32>
    21c8:	00 c0       	rjmp	.+0      	; 0x21ca <m_wii_open+0x38>
    21ca:	00 00       	nop
    21cc:	88 e5       	ldi	r24, 0x58	; 88
    21ce:	0e 94 b2 10 	call	0x2164	; 0x2164 <start_write>
    21d2:	88 23       	and	r24, r24
    21d4:	09 f4       	brne	.+2      	; 0x21d8 <m_wii_open+0x46>
    21d6:	b8 c0       	rjmp	.+368    	; 0x2348 <m_wii_open+0x1b6>
    21d8:	80 e0       	ldi	r24, 0x00	; 0
    21da:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    21de:	88 23       	and	r24, r24
    21e0:	09 f4       	brne	.+2      	; 0x21e4 <m_wii_open+0x52>
    21e2:	b4 c0       	rjmp	.+360    	; 0x234c <m_wii_open+0x1ba>
    21e4:	80 e0       	ldi	r24, 0x00	; 0
    21e6:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    21ea:	88 23       	and	r24, r24
    21ec:	09 f4       	brne	.+2      	; 0x21f0 <m_wii_open+0x5e>
    21ee:	b0 c0       	rjmp	.+352    	; 0x2350 <m_wii_open+0x1be>
    21f0:	80 e0       	ldi	r24, 0x00	; 0
    21f2:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    21f6:	88 23       	and	r24, r24
    21f8:	09 f4       	brne	.+2      	; 0x21fc <m_wii_open+0x6a>
    21fa:	ac c0       	rjmp	.+344    	; 0x2354 <m_wii_open+0x1c2>
    21fc:	80 e0       	ldi	r24, 0x00	; 0
    21fe:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    2202:	88 23       	and	r24, r24
    2204:	09 f4       	brne	.+2      	; 0x2208 <m_wii_open+0x76>
    2206:	a8 c0       	rjmp	.+336    	; 0x2358 <m_wii_open+0x1c6>
    2208:	80 e0       	ldi	r24, 0x00	; 0
    220a:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    220e:	88 23       	and	r24, r24
    2210:	09 f4       	brne	.+2      	; 0x2214 <m_wii_open+0x82>
    2212:	a4 c0       	rjmp	.+328    	; 0x235c <m_wii_open+0x1ca>
    2214:	80 e0       	ldi	r24, 0x00	; 0
    2216:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    221a:	88 23       	and	r24, r24
    221c:	09 f4       	brne	.+2      	; 0x2220 <m_wii_open+0x8e>
    221e:	a0 c0       	rjmp	.+320    	; 0x2360 <m_wii_open+0x1ce>
    2220:	80 e0       	ldi	r24, 0x00	; 0
    2222:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    2226:	88 23       	and	r24, r24
    2228:	09 f4       	brne	.+2      	; 0x222c <m_wii_open+0x9a>
    222a:	9c c0       	rjmp	.+312    	; 0x2364 <m_wii_open+0x1d2>
    222c:	80 e9       	ldi	r24, 0x90	; 144
    222e:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    2232:	88 23       	and	r24, r24
    2234:	09 f4       	brne	.+2      	; 0x2238 <m_wii_open+0xa6>
    2236:	98 c0       	rjmp	.+304    	; 0x2368 <m_wii_open+0x1d6>
    2238:	84 e9       	ldi	r24, 0x94	; 148
    223a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    223e:	83 ec       	ldi	r24, 0xC3	; 195
    2240:	99 e0       	ldi	r25, 0x09	; 9
    2242:	01 97       	sbiw	r24, 0x01	; 1
    2244:	f1 f7       	brne	.-4      	; 0x2242 <m_wii_open+0xb0>
    2246:	00 c0       	rjmp	.+0      	; 0x2248 <m_wii_open+0xb6>
    2248:	00 00       	nop
    224a:	88 e5       	ldi	r24, 0x58	; 88
    224c:	0e 94 b2 10 	call	0x2164	; 0x2164 <start_write>
    2250:	88 23       	and	r24, r24
    2252:	09 f4       	brne	.+2      	; 0x2256 <m_wii_open+0xc4>
    2254:	8b c0       	rjmp	.+278    	; 0x236c <m_wii_open+0x1da>
    2256:	87 e0       	ldi	r24, 0x07	; 7
    2258:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    225c:	88 23       	and	r24, r24
    225e:	09 f4       	brne	.+2      	; 0x2262 <m_wii_open+0xd0>
    2260:	87 c0       	rjmp	.+270    	; 0x2370 <m_wii_open+0x1de>
    2262:	80 e0       	ldi	r24, 0x00	; 0
    2264:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    2268:	88 23       	and	r24, r24
    226a:	09 f4       	brne	.+2      	; 0x226e <m_wii_open+0xdc>
    226c:	83 c0       	rjmp	.+262    	; 0x2374 <m_wii_open+0x1e2>
    226e:	81 e4       	ldi	r24, 0x41	; 65
    2270:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    2274:	88 23       	and	r24, r24
    2276:	09 f4       	brne	.+2      	; 0x227a <m_wii_open+0xe8>
    2278:	7f c0       	rjmp	.+254    	; 0x2378 <m_wii_open+0x1e6>
    227a:	84 e9       	ldi	r24, 0x94	; 148
    227c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2280:	83 ec       	ldi	r24, 0xC3	; 195
    2282:	99 e0       	ldi	r25, 0x09	; 9
    2284:	01 97       	sbiw	r24, 0x01	; 1
    2286:	f1 f7       	brne	.-4      	; 0x2284 <m_wii_open+0xf2>
    2288:	00 c0       	rjmp	.+0      	; 0x228a <m_wii_open+0xf8>
    228a:	00 00       	nop
    228c:	88 e5       	ldi	r24, 0x58	; 88
    228e:	0e 94 b2 10 	call	0x2164	; 0x2164 <start_write>
    2292:	88 23       	and	r24, r24
    2294:	09 f4       	brne	.+2      	; 0x2298 <m_wii_open+0x106>
    2296:	72 c0       	rjmp	.+228    	; 0x237c <m_wii_open+0x1ea>
    2298:	8a e1       	ldi	r24, 0x1A	; 26
    229a:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    229e:	88 23       	and	r24, r24
    22a0:	09 f4       	brne	.+2      	; 0x22a4 <m_wii_open+0x112>
    22a2:	6e c0       	rjmp	.+220    	; 0x2380 <m_wii_open+0x1ee>
    22a4:	80 e4       	ldi	r24, 0x40	; 64
    22a6:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    22aa:	88 23       	and	r24, r24
    22ac:	09 f4       	brne	.+2      	; 0x22b0 <m_wii_open+0x11e>
    22ae:	6a c0       	rjmp	.+212    	; 0x2384 <m_wii_open+0x1f2>
    22b0:	80 e0       	ldi	r24, 0x00	; 0
    22b2:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    22b6:	88 23       	and	r24, r24
    22b8:	09 f4       	brne	.+2      	; 0x22bc <m_wii_open+0x12a>
    22ba:	66 c0       	rjmp	.+204    	; 0x2388 <m_wii_open+0x1f6>
    22bc:	84 e9       	ldi	r24, 0x94	; 148
    22be:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    22c2:	83 ec       	ldi	r24, 0xC3	; 195
    22c4:	99 e0       	ldi	r25, 0x09	; 9
    22c6:	01 97       	sbiw	r24, 0x01	; 1
    22c8:	f1 f7       	brne	.-4      	; 0x22c6 <m_wii_open+0x134>
    22ca:	00 c0       	rjmp	.+0      	; 0x22cc <m_wii_open+0x13a>
    22cc:	00 00       	nop
    22ce:	88 e5       	ldi	r24, 0x58	; 88
    22d0:	0e 94 b2 10 	call	0x2164	; 0x2164 <start_write>
    22d4:	88 23       	and	r24, r24
    22d6:	09 f4       	brne	.+2      	; 0x22da <m_wii_open+0x148>
    22d8:	59 c0       	rjmp	.+178    	; 0x238c <m_wii_open+0x1fa>
    22da:	83 e3       	ldi	r24, 0x33	; 51
    22dc:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    22e0:	88 23       	and	r24, r24
    22e2:	09 f4       	brne	.+2      	; 0x22e6 <m_wii_open+0x154>
    22e4:	55 c0       	rjmp	.+170    	; 0x2390 <m_wii_open+0x1fe>
    22e6:	83 e0       	ldi	r24, 0x03	; 3
    22e8:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    22ec:	88 23       	and	r24, r24
    22ee:	09 f4       	brne	.+2      	; 0x22f2 <m_wii_open+0x160>
    22f0:	51 c0       	rjmp	.+162    	; 0x2394 <m_wii_open+0x202>
    22f2:	84 e9       	ldi	r24, 0x94	; 148
    22f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    22f8:	83 ec       	ldi	r24, 0xC3	; 195
    22fa:	99 e0       	ldi	r25, 0x09	; 9
    22fc:	01 97       	sbiw	r24, 0x01	; 1
    22fe:	f1 f7       	brne	.-4      	; 0x22fc <m_wii_open+0x16a>
    2300:	00 c0       	rjmp	.+0      	; 0x2302 <m_wii_open+0x170>
    2302:	00 00       	nop
    2304:	88 e5       	ldi	r24, 0x58	; 88
    2306:	0e 94 b2 10 	call	0x2164	; 0x2164 <start_write>
    230a:	88 23       	and	r24, r24
    230c:	09 f4       	brne	.+2      	; 0x2310 <m_wii_open+0x17e>
    230e:	44 c0       	rjmp	.+136    	; 0x2398 <m_wii_open+0x206>
    2310:	80 e3       	ldi	r24, 0x30	; 48
    2312:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    2316:	88 23       	and	r24, r24
    2318:	09 f4       	brne	.+2      	; 0x231c <m_wii_open+0x18a>
    231a:	40 c0       	rjmp	.+128    	; 0x239c <m_wii_open+0x20a>
    231c:	88 e0       	ldi	r24, 0x08	; 8
    231e:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    2322:	88 23       	and	r24, r24
    2324:	e9 f1       	breq	.+122    	; 0x23a0 <m_wii_open+0x20e>
    2326:	84 e9       	ldi	r24, 0x94	; 148
    2328:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    232c:	83 ec       	ldi	r24, 0xC3	; 195
    232e:	99 e0       	ldi	r25, 0x09	; 9
    2330:	01 97       	sbiw	r24, 0x01	; 1
    2332:	f1 f7       	brne	.-4      	; 0x2330 <m_wii_open+0x19e>
    2334:	00 c0       	rjmp	.+0      	; 0x2336 <m_wii_open+0x1a4>
    2336:	00 00       	nop
    2338:	81 e0       	ldi	r24, 0x01	; 1
    233a:	08 95       	ret
    233c:	80 e0       	ldi	r24, 0x00	; 0
    233e:	08 95       	ret
    2340:	80 e0       	ldi	r24, 0x00	; 0
    2342:	08 95       	ret
    2344:	80 e0       	ldi	r24, 0x00	; 0
    2346:	08 95       	ret
    2348:	80 e0       	ldi	r24, 0x00	; 0
    234a:	08 95       	ret
    234c:	80 e0       	ldi	r24, 0x00	; 0
    234e:	08 95       	ret
    2350:	80 e0       	ldi	r24, 0x00	; 0
    2352:	08 95       	ret
    2354:	80 e0       	ldi	r24, 0x00	; 0
    2356:	08 95       	ret
    2358:	80 e0       	ldi	r24, 0x00	; 0
    235a:	08 95       	ret
    235c:	80 e0       	ldi	r24, 0x00	; 0
    235e:	08 95       	ret
    2360:	80 e0       	ldi	r24, 0x00	; 0
    2362:	08 95       	ret
    2364:	80 e0       	ldi	r24, 0x00	; 0
    2366:	08 95       	ret
    2368:	80 e0       	ldi	r24, 0x00	; 0
    236a:	08 95       	ret
    236c:	80 e0       	ldi	r24, 0x00	; 0
    236e:	08 95       	ret
    2370:	80 e0       	ldi	r24, 0x00	; 0
    2372:	08 95       	ret
    2374:	80 e0       	ldi	r24, 0x00	; 0
    2376:	08 95       	ret
    2378:	80 e0       	ldi	r24, 0x00	; 0
    237a:	08 95       	ret
    237c:	80 e0       	ldi	r24, 0x00	; 0
    237e:	08 95       	ret
    2380:	80 e0       	ldi	r24, 0x00	; 0
    2382:	08 95       	ret
    2384:	80 e0       	ldi	r24, 0x00	; 0
    2386:	08 95       	ret
    2388:	80 e0       	ldi	r24, 0x00	; 0
    238a:	08 95       	ret
    238c:	80 e0       	ldi	r24, 0x00	; 0
    238e:	08 95       	ret
    2390:	80 e0       	ldi	r24, 0x00	; 0
    2392:	08 95       	ret
    2394:	80 e0       	ldi	r24, 0x00	; 0
    2396:	08 95       	ret
    2398:	80 e0       	ldi	r24, 0x00	; 0
    239a:	08 95       	ret
    239c:	80 e0       	ldi	r24, 0x00	; 0
    239e:	08 95       	ret
    23a0:	80 e0       	ldi	r24, 0x00	; 0
    23a2:	08 95       	ret

000023a4 <start_read>:
    23a4:	cf 93       	push	r28
    23a6:	c8 2f       	mov	r28, r24
    23a8:	84 ea       	ldi	r24, 0xA4	; 164
    23aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    23ae:	0e 94 92 10 	call	0x2124	; 0x2124 <twi_wait>
    23b2:	88 23       	and	r24, r24
    23b4:	69 f0       	breq	.+26     	; 0x23d0 <start_read+0x2c>
    23b6:	8c 2f       	mov	r24, r28
    23b8:	88 0f       	add	r24, r24
    23ba:	8f 5f       	subi	r24, 0xFF	; 255
    23bc:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    23c0:	88 34       	cpi	r24, 0x48	; 72
    23c2:	29 f4       	brne	.+10     	; 0x23ce <start_read+0x2a>
    23c4:	84 e9       	ldi	r24, 0x94	; 148
    23c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    23ca:	80 e0       	ldi	r24, 0x00	; 0
    23cc:	01 c0       	rjmp	.+2      	; 0x23d0 <start_read+0x2c>
    23ce:	81 e0       	ldi	r24, 0x01	; 1
    23d0:	cf 91       	pop	r28
    23d2:	08 95       	ret

000023d4 <m_wii_read>:
    23d4:	0f 93       	push	r16
    23d6:	1f 93       	push	r17
    23d8:	cf 93       	push	r28
    23da:	df 93       	push	r29
    23dc:	cd b7       	in	r28, 0x3d	; 61
    23de:	de b7       	in	r29, 0x3e	; 62
    23e0:	60 97       	sbiw	r28, 0x10	; 16
    23e2:	0f b6       	in	r0, 0x3f	; 63
    23e4:	f8 94       	cli
    23e6:	de bf       	out	0x3e, r29	; 62
    23e8:	0f be       	out	0x3f, r0	; 63
    23ea:	cd bf       	out	0x3d, r28	; 61
    23ec:	8c 01       	movw	r16, r24
    23ee:	fe 01       	movw	r30, r28
    23f0:	31 96       	adiw	r30, 0x01	; 1
    23f2:	80 e1       	ldi	r24, 0x10	; 16
    23f4:	df 01       	movw	r26, r30
    23f6:	1d 92       	st	X+, r1
    23f8:	8a 95       	dec	r24
    23fa:	e9 f7       	brne	.-6      	; 0x23f6 <m_wii_read+0x22>
    23fc:	88 e5       	ldi	r24, 0x58	; 88
    23fe:	0e 94 b2 10 	call	0x2164	; 0x2164 <start_write>
    2402:	88 23       	and	r24, r24
    2404:	09 f4       	brne	.+2      	; 0x2408 <m_wii_read+0x34>
    2406:	69 c0       	rjmp	.+210    	; 0x24da <m_wii_read+0x106>
    2408:	86 e3       	ldi	r24, 0x36	; 54
    240a:	0e 94 a5 10 	call	0x214a	; 0x214a <send_byte>
    240e:	88 23       	and	r24, r24
    2410:	09 f4       	brne	.+2      	; 0x2414 <m_wii_read+0x40>
    2412:	65 c0       	rjmp	.+202    	; 0x24de <m_wii_read+0x10a>
    2414:	84 e9       	ldi	r24, 0x94	; 148
    2416:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    241a:	b8 e0       	ldi	r27, 0x08	; 8
    241c:	ba 95       	dec	r27
    241e:	f1 f7       	brne	.-4      	; 0x241c <m_wii_read+0x48>
    2420:	00 00       	nop
    2422:	88 e5       	ldi	r24, 0x58	; 88
    2424:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <start_read>
    2428:	88 23       	and	r24, r24
    242a:	09 f4       	brne	.+2      	; 0x242e <m_wii_read+0x5a>
    242c:	5a c0       	rjmp	.+180    	; 0x24e2 <m_wii_read+0x10e>
    242e:	be 01       	movw	r22, r28
    2430:	6f 5f       	subi	r22, 0xFF	; 255
    2432:	7f 4f       	sbci	r23, 0xFF	; 255
    2434:	ae 01       	movw	r20, r28
    2436:	40 5f       	subi	r20, 0xF0	; 240
    2438:	5f 4f       	sbci	r21, 0xFF	; 255
    243a:	ec eb       	ldi	r30, 0xBC	; 188
    243c:	f0 e0       	ldi	r31, 0x00	; 0
    243e:	84 ec       	ldi	r24, 0xC4	; 196
    2440:	2b eb       	ldi	r18, 0xBB	; 187
    2442:	30 e0       	ldi	r19, 0x00	; 0
    2444:	80 83       	st	Z, r24
    2446:	90 81       	ld	r25, Z
    2448:	99 23       	and	r25, r25
    244a:	ec f7       	brge	.-6      	; 0x2446 <m_wii_read+0x72>
    244c:	d9 01       	movw	r26, r18
    244e:	9c 91       	ld	r25, X
    2450:	db 01       	movw	r26, r22
    2452:	9d 93       	st	X+, r25
    2454:	bd 01       	movw	r22, r26
    2456:	a4 17       	cp	r26, r20
    2458:	b5 07       	cpc	r27, r21
    245a:	a1 f7       	brne	.-24     	; 0x2444 <m_wii_read+0x70>
    245c:	84 e8       	ldi	r24, 0x84	; 132
    245e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2462:	ec eb       	ldi	r30, 0xBC	; 188
    2464:	f0 e0       	ldi	r31, 0x00	; 0
    2466:	80 81       	ld	r24, Z
    2468:	88 23       	and	r24, r24
    246a:	ec f7       	brge	.-6      	; 0x2466 <m_wii_read+0x92>
    246c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2470:	88 8b       	std	Y+16, r24	; 0x10
    2472:	84 e9       	ldi	r24, 0x94	; 148
    2474:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2478:	be 01       	movw	r22, r28
    247a:	6c 5f       	subi	r22, 0xFC	; 252
    247c:	7f 4f       	sbci	r23, 0xFF	; 255
    247e:	f8 01       	movw	r30, r16
    2480:	08 5e       	subi	r16, 0xE8	; 232
    2482:	1f 4f       	sbci	r17, 0xFF	; 255
    2484:	db 01       	movw	r26, r22
    2486:	2c 91       	ld	r18, X
    2488:	32 2f       	mov	r19, r18
    248a:	30 73       	andi	r19, 0x30	; 48
    248c:	cb 01       	movw	r24, r22
    248e:	02 97       	sbiw	r24, 0x02	; 2
    2490:	dc 01       	movw	r26, r24
    2492:	8c 91       	ld	r24, X
    2494:	90 e0       	ldi	r25, 0x00	; 0
    2496:	b0 e1       	ldi	r27, 0x10	; 16
    2498:	3b 9f       	mul	r19, r27
    249a:	80 0d       	add	r24, r0
    249c:	91 1d       	adc	r25, r1
    249e:	11 24       	eor	r1, r1
    24a0:	91 83       	std	Z+1, r25	; 0x01
    24a2:	80 83       	st	Z, r24
    24a4:	42 2f       	mov	r20, r18
    24a6:	40 7c       	andi	r20, 0xC0	; 192
    24a8:	50 e0       	ldi	r21, 0x00	; 0
    24aa:	44 0f       	add	r20, r20
    24ac:	55 1f       	adc	r21, r21
    24ae:	44 0f       	add	r20, r20
    24b0:	55 1f       	adc	r21, r21
    24b2:	cb 01       	movw	r24, r22
    24b4:	01 97       	sbiw	r24, 0x01	; 1
    24b6:	dc 01       	movw	r26, r24
    24b8:	8c 91       	ld	r24, X
    24ba:	48 0f       	add	r20, r24
    24bc:	51 1d       	adc	r21, r1
    24be:	53 83       	std	Z+3, r21	; 0x03
    24c0:	42 83       	std	Z+2, r20	; 0x02
    24c2:	2f 70       	andi	r18, 0x0F	; 15
    24c4:	30 e0       	ldi	r19, 0x00	; 0
    24c6:	35 83       	std	Z+5, r19	; 0x05
    24c8:	24 83       	std	Z+4, r18	; 0x04
    24ca:	6d 5f       	subi	r22, 0xFD	; 253
    24cc:	7f 4f       	sbci	r23, 0xFF	; 255
    24ce:	36 96       	adiw	r30, 0x06	; 6
    24d0:	e0 17       	cp	r30, r16
    24d2:	f1 07       	cpc	r31, r17
    24d4:	b9 f6       	brne	.-82     	; 0x2484 <m_wii_read+0xb0>
    24d6:	81 e0       	ldi	r24, 0x01	; 1
    24d8:	05 c0       	rjmp	.+10     	; 0x24e4 <m_wii_read+0x110>
    24da:	80 e0       	ldi	r24, 0x00	; 0
    24dc:	03 c0       	rjmp	.+6      	; 0x24e4 <m_wii_read+0x110>
    24de:	80 e0       	ldi	r24, 0x00	; 0
    24e0:	01 c0       	rjmp	.+2      	; 0x24e4 <m_wii_read+0x110>
    24e2:	80 e0       	ldi	r24, 0x00	; 0
    24e4:	60 96       	adiw	r28, 0x10	; 16
    24e6:	0f b6       	in	r0, 0x3f	; 63
    24e8:	f8 94       	cli
    24ea:	de bf       	out	0x3e, r29	; 62
    24ec:	0f be       	out	0x3f, r0	; 63
    24ee:	cd bf       	out	0x3d, r28	; 61
    24f0:	df 91       	pop	r29
    24f2:	cf 91       	pop	r28
    24f4:	1f 91       	pop	r17
    24f6:	0f 91       	pop	r16
    24f8:	08 95       	ret

000024fa <__subsf3>:
    24fa:	50 58       	subi	r21, 0x80	; 128

000024fc <__addsf3>:
    24fc:	bb 27       	eor	r27, r27
    24fe:	aa 27       	eor	r26, r26
    2500:	0e 94 95 12 	call	0x252a	; 0x252a <__addsf3x>
    2504:	0c 94 d8 14 	jmp	0x29b0	; 0x29b0 <__fp_round>
    2508:	0e 94 9f 14 	call	0x293e	; 0x293e <__fp_pscA>
    250c:	38 f0       	brcs	.+14     	; 0x251c <__addsf3+0x20>
    250e:	0e 94 a6 14 	call	0x294c	; 0x294c <__fp_pscB>
    2512:	20 f0       	brcs	.+8      	; 0x251c <__addsf3+0x20>
    2514:	39 f4       	brne	.+14     	; 0x2524 <__addsf3+0x28>
    2516:	9f 3f       	cpi	r25, 0xFF	; 255
    2518:	19 f4       	brne	.+6      	; 0x2520 <__addsf3+0x24>
    251a:	26 f4       	brtc	.+8      	; 0x2524 <__addsf3+0x28>
    251c:	0c 94 75 14 	jmp	0x28ea	; 0x28ea <__fp_nan>
    2520:	0e f4       	brtc	.+2      	; 0x2524 <__addsf3+0x28>
    2522:	e0 95       	com	r30
    2524:	e7 fb       	bst	r30, 7
    2526:	0c 94 6f 14 	jmp	0x28de	; 0x28de <__fp_inf>

0000252a <__addsf3x>:
    252a:	e9 2f       	mov	r30, r25
    252c:	0e 94 fd 14 	call	0x29fa	; 0x29fa <__fp_split3>
    2530:	58 f3       	brcs	.-42     	; 0x2508 <__addsf3+0xc>
    2532:	ba 17       	cp	r27, r26
    2534:	62 07       	cpc	r22, r18
    2536:	73 07       	cpc	r23, r19
    2538:	84 07       	cpc	r24, r20
    253a:	95 07       	cpc	r25, r21
    253c:	20 f0       	brcs	.+8      	; 0x2546 <__addsf3x+0x1c>
    253e:	79 f4       	brne	.+30     	; 0x255e <__addsf3x+0x34>
    2540:	a6 f5       	brtc	.+104    	; 0x25aa <__addsf3x+0x80>
    2542:	0c 94 1f 15 	jmp	0x2a3e	; 0x2a3e <__fp_zero>
    2546:	0e f4       	brtc	.+2      	; 0x254a <__addsf3x+0x20>
    2548:	e0 95       	com	r30
    254a:	0b 2e       	mov	r0, r27
    254c:	ba 2f       	mov	r27, r26
    254e:	a0 2d       	mov	r26, r0
    2550:	0b 01       	movw	r0, r22
    2552:	b9 01       	movw	r22, r18
    2554:	90 01       	movw	r18, r0
    2556:	0c 01       	movw	r0, r24
    2558:	ca 01       	movw	r24, r20
    255a:	a0 01       	movw	r20, r0
    255c:	11 24       	eor	r1, r1
    255e:	ff 27       	eor	r31, r31
    2560:	59 1b       	sub	r21, r25
    2562:	99 f0       	breq	.+38     	; 0x258a <__addsf3x+0x60>
    2564:	59 3f       	cpi	r21, 0xF9	; 249
    2566:	50 f4       	brcc	.+20     	; 0x257c <__addsf3x+0x52>
    2568:	50 3e       	cpi	r21, 0xE0	; 224
    256a:	68 f1       	brcs	.+90     	; 0x25c6 <__addsf3x+0x9c>
    256c:	1a 16       	cp	r1, r26
    256e:	f0 40       	sbci	r31, 0x00	; 0
    2570:	a2 2f       	mov	r26, r18
    2572:	23 2f       	mov	r18, r19
    2574:	34 2f       	mov	r19, r20
    2576:	44 27       	eor	r20, r20
    2578:	58 5f       	subi	r21, 0xF8	; 248
    257a:	f3 cf       	rjmp	.-26     	; 0x2562 <__addsf3x+0x38>
    257c:	46 95       	lsr	r20
    257e:	37 95       	ror	r19
    2580:	27 95       	ror	r18
    2582:	a7 95       	ror	r26
    2584:	f0 40       	sbci	r31, 0x00	; 0
    2586:	53 95       	inc	r21
    2588:	c9 f7       	brne	.-14     	; 0x257c <__addsf3x+0x52>
    258a:	7e f4       	brtc	.+30     	; 0x25aa <__addsf3x+0x80>
    258c:	1f 16       	cp	r1, r31
    258e:	ba 0b       	sbc	r27, r26
    2590:	62 0b       	sbc	r22, r18
    2592:	73 0b       	sbc	r23, r19
    2594:	84 0b       	sbc	r24, r20
    2596:	ba f0       	brmi	.+46     	; 0x25c6 <__addsf3x+0x9c>
    2598:	91 50       	subi	r25, 0x01	; 1
    259a:	a1 f0       	breq	.+40     	; 0x25c4 <__addsf3x+0x9a>
    259c:	ff 0f       	add	r31, r31
    259e:	bb 1f       	adc	r27, r27
    25a0:	66 1f       	adc	r22, r22
    25a2:	77 1f       	adc	r23, r23
    25a4:	88 1f       	adc	r24, r24
    25a6:	c2 f7       	brpl	.-16     	; 0x2598 <__addsf3x+0x6e>
    25a8:	0e c0       	rjmp	.+28     	; 0x25c6 <__addsf3x+0x9c>
    25aa:	ba 0f       	add	r27, r26
    25ac:	62 1f       	adc	r22, r18
    25ae:	73 1f       	adc	r23, r19
    25b0:	84 1f       	adc	r24, r20
    25b2:	48 f4       	brcc	.+18     	; 0x25c6 <__addsf3x+0x9c>
    25b4:	87 95       	ror	r24
    25b6:	77 95       	ror	r23
    25b8:	67 95       	ror	r22
    25ba:	b7 95       	ror	r27
    25bc:	f7 95       	ror	r31
    25be:	9e 3f       	cpi	r25, 0xFE	; 254
    25c0:	08 f0       	brcs	.+2      	; 0x25c4 <__addsf3x+0x9a>
    25c2:	b0 cf       	rjmp	.-160    	; 0x2524 <__addsf3+0x28>
    25c4:	93 95       	inc	r25
    25c6:	88 0f       	add	r24, r24
    25c8:	08 f0       	brcs	.+2      	; 0x25cc <__addsf3x+0xa2>
    25ca:	99 27       	eor	r25, r25
    25cc:	ee 0f       	add	r30, r30
    25ce:	97 95       	ror	r25
    25d0:	87 95       	ror	r24
    25d2:	08 95       	ret
    25d4:	0e 94 9f 14 	call	0x293e	; 0x293e <__fp_pscA>
    25d8:	60 f0       	brcs	.+24     	; 0x25f2 <__addsf3x+0xc8>
    25da:	80 e8       	ldi	r24, 0x80	; 128
    25dc:	91 e0       	ldi	r25, 0x01	; 1
    25de:	09 f4       	brne	.+2      	; 0x25e2 <__addsf3x+0xb8>
    25e0:	9e ef       	ldi	r25, 0xFE	; 254
    25e2:	0e 94 a6 14 	call	0x294c	; 0x294c <__fp_pscB>
    25e6:	28 f0       	brcs	.+10     	; 0x25f2 <__addsf3x+0xc8>
    25e8:	40 e8       	ldi	r20, 0x80	; 128
    25ea:	51 e0       	ldi	r21, 0x01	; 1
    25ec:	71 f4       	brne	.+28     	; 0x260a <atan2+0x10>
    25ee:	5e ef       	ldi	r21, 0xFE	; 254
    25f0:	0c c0       	rjmp	.+24     	; 0x260a <atan2+0x10>
    25f2:	0c 94 75 14 	jmp	0x28ea	; 0x28ea <__fp_nan>
    25f6:	0c 94 1f 15 	jmp	0x2a3e	; 0x2a3e <__fp_zero>

000025fa <atan2>:
    25fa:	e9 2f       	mov	r30, r25
    25fc:	e0 78       	andi	r30, 0x80	; 128
    25fe:	0e 94 fd 14 	call	0x29fa	; 0x29fa <__fp_split3>
    2602:	40 f3       	brcs	.-48     	; 0x25d4 <__addsf3x+0xaa>
    2604:	09 2e       	mov	r0, r25
    2606:	05 2a       	or	r0, r21
    2608:	b1 f3       	breq	.-20     	; 0x25f6 <__addsf3x+0xcc>
    260a:	26 17       	cp	r18, r22
    260c:	37 07       	cpc	r19, r23
    260e:	48 07       	cpc	r20, r24
    2610:	59 07       	cpc	r21, r25
    2612:	38 f0       	brcs	.+14     	; 0x2622 <atan2+0x28>
    2614:	0e 2e       	mov	r0, r30
    2616:	07 f8       	bld	r0, 7
    2618:	e0 25       	eor	r30, r0
    261a:	69 f0       	breq	.+26     	; 0x2636 <atan2+0x3c>
    261c:	e0 25       	eor	r30, r0
    261e:	e0 64       	ori	r30, 0x40	; 64
    2620:	0a c0       	rjmp	.+20     	; 0x2636 <atan2+0x3c>
    2622:	ef 63       	ori	r30, 0x3F	; 63
    2624:	07 f8       	bld	r0, 7
    2626:	00 94       	com	r0
    2628:	07 fa       	bst	r0, 7
    262a:	db 01       	movw	r26, r22
    262c:	b9 01       	movw	r22, r18
    262e:	9d 01       	movw	r18, r26
    2630:	dc 01       	movw	r26, r24
    2632:	ca 01       	movw	r24, r20
    2634:	ad 01       	movw	r20, r26
    2636:	ef 93       	push	r30
    2638:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__divsf3_pse>
    263c:	0e 94 d8 14 	call	0x29b0	; 0x29b0 <__fp_round>
    2640:	0e 94 2d 13 	call	0x265a	; 0x265a <atan>
    2644:	5f 91       	pop	r21
    2646:	55 23       	and	r21, r21
    2648:	39 f0       	breq	.+14     	; 0x2658 <atan2+0x5e>
    264a:	2b ed       	ldi	r18, 0xDB	; 219
    264c:	3f e0       	ldi	r19, 0x0F	; 15
    264e:	49 e4       	ldi	r20, 0x49	; 73
    2650:	50 fd       	sbrc	r21, 0
    2652:	49 ec       	ldi	r20, 0xC9	; 201
    2654:	0c 94 7e 12 	jmp	0x24fc	; 0x24fc <__addsf3>
    2658:	08 95       	ret

0000265a <atan>:
    265a:	df 93       	push	r29
    265c:	dd 27       	eor	r29, r29
    265e:	b9 2f       	mov	r27, r25
    2660:	bf 77       	andi	r27, 0x7F	; 127
    2662:	40 e8       	ldi	r20, 0x80	; 128
    2664:	5f e3       	ldi	r21, 0x3F	; 63
    2666:	16 16       	cp	r1, r22
    2668:	17 06       	cpc	r1, r23
    266a:	48 07       	cpc	r20, r24
    266c:	5b 07       	cpc	r21, r27
    266e:	18 f4       	brcc	.+6      	; 0x2676 <atan+0x1c>
    2670:	d9 2f       	mov	r29, r25
    2672:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <inverse>
    2676:	9f 93       	push	r25
    2678:	8f 93       	push	r24
    267a:	7f 93       	push	r23
    267c:	6f 93       	push	r22
    267e:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <square>
    2682:	ea ec       	ldi	r30, 0xCA	; 202
    2684:	f0 e0       	ldi	r31, 0x00	; 0
    2686:	0e 94 78 14 	call	0x28f0	; 0x28f0 <__fp_powser>
    268a:	0e 94 d8 14 	call	0x29b0	; 0x29b0 <__fp_round>
    268e:	2f 91       	pop	r18
    2690:	3f 91       	pop	r19
    2692:	4f 91       	pop	r20
    2694:	5f 91       	pop	r21
    2696:	0e 94 46 15 	call	0x2a8c	; 0x2a8c <__mulsf3x>
    269a:	dd 23       	and	r29, r29
    269c:	51 f0       	breq	.+20     	; 0x26b2 <atan+0x58>
    269e:	90 58       	subi	r25, 0x80	; 128
    26a0:	a2 ea       	ldi	r26, 0xA2	; 162
    26a2:	2a ed       	ldi	r18, 0xDA	; 218
    26a4:	3f e0       	ldi	r19, 0x0F	; 15
    26a6:	49 ec       	ldi	r20, 0xC9	; 201
    26a8:	5f e3       	ldi	r21, 0x3F	; 63
    26aa:	d0 78       	andi	r29, 0x80	; 128
    26ac:	5d 27       	eor	r21, r29
    26ae:	0e 94 95 12 	call	0x252a	; 0x252a <__addsf3x>
    26b2:	df 91       	pop	r29
    26b4:	0c 94 d8 14 	jmp	0x29b0	; 0x29b0 <__fp_round>

000026b8 <__cmpsf2>:
    26b8:	0e 94 4b 14 	call	0x2896	; 0x2896 <__fp_cmp>
    26bc:	08 f4       	brcc	.+2      	; 0x26c0 <__cmpsf2+0x8>
    26be:	81 e0       	ldi	r24, 0x01	; 1
    26c0:	08 95       	ret

000026c2 <cos>:
    26c2:	0e 94 af 14 	call	0x295e	; 0x295e <__fp_rempio2>
    26c6:	e3 95       	inc	r30
    26c8:	0c 94 e9 14 	jmp	0x29d2	; 0x29d2 <__fp_sinus>

000026cc <__divsf3>:
    26cc:	0e 94 7a 13 	call	0x26f4	; 0x26f4 <__divsf3x>
    26d0:	0c 94 d8 14 	jmp	0x29b0	; 0x29b0 <__fp_round>
    26d4:	0e 94 a6 14 	call	0x294c	; 0x294c <__fp_pscB>
    26d8:	58 f0       	brcs	.+22     	; 0x26f0 <__divsf3+0x24>
    26da:	0e 94 9f 14 	call	0x293e	; 0x293e <__fp_pscA>
    26de:	40 f0       	brcs	.+16     	; 0x26f0 <__divsf3+0x24>
    26e0:	29 f4       	brne	.+10     	; 0x26ec <__divsf3+0x20>
    26e2:	5f 3f       	cpi	r21, 0xFF	; 255
    26e4:	29 f0       	breq	.+10     	; 0x26f0 <__divsf3+0x24>
    26e6:	0c 94 6f 14 	jmp	0x28de	; 0x28de <__fp_inf>
    26ea:	51 11       	cpse	r21, r1
    26ec:	0c 94 20 15 	jmp	0x2a40	; 0x2a40 <__fp_szero>
    26f0:	0c 94 75 14 	jmp	0x28ea	; 0x28ea <__fp_nan>

000026f4 <__divsf3x>:
    26f4:	0e 94 fd 14 	call	0x29fa	; 0x29fa <__fp_split3>
    26f8:	68 f3       	brcs	.-38     	; 0x26d4 <__divsf3+0x8>

000026fa <__divsf3_pse>:
    26fa:	99 23       	and	r25, r25
    26fc:	b1 f3       	breq	.-20     	; 0x26ea <__divsf3+0x1e>
    26fe:	55 23       	and	r21, r21
    2700:	91 f3       	breq	.-28     	; 0x26e6 <__divsf3+0x1a>
    2702:	95 1b       	sub	r25, r21
    2704:	55 0b       	sbc	r21, r21
    2706:	bb 27       	eor	r27, r27
    2708:	aa 27       	eor	r26, r26
    270a:	62 17       	cp	r22, r18
    270c:	73 07       	cpc	r23, r19
    270e:	84 07       	cpc	r24, r20
    2710:	38 f0       	brcs	.+14     	; 0x2720 <__divsf3_pse+0x26>
    2712:	9f 5f       	subi	r25, 0xFF	; 255
    2714:	5f 4f       	sbci	r21, 0xFF	; 255
    2716:	22 0f       	add	r18, r18
    2718:	33 1f       	adc	r19, r19
    271a:	44 1f       	adc	r20, r20
    271c:	aa 1f       	adc	r26, r26
    271e:	a9 f3       	breq	.-22     	; 0x270a <__divsf3_pse+0x10>
    2720:	35 d0       	rcall	.+106    	; 0x278c <__divsf3_pse+0x92>
    2722:	0e 2e       	mov	r0, r30
    2724:	3a f0       	brmi	.+14     	; 0x2734 <__divsf3_pse+0x3a>
    2726:	e0 e8       	ldi	r30, 0x80	; 128
    2728:	32 d0       	rcall	.+100    	; 0x278e <__divsf3_pse+0x94>
    272a:	91 50       	subi	r25, 0x01	; 1
    272c:	50 40       	sbci	r21, 0x00	; 0
    272e:	e6 95       	lsr	r30
    2730:	00 1c       	adc	r0, r0
    2732:	ca f7       	brpl	.-14     	; 0x2726 <__divsf3_pse+0x2c>
    2734:	2b d0       	rcall	.+86     	; 0x278c <__divsf3_pse+0x92>
    2736:	fe 2f       	mov	r31, r30
    2738:	29 d0       	rcall	.+82     	; 0x278c <__divsf3_pse+0x92>
    273a:	66 0f       	add	r22, r22
    273c:	77 1f       	adc	r23, r23
    273e:	88 1f       	adc	r24, r24
    2740:	bb 1f       	adc	r27, r27
    2742:	26 17       	cp	r18, r22
    2744:	37 07       	cpc	r19, r23
    2746:	48 07       	cpc	r20, r24
    2748:	ab 07       	cpc	r26, r27
    274a:	b0 e8       	ldi	r27, 0x80	; 128
    274c:	09 f0       	breq	.+2      	; 0x2750 <__divsf3_pse+0x56>
    274e:	bb 0b       	sbc	r27, r27
    2750:	80 2d       	mov	r24, r0
    2752:	bf 01       	movw	r22, r30
    2754:	ff 27       	eor	r31, r31
    2756:	93 58       	subi	r25, 0x83	; 131
    2758:	5f 4f       	sbci	r21, 0xFF	; 255
    275a:	3a f0       	brmi	.+14     	; 0x276a <__divsf3_pse+0x70>
    275c:	9e 3f       	cpi	r25, 0xFE	; 254
    275e:	51 05       	cpc	r21, r1
    2760:	78 f0       	brcs	.+30     	; 0x2780 <__divsf3_pse+0x86>
    2762:	0c 94 6f 14 	jmp	0x28de	; 0x28de <__fp_inf>
    2766:	0c 94 20 15 	jmp	0x2a40	; 0x2a40 <__fp_szero>
    276a:	5f 3f       	cpi	r21, 0xFF	; 255
    276c:	e4 f3       	brlt	.-8      	; 0x2766 <__divsf3_pse+0x6c>
    276e:	98 3e       	cpi	r25, 0xE8	; 232
    2770:	d4 f3       	brlt	.-12     	; 0x2766 <__divsf3_pse+0x6c>
    2772:	86 95       	lsr	r24
    2774:	77 95       	ror	r23
    2776:	67 95       	ror	r22
    2778:	b7 95       	ror	r27
    277a:	f7 95       	ror	r31
    277c:	9f 5f       	subi	r25, 0xFF	; 255
    277e:	c9 f7       	brne	.-14     	; 0x2772 <__divsf3_pse+0x78>
    2780:	88 0f       	add	r24, r24
    2782:	91 1d       	adc	r25, r1
    2784:	96 95       	lsr	r25
    2786:	87 95       	ror	r24
    2788:	97 f9       	bld	r25, 7
    278a:	08 95       	ret
    278c:	e1 e0       	ldi	r30, 0x01	; 1
    278e:	66 0f       	add	r22, r22
    2790:	77 1f       	adc	r23, r23
    2792:	88 1f       	adc	r24, r24
    2794:	bb 1f       	adc	r27, r27
    2796:	62 17       	cp	r22, r18
    2798:	73 07       	cpc	r23, r19
    279a:	84 07       	cpc	r24, r20
    279c:	ba 07       	cpc	r27, r26
    279e:	20 f0       	brcs	.+8      	; 0x27a8 <__divsf3_pse+0xae>
    27a0:	62 1b       	sub	r22, r18
    27a2:	73 0b       	sbc	r23, r19
    27a4:	84 0b       	sbc	r24, r20
    27a6:	ba 0b       	sbc	r27, r26
    27a8:	ee 1f       	adc	r30, r30
    27aa:	88 f7       	brcc	.-30     	; 0x278e <__divsf3_pse+0x94>
    27ac:	e0 95       	com	r30
    27ae:	08 95       	ret

000027b0 <__fixsfsi>:
    27b0:	0e 94 df 13 	call	0x27be	; 0x27be <__fixunssfsi>
    27b4:	68 94       	set
    27b6:	b1 11       	cpse	r27, r1
    27b8:	0c 94 20 15 	jmp	0x2a40	; 0x2a40 <__fp_szero>
    27bc:	08 95       	ret

000027be <__fixunssfsi>:
    27be:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__fp_splitA>
    27c2:	88 f0       	brcs	.+34     	; 0x27e6 <__fixunssfsi+0x28>
    27c4:	9f 57       	subi	r25, 0x7F	; 127
    27c6:	98 f0       	brcs	.+38     	; 0x27ee <__fixunssfsi+0x30>
    27c8:	b9 2f       	mov	r27, r25
    27ca:	99 27       	eor	r25, r25
    27cc:	b7 51       	subi	r27, 0x17	; 23
    27ce:	b0 f0       	brcs	.+44     	; 0x27fc <__fixunssfsi+0x3e>
    27d0:	e1 f0       	breq	.+56     	; 0x280a <__fixunssfsi+0x4c>
    27d2:	66 0f       	add	r22, r22
    27d4:	77 1f       	adc	r23, r23
    27d6:	88 1f       	adc	r24, r24
    27d8:	99 1f       	adc	r25, r25
    27da:	1a f0       	brmi	.+6      	; 0x27e2 <__fixunssfsi+0x24>
    27dc:	ba 95       	dec	r27
    27de:	c9 f7       	brne	.-14     	; 0x27d2 <__fixunssfsi+0x14>
    27e0:	14 c0       	rjmp	.+40     	; 0x280a <__fixunssfsi+0x4c>
    27e2:	b1 30       	cpi	r27, 0x01	; 1
    27e4:	91 f0       	breq	.+36     	; 0x280a <__fixunssfsi+0x4c>
    27e6:	0e 94 1f 15 	call	0x2a3e	; 0x2a3e <__fp_zero>
    27ea:	b1 e0       	ldi	r27, 0x01	; 1
    27ec:	08 95       	ret
    27ee:	0c 94 1f 15 	jmp	0x2a3e	; 0x2a3e <__fp_zero>
    27f2:	67 2f       	mov	r22, r23
    27f4:	78 2f       	mov	r23, r24
    27f6:	88 27       	eor	r24, r24
    27f8:	b8 5f       	subi	r27, 0xF8	; 248
    27fa:	39 f0       	breq	.+14     	; 0x280a <__fixunssfsi+0x4c>
    27fc:	b9 3f       	cpi	r27, 0xF9	; 249
    27fe:	cc f3       	brlt	.-14     	; 0x27f2 <__fixunssfsi+0x34>
    2800:	86 95       	lsr	r24
    2802:	77 95       	ror	r23
    2804:	67 95       	ror	r22
    2806:	b3 95       	inc	r27
    2808:	d9 f7       	brne	.-10     	; 0x2800 <__fixunssfsi+0x42>
    280a:	3e f4       	brtc	.+14     	; 0x281a <__fixunssfsi+0x5c>
    280c:	90 95       	com	r25
    280e:	80 95       	com	r24
    2810:	70 95       	com	r23
    2812:	61 95       	neg	r22
    2814:	7f 4f       	sbci	r23, 0xFF	; 255
    2816:	8f 4f       	sbci	r24, 0xFF	; 255
    2818:	9f 4f       	sbci	r25, 0xFF	; 255
    281a:	08 95       	ret

0000281c <__floatunsisf>:
    281c:	e8 94       	clt
    281e:	09 c0       	rjmp	.+18     	; 0x2832 <__floatsisf+0x12>

00002820 <__floatsisf>:
    2820:	97 fb       	bst	r25, 7
    2822:	3e f4       	brtc	.+14     	; 0x2832 <__floatsisf+0x12>
    2824:	90 95       	com	r25
    2826:	80 95       	com	r24
    2828:	70 95       	com	r23
    282a:	61 95       	neg	r22
    282c:	7f 4f       	sbci	r23, 0xFF	; 255
    282e:	8f 4f       	sbci	r24, 0xFF	; 255
    2830:	9f 4f       	sbci	r25, 0xFF	; 255
    2832:	99 23       	and	r25, r25
    2834:	a9 f0       	breq	.+42     	; 0x2860 <__floatsisf+0x40>
    2836:	f9 2f       	mov	r31, r25
    2838:	96 e9       	ldi	r25, 0x96	; 150
    283a:	bb 27       	eor	r27, r27
    283c:	93 95       	inc	r25
    283e:	f6 95       	lsr	r31
    2840:	87 95       	ror	r24
    2842:	77 95       	ror	r23
    2844:	67 95       	ror	r22
    2846:	b7 95       	ror	r27
    2848:	f1 11       	cpse	r31, r1
    284a:	f8 cf       	rjmp	.-16     	; 0x283c <__floatsisf+0x1c>
    284c:	fa f4       	brpl	.+62     	; 0x288c <__floatsisf+0x6c>
    284e:	bb 0f       	add	r27, r27
    2850:	11 f4       	brne	.+4      	; 0x2856 <__floatsisf+0x36>
    2852:	60 ff       	sbrs	r22, 0
    2854:	1b c0       	rjmp	.+54     	; 0x288c <__floatsisf+0x6c>
    2856:	6f 5f       	subi	r22, 0xFF	; 255
    2858:	7f 4f       	sbci	r23, 0xFF	; 255
    285a:	8f 4f       	sbci	r24, 0xFF	; 255
    285c:	9f 4f       	sbci	r25, 0xFF	; 255
    285e:	16 c0       	rjmp	.+44     	; 0x288c <__floatsisf+0x6c>
    2860:	88 23       	and	r24, r24
    2862:	11 f0       	breq	.+4      	; 0x2868 <__floatsisf+0x48>
    2864:	96 e9       	ldi	r25, 0x96	; 150
    2866:	11 c0       	rjmp	.+34     	; 0x288a <__floatsisf+0x6a>
    2868:	77 23       	and	r23, r23
    286a:	21 f0       	breq	.+8      	; 0x2874 <__floatsisf+0x54>
    286c:	9e e8       	ldi	r25, 0x8E	; 142
    286e:	87 2f       	mov	r24, r23
    2870:	76 2f       	mov	r23, r22
    2872:	05 c0       	rjmp	.+10     	; 0x287e <__floatsisf+0x5e>
    2874:	66 23       	and	r22, r22
    2876:	71 f0       	breq	.+28     	; 0x2894 <__floatsisf+0x74>
    2878:	96 e8       	ldi	r25, 0x86	; 134
    287a:	86 2f       	mov	r24, r22
    287c:	70 e0       	ldi	r23, 0x00	; 0
    287e:	60 e0       	ldi	r22, 0x00	; 0
    2880:	2a f0       	brmi	.+10     	; 0x288c <__floatsisf+0x6c>
    2882:	9a 95       	dec	r25
    2884:	66 0f       	add	r22, r22
    2886:	77 1f       	adc	r23, r23
    2888:	88 1f       	adc	r24, r24
    288a:	da f7       	brpl	.-10     	; 0x2882 <__floatsisf+0x62>
    288c:	88 0f       	add	r24, r24
    288e:	96 95       	lsr	r25
    2890:	87 95       	ror	r24
    2892:	97 f9       	bld	r25, 7
    2894:	08 95       	ret

00002896 <__fp_cmp>:
    2896:	99 0f       	add	r25, r25
    2898:	00 08       	sbc	r0, r0
    289a:	55 0f       	add	r21, r21
    289c:	aa 0b       	sbc	r26, r26
    289e:	e0 e8       	ldi	r30, 0x80	; 128
    28a0:	fe ef       	ldi	r31, 0xFE	; 254
    28a2:	16 16       	cp	r1, r22
    28a4:	17 06       	cpc	r1, r23
    28a6:	e8 07       	cpc	r30, r24
    28a8:	f9 07       	cpc	r31, r25
    28aa:	c0 f0       	brcs	.+48     	; 0x28dc <__fp_cmp+0x46>
    28ac:	12 16       	cp	r1, r18
    28ae:	13 06       	cpc	r1, r19
    28b0:	e4 07       	cpc	r30, r20
    28b2:	f5 07       	cpc	r31, r21
    28b4:	98 f0       	brcs	.+38     	; 0x28dc <__fp_cmp+0x46>
    28b6:	62 1b       	sub	r22, r18
    28b8:	73 0b       	sbc	r23, r19
    28ba:	84 0b       	sbc	r24, r20
    28bc:	95 0b       	sbc	r25, r21
    28be:	39 f4       	brne	.+14     	; 0x28ce <__fp_cmp+0x38>
    28c0:	0a 26       	eor	r0, r26
    28c2:	61 f0       	breq	.+24     	; 0x28dc <__fp_cmp+0x46>
    28c4:	23 2b       	or	r18, r19
    28c6:	24 2b       	or	r18, r20
    28c8:	25 2b       	or	r18, r21
    28ca:	21 f4       	brne	.+8      	; 0x28d4 <__fp_cmp+0x3e>
    28cc:	08 95       	ret
    28ce:	0a 26       	eor	r0, r26
    28d0:	09 f4       	brne	.+2      	; 0x28d4 <__fp_cmp+0x3e>
    28d2:	a1 40       	sbci	r26, 0x01	; 1
    28d4:	a6 95       	lsr	r26
    28d6:	8f ef       	ldi	r24, 0xFF	; 255
    28d8:	81 1d       	adc	r24, r1
    28da:	81 1d       	adc	r24, r1
    28dc:	08 95       	ret

000028de <__fp_inf>:
    28de:	97 f9       	bld	r25, 7
    28e0:	9f 67       	ori	r25, 0x7F	; 127
    28e2:	80 e8       	ldi	r24, 0x80	; 128
    28e4:	70 e0       	ldi	r23, 0x00	; 0
    28e6:	60 e0       	ldi	r22, 0x00	; 0
    28e8:	08 95       	ret

000028ea <__fp_nan>:
    28ea:	9f ef       	ldi	r25, 0xFF	; 255
    28ec:	80 ec       	ldi	r24, 0xC0	; 192
    28ee:	08 95       	ret

000028f0 <__fp_powser>:
    28f0:	df 93       	push	r29
    28f2:	cf 93       	push	r28
    28f4:	1f 93       	push	r17
    28f6:	0f 93       	push	r16
    28f8:	ff 92       	push	r15
    28fa:	ef 92       	push	r14
    28fc:	df 92       	push	r13
    28fe:	7b 01       	movw	r14, r22
    2900:	8c 01       	movw	r16, r24
    2902:	68 94       	set
    2904:	06 c0       	rjmp	.+12     	; 0x2912 <__fp_powser+0x22>
    2906:	da 2e       	mov	r13, r26
    2908:	ef 01       	movw	r28, r30
    290a:	0e 94 46 15 	call	0x2a8c	; 0x2a8c <__mulsf3x>
    290e:	fe 01       	movw	r30, r28
    2910:	e8 94       	clt
    2912:	a5 91       	lpm	r26, Z+
    2914:	25 91       	lpm	r18, Z+
    2916:	35 91       	lpm	r19, Z+
    2918:	45 91       	lpm	r20, Z+
    291a:	55 91       	lpm	r21, Z+
    291c:	a6 f3       	brts	.-24     	; 0x2906 <__fp_powser+0x16>
    291e:	ef 01       	movw	r28, r30
    2920:	0e 94 95 12 	call	0x252a	; 0x252a <__addsf3x>
    2924:	fe 01       	movw	r30, r28
    2926:	97 01       	movw	r18, r14
    2928:	a8 01       	movw	r20, r16
    292a:	da 94       	dec	r13
    292c:	69 f7       	brne	.-38     	; 0x2908 <__fp_powser+0x18>
    292e:	df 90       	pop	r13
    2930:	ef 90       	pop	r14
    2932:	ff 90       	pop	r15
    2934:	0f 91       	pop	r16
    2936:	1f 91       	pop	r17
    2938:	cf 91       	pop	r28
    293a:	df 91       	pop	r29
    293c:	08 95       	ret

0000293e <__fp_pscA>:
    293e:	00 24       	eor	r0, r0
    2940:	0a 94       	dec	r0
    2942:	16 16       	cp	r1, r22
    2944:	17 06       	cpc	r1, r23
    2946:	18 06       	cpc	r1, r24
    2948:	09 06       	cpc	r0, r25
    294a:	08 95       	ret

0000294c <__fp_pscB>:
    294c:	00 24       	eor	r0, r0
    294e:	0a 94       	dec	r0
    2950:	12 16       	cp	r1, r18
    2952:	13 06       	cpc	r1, r19
    2954:	14 06       	cpc	r1, r20
    2956:	05 06       	cpc	r0, r21
    2958:	08 95       	ret
    295a:	0c 94 75 14 	jmp	0x28ea	; 0x28ea <__fp_nan>

0000295e <__fp_rempio2>:
    295e:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__fp_splitA>
    2962:	d8 f3       	brcs	.-10     	; 0x295a <__fp_pscB+0xe>
    2964:	e8 94       	clt
    2966:	e0 e0       	ldi	r30, 0x00	; 0
    2968:	bb 27       	eor	r27, r27
    296a:	9f 57       	subi	r25, 0x7F	; 127
    296c:	f0 f0       	brcs	.+60     	; 0x29aa <__fp_rempio2+0x4c>
    296e:	2a ed       	ldi	r18, 0xDA	; 218
    2970:	3f e0       	ldi	r19, 0x0F	; 15
    2972:	49 ec       	ldi	r20, 0xC9	; 201
    2974:	06 c0       	rjmp	.+12     	; 0x2982 <__fp_rempio2+0x24>
    2976:	ee 0f       	add	r30, r30
    2978:	bb 0f       	add	r27, r27
    297a:	66 1f       	adc	r22, r22
    297c:	77 1f       	adc	r23, r23
    297e:	88 1f       	adc	r24, r24
    2980:	28 f0       	brcs	.+10     	; 0x298c <__fp_rempio2+0x2e>
    2982:	b2 3a       	cpi	r27, 0xA2	; 162
    2984:	62 07       	cpc	r22, r18
    2986:	73 07       	cpc	r23, r19
    2988:	84 07       	cpc	r24, r20
    298a:	28 f0       	brcs	.+10     	; 0x2996 <__fp_rempio2+0x38>
    298c:	b2 5a       	subi	r27, 0xA2	; 162
    298e:	62 0b       	sbc	r22, r18
    2990:	73 0b       	sbc	r23, r19
    2992:	84 0b       	sbc	r24, r20
    2994:	e3 95       	inc	r30
    2996:	9a 95       	dec	r25
    2998:	72 f7       	brpl	.-36     	; 0x2976 <__fp_rempio2+0x18>
    299a:	80 38       	cpi	r24, 0x80	; 128
    299c:	30 f4       	brcc	.+12     	; 0x29aa <__fp_rempio2+0x4c>
    299e:	9a 95       	dec	r25
    29a0:	bb 0f       	add	r27, r27
    29a2:	66 1f       	adc	r22, r22
    29a4:	77 1f       	adc	r23, r23
    29a6:	88 1f       	adc	r24, r24
    29a8:	d2 f7       	brpl	.-12     	; 0x299e <__fp_rempio2+0x40>
    29aa:	90 48       	sbci	r25, 0x80	; 128
    29ac:	0c 94 f4 15 	jmp	0x2be8	; 0x2be8 <__fp_mpack_finite>

000029b0 <__fp_round>:
    29b0:	09 2e       	mov	r0, r25
    29b2:	03 94       	inc	r0
    29b4:	00 0c       	add	r0, r0
    29b6:	11 f4       	brne	.+4      	; 0x29bc <__fp_round+0xc>
    29b8:	88 23       	and	r24, r24
    29ba:	52 f0       	brmi	.+20     	; 0x29d0 <__fp_round+0x20>
    29bc:	bb 0f       	add	r27, r27
    29be:	40 f4       	brcc	.+16     	; 0x29d0 <__fp_round+0x20>
    29c0:	bf 2b       	or	r27, r31
    29c2:	11 f4       	brne	.+4      	; 0x29c8 <__fp_round+0x18>
    29c4:	60 ff       	sbrs	r22, 0
    29c6:	04 c0       	rjmp	.+8      	; 0x29d0 <__fp_round+0x20>
    29c8:	6f 5f       	subi	r22, 0xFF	; 255
    29ca:	7f 4f       	sbci	r23, 0xFF	; 255
    29cc:	8f 4f       	sbci	r24, 0xFF	; 255
    29ce:	9f 4f       	sbci	r25, 0xFF	; 255
    29d0:	08 95       	ret

000029d2 <__fp_sinus>:
    29d2:	ef 93       	push	r30
    29d4:	e0 ff       	sbrs	r30, 0
    29d6:	07 c0       	rjmp	.+14     	; 0x29e6 <__fp_sinus+0x14>
    29d8:	a2 ea       	ldi	r26, 0xA2	; 162
    29da:	2a ed       	ldi	r18, 0xDA	; 218
    29dc:	3f e0       	ldi	r19, 0x0F	; 15
    29de:	49 ec       	ldi	r20, 0xC9	; 201
    29e0:	5f eb       	ldi	r21, 0xBF	; 191
    29e2:	0e 94 95 12 	call	0x252a	; 0x252a <__addsf3x>
    29e6:	0e 94 d8 14 	call	0x29b0	; 0x29b0 <__fp_round>
    29ea:	0f 90       	pop	r0
    29ec:	03 94       	inc	r0
    29ee:	01 fc       	sbrc	r0, 1
    29f0:	90 58       	subi	r25, 0x80	; 128
    29f2:	e7 ef       	ldi	r30, 0xF7	; 247
    29f4:	f0 e0       	ldi	r31, 0x00	; 0
    29f6:	0c 94 07 16 	jmp	0x2c0e	; 0x2c0e <__fp_powsodd>

000029fa <__fp_split3>:
    29fa:	57 fd       	sbrc	r21, 7
    29fc:	90 58       	subi	r25, 0x80	; 128
    29fe:	44 0f       	add	r20, r20
    2a00:	55 1f       	adc	r21, r21
    2a02:	59 f0       	breq	.+22     	; 0x2a1a <__fp_splitA+0x10>
    2a04:	5f 3f       	cpi	r21, 0xFF	; 255
    2a06:	71 f0       	breq	.+28     	; 0x2a24 <__fp_splitA+0x1a>
    2a08:	47 95       	ror	r20

00002a0a <__fp_splitA>:
    2a0a:	88 0f       	add	r24, r24
    2a0c:	97 fb       	bst	r25, 7
    2a0e:	99 1f       	adc	r25, r25
    2a10:	61 f0       	breq	.+24     	; 0x2a2a <__fp_splitA+0x20>
    2a12:	9f 3f       	cpi	r25, 0xFF	; 255
    2a14:	79 f0       	breq	.+30     	; 0x2a34 <__fp_splitA+0x2a>
    2a16:	87 95       	ror	r24
    2a18:	08 95       	ret
    2a1a:	12 16       	cp	r1, r18
    2a1c:	13 06       	cpc	r1, r19
    2a1e:	14 06       	cpc	r1, r20
    2a20:	55 1f       	adc	r21, r21
    2a22:	f2 cf       	rjmp	.-28     	; 0x2a08 <__fp_split3+0xe>
    2a24:	46 95       	lsr	r20
    2a26:	f1 df       	rcall	.-30     	; 0x2a0a <__fp_splitA>
    2a28:	08 c0       	rjmp	.+16     	; 0x2a3a <__fp_splitA+0x30>
    2a2a:	16 16       	cp	r1, r22
    2a2c:	17 06       	cpc	r1, r23
    2a2e:	18 06       	cpc	r1, r24
    2a30:	99 1f       	adc	r25, r25
    2a32:	f1 cf       	rjmp	.-30     	; 0x2a16 <__fp_splitA+0xc>
    2a34:	86 95       	lsr	r24
    2a36:	71 05       	cpc	r23, r1
    2a38:	61 05       	cpc	r22, r1
    2a3a:	08 94       	sec
    2a3c:	08 95       	ret

00002a3e <__fp_zero>:
    2a3e:	e8 94       	clt

00002a40 <__fp_szero>:
    2a40:	bb 27       	eor	r27, r27
    2a42:	66 27       	eor	r22, r22
    2a44:	77 27       	eor	r23, r23
    2a46:	cb 01       	movw	r24, r22
    2a48:	97 f9       	bld	r25, 7
    2a4a:	08 95       	ret

00002a4c <__gesf2>:
    2a4c:	0e 94 4b 14 	call	0x2896	; 0x2896 <__fp_cmp>
    2a50:	08 f4       	brcc	.+2      	; 0x2a54 <__gesf2+0x8>
    2a52:	8f ef       	ldi	r24, 0xFF	; 255
    2a54:	08 95       	ret

00002a56 <inverse>:
    2a56:	9b 01       	movw	r18, r22
    2a58:	ac 01       	movw	r20, r24
    2a5a:	60 e0       	ldi	r22, 0x00	; 0
    2a5c:	70 e0       	ldi	r23, 0x00	; 0
    2a5e:	80 e8       	ldi	r24, 0x80	; 128
    2a60:	9f e3       	ldi	r25, 0x3F	; 63
    2a62:	0c 94 66 13 	jmp	0x26cc	; 0x26cc <__divsf3>

00002a66 <__mulsf3>:
    2a66:	0e 94 46 15 	call	0x2a8c	; 0x2a8c <__mulsf3x>
    2a6a:	0c 94 d8 14 	jmp	0x29b0	; 0x29b0 <__fp_round>
    2a6e:	0e 94 9f 14 	call	0x293e	; 0x293e <__fp_pscA>
    2a72:	38 f0       	brcs	.+14     	; 0x2a82 <__mulsf3+0x1c>
    2a74:	0e 94 a6 14 	call	0x294c	; 0x294c <__fp_pscB>
    2a78:	20 f0       	brcs	.+8      	; 0x2a82 <__mulsf3+0x1c>
    2a7a:	95 23       	and	r25, r21
    2a7c:	11 f0       	breq	.+4      	; 0x2a82 <__mulsf3+0x1c>
    2a7e:	0c 94 6f 14 	jmp	0x28de	; 0x28de <__fp_inf>
    2a82:	0c 94 75 14 	jmp	0x28ea	; 0x28ea <__fp_nan>
    2a86:	11 24       	eor	r1, r1
    2a88:	0c 94 20 15 	jmp	0x2a40	; 0x2a40 <__fp_szero>

00002a8c <__mulsf3x>:
    2a8c:	0e 94 fd 14 	call	0x29fa	; 0x29fa <__fp_split3>
    2a90:	70 f3       	brcs	.-36     	; 0x2a6e <__mulsf3+0x8>

00002a92 <__mulsf3_pse>:
    2a92:	95 9f       	mul	r25, r21
    2a94:	c1 f3       	breq	.-16     	; 0x2a86 <__mulsf3+0x20>
    2a96:	95 0f       	add	r25, r21
    2a98:	50 e0       	ldi	r21, 0x00	; 0
    2a9a:	55 1f       	adc	r21, r21
    2a9c:	62 9f       	mul	r22, r18
    2a9e:	f0 01       	movw	r30, r0
    2aa0:	72 9f       	mul	r23, r18
    2aa2:	bb 27       	eor	r27, r27
    2aa4:	f0 0d       	add	r31, r0
    2aa6:	b1 1d       	adc	r27, r1
    2aa8:	63 9f       	mul	r22, r19
    2aaa:	aa 27       	eor	r26, r26
    2aac:	f0 0d       	add	r31, r0
    2aae:	b1 1d       	adc	r27, r1
    2ab0:	aa 1f       	adc	r26, r26
    2ab2:	64 9f       	mul	r22, r20
    2ab4:	66 27       	eor	r22, r22
    2ab6:	b0 0d       	add	r27, r0
    2ab8:	a1 1d       	adc	r26, r1
    2aba:	66 1f       	adc	r22, r22
    2abc:	82 9f       	mul	r24, r18
    2abe:	22 27       	eor	r18, r18
    2ac0:	b0 0d       	add	r27, r0
    2ac2:	a1 1d       	adc	r26, r1
    2ac4:	62 1f       	adc	r22, r18
    2ac6:	73 9f       	mul	r23, r19
    2ac8:	b0 0d       	add	r27, r0
    2aca:	a1 1d       	adc	r26, r1
    2acc:	62 1f       	adc	r22, r18
    2ace:	83 9f       	mul	r24, r19
    2ad0:	a0 0d       	add	r26, r0
    2ad2:	61 1d       	adc	r22, r1
    2ad4:	22 1f       	adc	r18, r18
    2ad6:	74 9f       	mul	r23, r20
    2ad8:	33 27       	eor	r19, r19
    2ada:	a0 0d       	add	r26, r0
    2adc:	61 1d       	adc	r22, r1
    2ade:	23 1f       	adc	r18, r19
    2ae0:	84 9f       	mul	r24, r20
    2ae2:	60 0d       	add	r22, r0
    2ae4:	21 1d       	adc	r18, r1
    2ae6:	82 2f       	mov	r24, r18
    2ae8:	76 2f       	mov	r23, r22
    2aea:	6a 2f       	mov	r22, r26
    2aec:	11 24       	eor	r1, r1
    2aee:	9f 57       	subi	r25, 0x7F	; 127
    2af0:	50 40       	sbci	r21, 0x00	; 0
    2af2:	9a f0       	brmi	.+38     	; 0x2b1a <__mulsf3_pse+0x88>
    2af4:	f1 f0       	breq	.+60     	; 0x2b32 <__mulsf3_pse+0xa0>
    2af6:	88 23       	and	r24, r24
    2af8:	4a f0       	brmi	.+18     	; 0x2b0c <__mulsf3_pse+0x7a>
    2afa:	ee 0f       	add	r30, r30
    2afc:	ff 1f       	adc	r31, r31
    2afe:	bb 1f       	adc	r27, r27
    2b00:	66 1f       	adc	r22, r22
    2b02:	77 1f       	adc	r23, r23
    2b04:	88 1f       	adc	r24, r24
    2b06:	91 50       	subi	r25, 0x01	; 1
    2b08:	50 40       	sbci	r21, 0x00	; 0
    2b0a:	a9 f7       	brne	.-22     	; 0x2af6 <__mulsf3_pse+0x64>
    2b0c:	9e 3f       	cpi	r25, 0xFE	; 254
    2b0e:	51 05       	cpc	r21, r1
    2b10:	80 f0       	brcs	.+32     	; 0x2b32 <__mulsf3_pse+0xa0>
    2b12:	0c 94 6f 14 	jmp	0x28de	; 0x28de <__fp_inf>
    2b16:	0c 94 20 15 	jmp	0x2a40	; 0x2a40 <__fp_szero>
    2b1a:	5f 3f       	cpi	r21, 0xFF	; 255
    2b1c:	e4 f3       	brlt	.-8      	; 0x2b16 <__mulsf3_pse+0x84>
    2b1e:	98 3e       	cpi	r25, 0xE8	; 232
    2b20:	d4 f3       	brlt	.-12     	; 0x2b16 <__mulsf3_pse+0x84>
    2b22:	86 95       	lsr	r24
    2b24:	77 95       	ror	r23
    2b26:	67 95       	ror	r22
    2b28:	b7 95       	ror	r27
    2b2a:	f7 95       	ror	r31
    2b2c:	e7 95       	ror	r30
    2b2e:	9f 5f       	subi	r25, 0xFF	; 255
    2b30:	c1 f7       	brne	.-16     	; 0x2b22 <__mulsf3_pse+0x90>
    2b32:	fe 2b       	or	r31, r30
    2b34:	88 0f       	add	r24, r24
    2b36:	91 1d       	adc	r25, r1
    2b38:	96 95       	lsr	r25
    2b3a:	87 95       	ror	r24
    2b3c:	97 f9       	bld	r25, 7
    2b3e:	08 95       	ret

00002b40 <sin>:
    2b40:	9f 93       	push	r25
    2b42:	0e 94 af 14 	call	0x295e	; 0x295e <__fp_rempio2>
    2b46:	0f 90       	pop	r0
    2b48:	07 fc       	sbrc	r0, 7
    2b4a:	ee 5f       	subi	r30, 0xFE	; 254
    2b4c:	0c 94 e9 14 	jmp	0x29d2	; 0x29d2 <__fp_sinus>
    2b50:	19 f4       	brne	.+6      	; 0x2b58 <sin+0x18>
    2b52:	16 f4       	brtc	.+4      	; 0x2b58 <sin+0x18>
    2b54:	0c 94 75 14 	jmp	0x28ea	; 0x28ea <__fp_nan>
    2b58:	0c 94 f2 15 	jmp	0x2be4	; 0x2be4 <__fp_mpack>

00002b5c <sqrt>:
    2b5c:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__fp_splitA>
    2b60:	b8 f3       	brcs	.-18     	; 0x2b50 <sin+0x10>
    2b62:	99 23       	and	r25, r25
    2b64:	c9 f3       	breq	.-14     	; 0x2b58 <sin+0x18>
    2b66:	b6 f3       	brts	.-20     	; 0x2b54 <sin+0x14>
    2b68:	9f 57       	subi	r25, 0x7F	; 127
    2b6a:	55 0b       	sbc	r21, r21
    2b6c:	87 ff       	sbrs	r24, 7
    2b6e:	0e 94 00 16 	call	0x2c00	; 0x2c00 <__fp_norm2>
    2b72:	00 24       	eor	r0, r0
    2b74:	a0 e6       	ldi	r26, 0x60	; 96
    2b76:	40 ea       	ldi	r20, 0xA0	; 160
    2b78:	90 01       	movw	r18, r0
    2b7a:	80 58       	subi	r24, 0x80	; 128
    2b7c:	56 95       	lsr	r21
    2b7e:	97 95       	ror	r25
    2b80:	28 f4       	brcc	.+10     	; 0x2b8c <sqrt+0x30>
    2b82:	80 5c       	subi	r24, 0xC0	; 192
    2b84:	66 0f       	add	r22, r22
    2b86:	77 1f       	adc	r23, r23
    2b88:	88 1f       	adc	r24, r24
    2b8a:	20 f0       	brcs	.+8      	; 0x2b94 <sqrt+0x38>
    2b8c:	26 17       	cp	r18, r22
    2b8e:	37 07       	cpc	r19, r23
    2b90:	48 07       	cpc	r20, r24
    2b92:	30 f4       	brcc	.+12     	; 0x2ba0 <sqrt+0x44>
    2b94:	62 1b       	sub	r22, r18
    2b96:	73 0b       	sbc	r23, r19
    2b98:	84 0b       	sbc	r24, r20
    2b9a:	20 29       	or	r18, r0
    2b9c:	31 29       	or	r19, r1
    2b9e:	4a 2b       	or	r20, r26
    2ba0:	a6 95       	lsr	r26
    2ba2:	17 94       	ror	r1
    2ba4:	07 94       	ror	r0
    2ba6:	20 25       	eor	r18, r0
    2ba8:	31 25       	eor	r19, r1
    2baa:	4a 27       	eor	r20, r26
    2bac:	58 f7       	brcc	.-42     	; 0x2b84 <sqrt+0x28>
    2bae:	66 0f       	add	r22, r22
    2bb0:	77 1f       	adc	r23, r23
    2bb2:	88 1f       	adc	r24, r24
    2bb4:	20 f0       	brcs	.+8      	; 0x2bbe <sqrt+0x62>
    2bb6:	26 17       	cp	r18, r22
    2bb8:	37 07       	cpc	r19, r23
    2bba:	48 07       	cpc	r20, r24
    2bbc:	30 f4       	brcc	.+12     	; 0x2bca <sqrt+0x6e>
    2bbe:	62 0b       	sbc	r22, r18
    2bc0:	73 0b       	sbc	r23, r19
    2bc2:	84 0b       	sbc	r24, r20
    2bc4:	20 0d       	add	r18, r0
    2bc6:	31 1d       	adc	r19, r1
    2bc8:	41 1d       	adc	r20, r1
    2bca:	a0 95       	com	r26
    2bcc:	81 f7       	brne	.-32     	; 0x2bae <sqrt+0x52>
    2bce:	b9 01       	movw	r22, r18
    2bd0:	84 2f       	mov	r24, r20
    2bd2:	91 58       	subi	r25, 0x81	; 129
    2bd4:	88 0f       	add	r24, r24
    2bd6:	96 95       	lsr	r25
    2bd8:	87 95       	ror	r24
    2bda:	08 95       	ret

00002bdc <square>:
    2bdc:	9b 01       	movw	r18, r22
    2bde:	ac 01       	movw	r20, r24
    2be0:	0c 94 33 15 	jmp	0x2a66	; 0x2a66 <__mulsf3>

00002be4 <__fp_mpack>:
    2be4:	9f 3f       	cpi	r25, 0xFF	; 255
    2be6:	31 f0       	breq	.+12     	; 0x2bf4 <__fp_mpack_finite+0xc>

00002be8 <__fp_mpack_finite>:
    2be8:	91 50       	subi	r25, 0x01	; 1
    2bea:	20 f4       	brcc	.+8      	; 0x2bf4 <__fp_mpack_finite+0xc>
    2bec:	87 95       	ror	r24
    2bee:	77 95       	ror	r23
    2bf0:	67 95       	ror	r22
    2bf2:	b7 95       	ror	r27
    2bf4:	88 0f       	add	r24, r24
    2bf6:	91 1d       	adc	r25, r1
    2bf8:	96 95       	lsr	r25
    2bfa:	87 95       	ror	r24
    2bfc:	97 f9       	bld	r25, 7
    2bfe:	08 95       	ret

00002c00 <__fp_norm2>:
    2c00:	91 50       	subi	r25, 0x01	; 1
    2c02:	50 40       	sbci	r21, 0x00	; 0
    2c04:	66 0f       	add	r22, r22
    2c06:	77 1f       	adc	r23, r23
    2c08:	88 1f       	adc	r24, r24
    2c0a:	d2 f7       	brpl	.-12     	; 0x2c00 <__fp_norm2>
    2c0c:	08 95       	ret

00002c0e <__fp_powsodd>:
    2c0e:	9f 93       	push	r25
    2c10:	8f 93       	push	r24
    2c12:	7f 93       	push	r23
    2c14:	6f 93       	push	r22
    2c16:	ff 93       	push	r31
    2c18:	ef 93       	push	r30
    2c1a:	9b 01       	movw	r18, r22
    2c1c:	ac 01       	movw	r20, r24
    2c1e:	0e 94 33 15 	call	0x2a66	; 0x2a66 <__mulsf3>
    2c22:	ef 91       	pop	r30
    2c24:	ff 91       	pop	r31
    2c26:	0e 94 78 14 	call	0x28f0	; 0x28f0 <__fp_powser>
    2c2a:	2f 91       	pop	r18
    2c2c:	3f 91       	pop	r19
    2c2e:	4f 91       	pop	r20
    2c30:	5f 91       	pop	r21
    2c32:	0c 94 33 15 	jmp	0x2a66	; 0x2a66 <__mulsf3>

00002c36 <__tablejump2__>:
    2c36:	ee 0f       	add	r30, r30
    2c38:	ff 1f       	adc	r31, r31
    2c3a:	05 90       	lpm	r0, Z+
    2c3c:	f4 91       	lpm	r31, Z
    2c3e:	e0 2d       	mov	r30, r0
    2c40:	09 94       	ijmp

00002c42 <_exit>:
    2c42:	f8 94       	cli

00002c44 <__stop_program>:
    2c44:	ff cf       	rjmp	.-2      	; 0x2c44 <__stop_program>
