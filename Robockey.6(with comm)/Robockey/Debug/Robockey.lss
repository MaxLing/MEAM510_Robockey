
Robockey.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00002d5e  00002df2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000099  00800140  00800140  00002e32  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00002e32  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002e94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003a8  00000000  00000000  00002ed4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003809  00000000  00000000  0000327c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dfe  00000000  00000000  00006a85  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002add  00000000  00000000  00007883  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ad4  00000000  00000000  0000a360  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ba4  00000000  00000000  0000ae34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000390a  00000000  00000000  0000b9d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000388  00000000  00000000  0000f2e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <__ctors_end>
       4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
       8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
       c:	0c 94 d4 0f 	jmp	0x1fa8	; 0x1fa8 <__vector_3>
      10:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      14:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      18:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      1c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      20:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      24:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      28:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__vector_10>
      2c:	0c 94 38 02 	jmp	0x470	; 0x470 <__vector_11>
      30:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      34:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      38:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      3c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      40:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      44:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      48:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      4c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      50:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      54:	0c 94 e8 0f 	jmp	0x1fd0	; 0x1fd0 <__vector_21>
      58:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      5c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      60:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      64:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      68:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      6c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      70:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      74:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      78:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      7c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      80:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      84:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      88:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      8c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      90:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      94:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      98:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      9c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      a0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      a4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      a8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      ac:	8f 0e       	add	r8, r31
      ae:	94 0e       	add	r9, r20
      b0:	99 0e       	add	r9, r25
      b2:	9e 0e       	add	r9, r30
      b4:	a3 0e       	add	r10, r19
      b6:	8a 0e       	add	r8, r26
      b8:	a8 0e       	add	r10, r24
      ba:	ad 0e       	add	r10, r29
      bc:	b2 0e       	add	r11, r18
      be:	b7 0e       	add	r11, r23
      c0:	d3 0e       	add	r13, r19
      c2:	d6 0e       	add	r13, r22
      c4:	25 0f       	add	r18, r21
      c6:	31 0f       	add	r19, r17
      c8:	7a 0f       	add	r23, r26
      ca:	bb 0f       	add	r27, r27
      cc:	c2 0f       	add	r28, r18
      ce:	c9 0f       	add	r28, r25
      d0:	08 4a       	sbci	r16, 0xA8	; 168
      d2:	d7 3b       	cpi	r29, 0xB7	; 183
      d4:	3b ce       	rjmp	.-906    	; 0xfffffd4c <__eeprom_end+0xff7efd4c>
      d6:	01 6e       	ori	r16, 0xE1	; 225
      d8:	84 bc       	out	0x24, r8	; 36
      da:	bf fd       	.word	0xfdbf	; ????
      dc:	c1 2f       	mov	r28, r17
      de:	3d 6c       	ori	r19, 0xCD	; 205
      e0:	74 31       	cpi	r23, 0x14	; 20
      e2:	9a bd       	out	0x2a, r25	; 42
      e4:	56 83       	std	Z+6, r21	; 0x06
      e6:	3d da       	rcall	.-2950   	; 0xfffff562 <__eeprom_end+0xff7ef562>
      e8:	3d 00       	.word	0x003d	; ????
      ea:	c7 7f       	andi	r28, 0xF7	; 247
      ec:	11 be       	out	0x31, r1	; 49
      ee:	d9 e4       	ldi	r29, 0x49	; 73
      f0:	bb 4c       	sbci	r27, 0xCB	; 203
      f2:	3e 91       	ld	r19, -X
      f4:	6b aa       	std	Y+51, r6	; 0x33
      f6:	aa be       	out	0x3a, r10	; 58
      f8:	00 00       	nop
      fa:	00 80       	ld	r0, Z
      fc:	3f 05       	cpc	r19, r15
      fe:	a8 4c       	sbci	r26, 0xC8	; 200
     100:	cd b2       	in	r12, 0x1d	; 29
     102:	d4 4e       	sbci	r29, 0xE4	; 228
     104:	b9 38       	cpi	r27, 0x89	; 137
     106:	36 a9       	ldd	r19, Z+54	; 0x36
     108:	02 0c       	add	r0, r2
     10a:	50 b9       	out	0x00, r21	; 0
     10c:	91 86       	std	Z+9, r9	; 0x09
     10e:	88 08       	sbc	r8, r8
     110:	3c a6       	std	Y+44, r3	; 0x2c
     112:	aa aa       	std	Y+50, r10	; 0x32
     114:	2a be       	out	0x3a, r2	; 58
     116:	00 00       	nop
     118:	00 80       	ld	r0, Z
     11a:	3f 00       	.word	0x003f	; ????

0000011c <__trampolines_end>:
     11c:	00 01       	movw	r0, r0
     11e:	00 00       	nop
     120:	b3 01       	movw	r22, r6
     122:	12 00       	.word	0x0012	; ????
     124:	02 00       	.word	0x0002	; ????
     126:	00 70       	andi	r16, 0x00	; 0
     128:	01 43       	sbci	r16, 0x31	; 49
     12a:	00 03       	mulsu	r16, r16
     12c:	00 00       	nop
     12e:	6c 01       	movw	r12, r24
     130:	04 01       	movw	r0, r8
     132:	03 09       	sbc	r16, r3
     134:	04 58       	subi	r16, 0x84	; 132
     136:	01 12       	cpse	r0, r17
     138:	02 03       	mulsu	r16, r18
     13a:	09 04       	cpc	r0, r9
     13c:	50 01       	movw	r10, r0
     13e:	06 03       	mulsu	r16, r22
     140:	03 09       	sbc	r16, r3
     142:	04 46       	sbci	r16, 0x64	; 100
     144:	01 08       	sbc	r0, r1

00000146 <string3>:
     146:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

00000150 <string2>:
     150:	06 03 4d 00 32 00 00 00                             ..M.2...

00000158 <string1>:
     158:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     168:	65 00 00 00                                         e...

0000016c <string0>:
     16c:	04 03 09 04                                         ....

00000170 <config1_descriptor>:
     170:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     180:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     190:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     1a0:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     1b0:	40 00 00                                            @..

000001b3 <device_descriptor>:
     1b3:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     1c3:	03 01                                               ..

000001c5 <endpoint_config_table>:
     1c5:	00 01 c1 12 01 80 36 01 81 36 00                    ......6..6.

000001d0 <__ctors_end>:
     1d0:	11 24       	eor	r1, r1
     1d2:	1f be       	out	0x3f, r1	; 63
     1d4:	cf ef       	ldi	r28, 0xFF	; 255
     1d6:	da e0       	ldi	r29, 0x0A	; 10
     1d8:	de bf       	out	0x3e, r29	; 62
     1da:	cd bf       	out	0x3d, r28	; 61

000001dc <__do_copy_data>:
     1dc:	11 e0       	ldi	r17, 0x01	; 1
     1de:	a0 e0       	ldi	r26, 0x00	; 0
     1e0:	b1 e0       	ldi	r27, 0x01	; 1
     1e2:	ee e5       	ldi	r30, 0x5E	; 94
     1e4:	fd e2       	ldi	r31, 0x2D	; 45
     1e6:	02 c0       	rjmp	.+4      	; 0x1ec <__do_copy_data+0x10>
     1e8:	05 90       	lpm	r0, Z+
     1ea:	0d 92       	st	X+, r0
     1ec:	a0 34       	cpi	r26, 0x40	; 64
     1ee:	b1 07       	cpc	r27, r17
     1f0:	d9 f7       	brne	.-10     	; 0x1e8 <__do_copy_data+0xc>

000001f2 <__do_clear_bss>:
     1f2:	21 e0       	ldi	r18, 0x01	; 1
     1f4:	a0 e4       	ldi	r26, 0x40	; 64
     1f6:	b1 e0       	ldi	r27, 0x01	; 1
     1f8:	01 c0       	rjmp	.+2      	; 0x1fc <.do_clear_bss_start>

000001fa <.do_clear_bss_loop>:
     1fa:	1d 92       	st	X+, r1

000001fc <.do_clear_bss_start>:
     1fc:	a9 3d       	cpi	r26, 0xD9	; 217
     1fe:	b2 07       	cpc	r27, r18
     200:	e1 f7       	brne	.-8      	; 0x1fa <.do_clear_bss_loop>
     202:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <main>
     206:	0c 94 ad 16 	jmp	0x2d5a	; 0x2d5a <_exit>

0000020a <__bad_interrupt>:
     20a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000020e <initADC>:
  #include "ADC.h"
 
  void initADC()
  {
  // voltage reference Vcc
  clear(ADMUX,REFS1);
     20e:	ec e7       	ldi	r30, 0x7C	; 124
     210:	f0 e0       	ldi	r31, 0x00	; 0
     212:	80 81       	ld	r24, Z
     214:	8f 77       	andi	r24, 0x7F	; 127
     216:	80 83       	st	Z, r24
  set(ADMUX,REFS0); 
     218:	80 81       	ld	r24, Z
     21a:	80 64       	ori	r24, 0x40	; 64
     21c:	80 83       	st	Z, r24

  //ADC Prescaler : /128
  set(ADCSRA, ADPS2);
     21e:	ea e7       	ldi	r30, 0x7A	; 122
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	80 81       	ld	r24, Z
     224:	84 60       	ori	r24, 0x04	; 4
     226:	80 83       	st	Z, r24
  set(ADCSRA, ADPS1);
     228:	80 81       	ld	r24, Z
     22a:	82 60       	ori	r24, 0x02	; 2
     22c:	80 83       	st	Z, r24
  set(ADCSRA, ADPS0);
     22e:	80 81       	ld	r24, Z
     230:	81 60       	ori	r24, 0x01	; 1
     232:	80 83       	st	Z, r24

  m_disableJTAG(); // enable F4-F7 as GPIO
     234:	80 e8       	ldi	r24, 0x80	; 128
     236:	85 bf       	out	0x35, r24	; 53
     238:	85 bf       	out	0x35, r24	; 53
     23a:	08 95       	ret

0000023c <ADC0>:
  }


  float ADC0() //F0
  {
   clear(ADCSRA, ADEN); // prepare for channel change
     23c:	ea e7       	ldi	r30, 0x7A	; 122
     23e:	f0 e0       	ldi	r31, 0x00	; 0
     240:	80 81       	ld	r24, Z
     242:	8f 77       	andi	r24, 0x7F	; 127
     244:	80 83       	st	Z, r24
   set(DIDR0, ADC0D); // disable F0 digital input
     246:	ae e7       	ldi	r26, 0x7E	; 126
     248:	b0 e0       	ldi	r27, 0x00	; 0
     24a:	8c 91       	ld	r24, X
     24c:	81 60       	ori	r24, 0x01	; 1
     24e:	8c 93       	st	X, r24

   // channel selection F0
   clear(ADCSRB, MUX5);
     250:	ab e7       	ldi	r26, 0x7B	; 123
     252:	b0 e0       	ldi	r27, 0x00	; 0
     254:	8c 91       	ld	r24, X
     256:	8f 7d       	andi	r24, 0xDF	; 223
     258:	8c 93       	st	X, r24
   clear(ADMUX, MUX2);
     25a:	ac e7       	ldi	r26, 0x7C	; 124
     25c:	b0 e0       	ldi	r27, 0x00	; 0
     25e:	8c 91       	ld	r24, X
     260:	8b 7f       	andi	r24, 0xFB	; 251
     262:	8c 93       	st	X, r24
   clear(ADMUX, MUX1); 
     264:	8c 91       	ld	r24, X
     266:	8d 7f       	andi	r24, 0xFD	; 253
     268:	8c 93       	st	X, r24
   clear(ADMUX, MUX0);                 
     26a:	8c 91       	ld	r24, X
     26c:	8e 7f       	andi	r24, 0xFE	; 254
     26e:	8c 93       	st	X, r24
   
   //enable and begin ADC conversion
   set(ADCSRA, ADEN); 
     270:	80 81       	ld	r24, Z
     272:	80 68       	ori	r24, 0x80	; 128
     274:	80 83       	st	Z, r24
   set(ADCSRA, ADSC); 
     276:	80 81       	ld	r24, Z
     278:	80 64       	ori	r24, 0x40	; 64
     27a:	80 83       	st	Z, r24
   while(!check(ADCSRA,ADIF)){}
     27c:	80 81       	ld	r24, Z
     27e:	84 ff       	sbrs	r24, 4
     280:	fd cf       	rjmp	.-6      	; 0x27c <ADC0+0x40>
   float adc = (float)ADC;
     282:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     286:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
   return adc;
   set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     292:	08 95       	ret

00000294 <ADC1>:

  float ADC1() //F1
  {
   clear(ADCSRA, ADEN); // prepare for channel change
     294:	ea e7       	ldi	r30, 0x7A	; 122
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	80 81       	ld	r24, Z
     29a:	8f 77       	andi	r24, 0x7F	; 127
     29c:	80 83       	st	Z, r24
   set(DIDR0, ADC1D); // disable F1 digital input
     29e:	ae e7       	ldi	r26, 0x7E	; 126
     2a0:	b0 e0       	ldi	r27, 0x00	; 0
     2a2:	8c 91       	ld	r24, X
     2a4:	82 60       	ori	r24, 0x02	; 2
     2a6:	8c 93       	st	X, r24

   // channel selection F1
   clear(ADCSRB, MUX5);
     2a8:	ab e7       	ldi	r26, 0x7B	; 123
     2aa:	b0 e0       	ldi	r27, 0x00	; 0
     2ac:	8c 91       	ld	r24, X
     2ae:	8f 7d       	andi	r24, 0xDF	; 223
     2b0:	8c 93       	st	X, r24
   clear(ADMUX, MUX2);
     2b2:	ac e7       	ldi	r26, 0x7C	; 124
     2b4:	b0 e0       	ldi	r27, 0x00	; 0
     2b6:	8c 91       	ld	r24, X
     2b8:	8b 7f       	andi	r24, 0xFB	; 251
     2ba:	8c 93       	st	X, r24
   clear(ADMUX, MUX1);
     2bc:	8c 91       	ld	r24, X
     2be:	8d 7f       	andi	r24, 0xFD	; 253
     2c0:	8c 93       	st	X, r24
   set(ADMUX, MUX0);
     2c2:	8c 91       	ld	r24, X
     2c4:	81 60       	ori	r24, 0x01	; 1
     2c6:	8c 93       	st	X, r24
  
   //enable and begin ADC conversion
   set(ADCSRA, ADEN);
     2c8:	80 81       	ld	r24, Z
     2ca:	80 68       	ori	r24, 0x80	; 128
     2cc:	80 83       	st	Z, r24
   set(ADCSRA, ADSC);
     2ce:	80 81       	ld	r24, Z
     2d0:	80 64       	ori	r24, 0x40	; 64
     2d2:	80 83       	st	Z, r24
   while(!check(ADCSRA,ADIF)){}
     2d4:	80 81       	ld	r24, Z
     2d6:	84 ff       	sbrs	r24, 4
     2d8:	fd cf       	rjmp	.-6      	; 0x2d4 <ADC1+0x40>
   float adc = (float)ADC;
     2da:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     2de:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     2e2:	80 e0       	ldi	r24, 0x00	; 0
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
   return adc;
   set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     2ea:	08 95       	ret

000002ec <ADC2>:

  float ADC2() //F4
  {
	   clear(ADCSRA, ADEN); // prepare for channel change
     2ec:	ea e7       	ldi	r30, 0x7A	; 122
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	80 81       	ld	r24, Z
     2f2:	8f 77       	andi	r24, 0x7F	; 127
     2f4:	80 83       	st	Z, r24
	   set(DIDR0, ADC4D); // disable F4 digital input
     2f6:	ae e7       	ldi	r26, 0x7E	; 126
     2f8:	b0 e0       	ldi	r27, 0x00	; 0
     2fa:	8c 91       	ld	r24, X
     2fc:	80 61       	ori	r24, 0x10	; 16
     2fe:	8c 93       	st	X, r24

	   // channel selection F4
	   clear(ADCSRB, MUX5);
     300:	ab e7       	ldi	r26, 0x7B	; 123
     302:	b0 e0       	ldi	r27, 0x00	; 0
     304:	8c 91       	ld	r24, X
     306:	8f 7d       	andi	r24, 0xDF	; 223
     308:	8c 93       	st	X, r24
	   set(ADMUX, MUX2);
     30a:	ac e7       	ldi	r26, 0x7C	; 124
     30c:	b0 e0       	ldi	r27, 0x00	; 0
     30e:	8c 91       	ld	r24, X
     310:	84 60       	ori	r24, 0x04	; 4
     312:	8c 93       	st	X, r24
	   clear(ADMUX, MUX1);
     314:	8c 91       	ld	r24, X
     316:	8d 7f       	andi	r24, 0xFD	; 253
     318:	8c 93       	st	X, r24
	   clear(ADMUX, MUX0);
     31a:	8c 91       	ld	r24, X
     31c:	8e 7f       	andi	r24, 0xFE	; 254
     31e:	8c 93       	st	X, r24
	   
	   //enable and begin ADC conversion
	   set(ADCSRA, ADEN);
     320:	80 81       	ld	r24, Z
     322:	80 68       	ori	r24, 0x80	; 128
     324:	80 83       	st	Z, r24
	   set(ADCSRA, ADSC);
     326:	80 81       	ld	r24, Z
     328:	80 64       	ori	r24, 0x40	; 64
     32a:	80 83       	st	Z, r24
	   while(!check(ADCSRA,ADIF)){}
     32c:	80 81       	ld	r24, Z
     32e:	84 ff       	sbrs	r24, 4
     330:	fd cf       	rjmp	.-6      	; 0x32c <ADC2+0x40>
	   float adc = (float)ADC;
     332:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     336:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
	   return adc;
	   set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     342:	08 95       	ret

00000344 <ADC3>:

  float ADC3() //F5
  {
	  clear(ADCSRA, ADEN); // prepare for channel change
     344:	ea e7       	ldi	r30, 0x7A	; 122
     346:	f0 e0       	ldi	r31, 0x00	; 0
     348:	80 81       	ld	r24, Z
     34a:	8f 77       	andi	r24, 0x7F	; 127
     34c:	80 83       	st	Z, r24
	  set(DIDR0, ADC5D); // disable F5 digital input
     34e:	ae e7       	ldi	r26, 0x7E	; 126
     350:	b0 e0       	ldi	r27, 0x00	; 0
     352:	8c 91       	ld	r24, X
     354:	80 62       	ori	r24, 0x20	; 32
     356:	8c 93       	st	X, r24

	  // channel selection F5
	  clear(ADCSRB, MUX5);
     358:	ab e7       	ldi	r26, 0x7B	; 123
     35a:	b0 e0       	ldi	r27, 0x00	; 0
     35c:	8c 91       	ld	r24, X
     35e:	8f 7d       	andi	r24, 0xDF	; 223
     360:	8c 93       	st	X, r24
	  set(ADMUX, MUX2);
     362:	ac e7       	ldi	r26, 0x7C	; 124
     364:	b0 e0       	ldi	r27, 0x00	; 0
     366:	8c 91       	ld	r24, X
     368:	84 60       	ori	r24, 0x04	; 4
     36a:	8c 93       	st	X, r24
	  clear(ADMUX, MUX1);
     36c:	8c 91       	ld	r24, X
     36e:	8d 7f       	andi	r24, 0xFD	; 253
     370:	8c 93       	st	X, r24
	  set(ADMUX, MUX0);
     372:	8c 91       	ld	r24, X
     374:	81 60       	ori	r24, 0x01	; 1
     376:	8c 93       	st	X, r24
	  
	  //enable and begin ADC conversion
	  set(ADCSRA, ADEN);
     378:	80 81       	ld	r24, Z
     37a:	80 68       	ori	r24, 0x80	; 128
     37c:	80 83       	st	Z, r24
	  set(ADCSRA, ADSC);
     37e:	80 81       	ld	r24, Z
     380:	80 64       	ori	r24, 0x40	; 64
     382:	80 83       	st	Z, r24
	  while(!check(ADCSRA,ADIF)){}
     384:	80 81       	ld	r24, Z
     386:	84 ff       	sbrs	r24, 4
     388:	fd cf       	rjmp	.-6      	; 0x384 <ADC3+0x40>
	  float adc = (float)ADC;
     38a:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     38e:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
	  return adc;
	  set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     39a:	08 95       	ret

0000039c <ADC4>:

  float ADC4() //F6
  {
	  clear(ADCSRA, ADEN); // prepare for channel change
     39c:	ea e7       	ldi	r30, 0x7A	; 122
     39e:	f0 e0       	ldi	r31, 0x00	; 0
     3a0:	80 81       	ld	r24, Z
     3a2:	8f 77       	andi	r24, 0x7F	; 127
     3a4:	80 83       	st	Z, r24
	  set(DIDR0, ADC6D); // disable F6 digital input
     3a6:	ae e7       	ldi	r26, 0x7E	; 126
     3a8:	b0 e0       	ldi	r27, 0x00	; 0
     3aa:	8c 91       	ld	r24, X
     3ac:	80 64       	ori	r24, 0x40	; 64
     3ae:	8c 93       	st	X, r24

	  // channel selection F6
	  clear(ADCSRB, MUX5);
     3b0:	ab e7       	ldi	r26, 0x7B	; 123
     3b2:	b0 e0       	ldi	r27, 0x00	; 0
     3b4:	8c 91       	ld	r24, X
     3b6:	8f 7d       	andi	r24, 0xDF	; 223
     3b8:	8c 93       	st	X, r24
	  set(ADMUX, MUX2);
     3ba:	ac e7       	ldi	r26, 0x7C	; 124
     3bc:	b0 e0       	ldi	r27, 0x00	; 0
     3be:	8c 91       	ld	r24, X
     3c0:	84 60       	ori	r24, 0x04	; 4
     3c2:	8c 93       	st	X, r24
	  set(ADMUX, MUX1);
     3c4:	8c 91       	ld	r24, X
     3c6:	82 60       	ori	r24, 0x02	; 2
     3c8:	8c 93       	st	X, r24
	  clear(ADMUX, MUX0);
     3ca:	8c 91       	ld	r24, X
     3cc:	8e 7f       	andi	r24, 0xFE	; 254
     3ce:	8c 93       	st	X, r24
	  
	  //enable and begin ADC conversion
	  set(ADCSRA, ADEN);
     3d0:	80 81       	ld	r24, Z
     3d2:	80 68       	ori	r24, 0x80	; 128
     3d4:	80 83       	st	Z, r24
	  set(ADCSRA, ADSC);
     3d6:	80 81       	ld	r24, Z
     3d8:	80 64       	ori	r24, 0x40	; 64
     3da:	80 83       	st	Z, r24
	  while(!check(ADCSRA,ADIF)){}
     3dc:	80 81       	ld	r24, Z
     3de:	84 ff       	sbrs	r24, 4
     3e0:	fd cf       	rjmp	.-6      	; 0x3dc <ADC4+0x40>
	  float adc = (float)ADC;
     3e2:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     3e6:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     3ea:	80 e0       	ldi	r24, 0x00	; 0
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
	  return adc;
	  set(ADCSRA,ADIF); // wait for flag, read ADC and then reset the flag
  }
     3f2:	08 95       	ret

000003f4 <__vector_10>:
     3f4:	1f 92       	push	r1
     3f6:	0f 92       	push	r0
     3f8:	0f b6       	in	r0, 0x3f	; 63
     3fa:	0f 92       	push	r0
     3fc:	11 24       	eor	r1, r1
     3fe:	8f 93       	push	r24
     400:	9f 93       	push	r25
     402:	ef 93       	push	r30
     404:	ff 93       	push	r31
     406:	e1 ee       	ldi	r30, 0xE1	; 225
     408:	f0 e0       	ldi	r31, 0x00	; 0
     40a:	80 81       	ld	r24, Z
     40c:	10 82       	st	Z, r1
     40e:	83 ff       	sbrs	r24, 3
     410:	11 c0       	rjmp	.+34     	; 0x434 <__FUSE_REGION_LENGTH__+0x34>
     412:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     416:	91 e0       	ldi	r25, 0x01	; 1
     418:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     41c:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     420:	92 e1       	ldi	r25, 0x12	; 18
     422:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     426:	98 e0       	ldi	r25, 0x08	; 8
     428:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     42c:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <usb_configuration>
     430:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__data_end>
     434:	82 ff       	sbrs	r24, 2
     436:	13 c0       	rjmp	.+38     	; 0x45e <__FUSE_REGION_LENGTH__+0x5e>
     438:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <usb_configuration>
     43c:	88 23       	and	r24, r24
     43e:	79 f0       	breq	.+30     	; 0x45e <__FUSE_REGION_LENGTH__+0x5e>
     440:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <transmit_flush_timer>
     444:	88 23       	and	r24, r24
     446:	59 f0       	breq	.+22     	; 0x45e <__FUSE_REGION_LENGTH__+0x5e>
     448:	81 50       	subi	r24, 0x01	; 1
     44a:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <transmit_flush_timer>
     44e:	81 11       	cpse	r24, r1
     450:	06 c0       	rjmp	.+12     	; 0x45e <__FUSE_REGION_LENGTH__+0x5e>
     452:	84 e0       	ldi	r24, 0x04	; 4
     454:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     458:	8a e3       	ldi	r24, 0x3A	; 58
     45a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     45e:	ff 91       	pop	r31
     460:	ef 91       	pop	r30
     462:	9f 91       	pop	r25
     464:	8f 91       	pop	r24
     466:	0f 90       	pop	r0
     468:	0f be       	out	0x3f, r0	; 63
     46a:	0f 90       	pop	r0
     46c:	1f 90       	pop	r1
     46e:	18 95       	reti

00000470 <__vector_11>:
     470:	1f 92       	push	r1
     472:	0f 92       	push	r0
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	0f 92       	push	r0
     478:	11 24       	eor	r1, r1
     47a:	0f 93       	push	r16
     47c:	1f 93       	push	r17
     47e:	2f 93       	push	r18
     480:	3f 93       	push	r19
     482:	4f 93       	push	r20
     484:	5f 93       	push	r21
     486:	6f 93       	push	r22
     488:	7f 93       	push	r23
     48a:	8f 93       	push	r24
     48c:	9f 93       	push	r25
     48e:	af 93       	push	r26
     490:	bf 93       	push	r27
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	ef 93       	push	r30
     498:	ff 93       	push	r31
     49a:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     49e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     4a2:	83 ff       	sbrs	r24, 3
     4a4:	4c c1       	rjmp	.+664    	; 0x73e <__vector_11+0x2ce>
     4a6:	e1 ef       	ldi	r30, 0xF1	; 241
     4a8:	f0 e0       	ldi	r31, 0x00	; 0
     4aa:	60 81       	ld	r22, Z
     4ac:	80 81       	ld	r24, Z
     4ae:	20 81       	ld	r18, Z
     4b0:	90 81       	ld	r25, Z
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	39 2b       	or	r19, r25
     4b6:	40 81       	ld	r20, Z
     4b8:	90 81       	ld	r25, Z
     4ba:	50 e0       	ldi	r21, 0x00	; 0
     4bc:	59 2b       	or	r21, r25
     4be:	70 81       	ld	r23, Z
     4c0:	c0 81       	ld	r28, Z
     4c2:	92 ef       	ldi	r25, 0xF2	; 242
     4c4:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     4c8:	86 30       	cpi	r24, 0x06	; 6
     4ca:	09 f0       	breq	.+2      	; 0x4ce <__vector_11+0x5e>
     4cc:	58 c0       	rjmp	.+176    	; 0x57e <__vector_11+0x10e>
     4ce:	04 c0       	rjmp	.+8      	; 0x4d8 <__vector_11+0x68>
     4d0:	81 e2       	ldi	r24, 0x21	; 33
     4d2:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     4d6:	3a c1       	rjmp	.+628    	; 0x74c <__vector_11+0x2dc>
     4d8:	66 e0       	ldi	r22, 0x06	; 6
     4da:	8c e1       	ldi	r24, 0x1C	; 28
     4dc:	91 e0       	ldi	r25, 0x01	; 1
     4de:	fc 01       	movw	r30, r24
     4e0:	a5 91       	lpm	r26, Z+
     4e2:	b4 91       	lpm	r27, Z
     4e4:	2a 17       	cp	r18, r26
     4e6:	3b 07       	cpc	r19, r27
     4e8:	11 f0       	breq	.+4      	; 0x4ee <__vector_11+0x7e>
     4ea:	07 96       	adiw	r24, 0x07	; 7
     4ec:	23 c0       	rjmp	.+70     	; 0x534 <__vector_11+0xc4>
     4ee:	fc 01       	movw	r30, r24
     4f0:	32 96       	adiw	r30, 0x02	; 2
     4f2:	a5 91       	lpm	r26, Z+
     4f4:	b4 91       	lpm	r27, Z
     4f6:	4a 17       	cp	r20, r26
     4f8:	5b 07       	cpc	r21, r27
     4fa:	11 f0       	breq	.+4      	; 0x500 <__vector_11+0x90>
     4fc:	07 96       	adiw	r24, 0x07	; 7
     4fe:	1a c0       	rjmp	.+52     	; 0x534 <__vector_11+0xc4>
     500:	fc 01       	movw	r30, r24
     502:	34 96       	adiw	r30, 0x04	; 4
     504:	45 91       	lpm	r20, Z+
     506:	54 91       	lpm	r21, Z
     508:	fc 01       	movw	r30, r24
     50a:	36 96       	adiw	r30, 0x06	; 6
     50c:	24 91       	lpm	r18, Z
     50e:	87 2f       	mov	r24, r23
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	9c 2b       	or	r25, r28
     514:	8f 3f       	cpi	r24, 0xFF	; 255
     516:	91 05       	cpc	r25, r1
     518:	19 f0       	breq	.+6      	; 0x520 <__vector_11+0xb0>
     51a:	10 f0       	brcs	.+4      	; 0x520 <__vector_11+0xb0>
     51c:	8f ef       	ldi	r24, 0xFF	; 255
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	82 17       	cp	r24, r18
     522:	08 f4       	brcc	.+2      	; 0x526 <__vector_11+0xb6>
     524:	28 2f       	mov	r18, r24
     526:	a8 ee       	ldi	r26, 0xE8	; 232
     528:	b0 e0       	ldi	r27, 0x00	; 0
     52a:	70 e1       	ldi	r23, 0x10	; 16
     52c:	6e ef       	ldi	r22, 0xFE	; 254
     52e:	c1 ef       	ldi	r28, 0xF1	; 241
     530:	d0 e0       	ldi	r29, 0x00	; 0
     532:	03 c0       	rjmp	.+6      	; 0x53a <__vector_11+0xca>
     534:	61 50       	subi	r22, 0x01	; 1
     536:	99 f6       	brne	.-90     	; 0x4de <__vector_11+0x6e>
     538:	cb cf       	rjmp	.-106    	; 0x4d0 <__vector_11+0x60>
     53a:	8c 91       	ld	r24, X
     53c:	98 2f       	mov	r25, r24
     53e:	95 70       	andi	r25, 0x05	; 5
     540:	e1 f3       	breq	.-8      	; 0x53a <__vector_11+0xca>
     542:	82 fd       	sbrc	r24, 2
     544:	03 c1       	rjmp	.+518    	; 0x74c <__vector_11+0x2dc>
     546:	32 2f       	mov	r19, r18
     548:	21 31       	cpi	r18, 0x11	; 17
     54a:	08 f0       	brcs	.+2      	; 0x54e <__vector_11+0xde>
     54c:	37 2f       	mov	r19, r23
     54e:	33 23       	and	r19, r19
     550:	09 f4       	brne	.+2      	; 0x554 <__vector_11+0xe4>
     552:	f9 c0       	rjmp	.+498    	; 0x746 <__vector_11+0x2d6>
     554:	fa 01       	movw	r30, r20
     556:	83 2f       	mov	r24, r19
     558:	94 91       	lpm	r25, Z
     55a:	98 83       	st	Y, r25
     55c:	81 50       	subi	r24, 0x01	; 1
     55e:	31 96       	adiw	r30, 0x01	; 1
     560:	81 11       	cpse	r24, r1
     562:	fa cf       	rjmp	.-12     	; 0x558 <__vector_11+0xe8>
     564:	8f ef       	ldi	r24, 0xFF	; 255
     566:	83 0f       	add	r24, r19
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	01 96       	adiw	r24, 0x01	; 1
     56c:	48 0f       	add	r20, r24
     56e:	59 1f       	adc	r21, r25
     570:	23 1b       	sub	r18, r19
     572:	6c 93       	st	X, r22
     574:	21 11       	cpse	r18, r1
     576:	e1 cf       	rjmp	.-62     	; 0x53a <__vector_11+0xca>
     578:	30 31       	cpi	r19, 0x10	; 16
     57a:	f9 f2       	breq	.-66     	; 0x53a <__vector_11+0xca>
     57c:	e7 c0       	rjmp	.+462    	; 0x74c <__vector_11+0x2dc>
     57e:	85 30       	cpi	r24, 0x05	; 5
     580:	61 f4       	brne	.+24     	; 0x59a <__vector_11+0x12a>
     582:	8e ef       	ldi	r24, 0xFE	; 254
     584:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     588:	e8 ee       	ldi	r30, 0xE8	; 232
     58a:	f0 e0       	ldi	r31, 0x00	; 0
     58c:	80 81       	ld	r24, Z
     58e:	80 ff       	sbrs	r24, 0
     590:	fd cf       	rjmp	.-6      	; 0x58c <__vector_11+0x11c>
     592:	20 68       	ori	r18, 0x80	; 128
     594:	20 93 e3 00 	sts	0x00E3, r18	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     598:	d9 c0       	rjmp	.+434    	; 0x74c <__vector_11+0x2dc>
     59a:	89 30       	cpi	r24, 0x09	; 9
     59c:	09 f0       	breq	.+2      	; 0x5a0 <__vector_11+0x130>
     59e:	35 c0       	rjmp	.+106    	; 0x60a <__vector_11+0x19a>
     5a0:	61 11       	cpse	r22, r1
     5a2:	cd c0       	rjmp	.+410    	; 0x73e <__vector_11+0x2ce>
     5a4:	20 93 42 01 	sts	0x0142, r18	; 0x800142 <usb_configuration>
     5a8:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__data_end>
     5ac:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <transmit_flush_timer>
     5b0:	8e ef       	ldi	r24, 0xFE	; 254
     5b2:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     5b6:	81 e0       	ldi	r24, 0x01	; 1
     5b8:	25 ec       	ldi	r18, 0xC5	; 197
     5ba:	31 e0       	ldi	r19, 0x01	; 1
     5bc:	c9 ee       	ldi	r28, 0xE9	; 233
     5be:	d0 e0       	ldi	r29, 0x00	; 0
     5c0:	ab ee       	ldi	r26, 0xEB	; 235
     5c2:	b0 e0       	ldi	r27, 0x00	; 0
     5c4:	0c ee       	ldi	r16, 0xEC	; 236
     5c6:	10 e0       	ldi	r17, 0x00	; 0
     5c8:	6d ee       	ldi	r22, 0xED	; 237
     5ca:	70 e0       	ldi	r23, 0x00	; 0
     5cc:	88 83       	st	Y, r24
     5ce:	a9 01       	movw	r20, r18
     5d0:	4f 5f       	subi	r20, 0xFF	; 255
     5d2:	5f 4f       	sbci	r21, 0xFF	; 255
     5d4:	f9 01       	movw	r30, r18
     5d6:	94 91       	lpm	r25, Z
     5d8:	9c 93       	st	X, r25
     5da:	99 23       	and	r25, r25
     5dc:	61 f0       	breq	.+24     	; 0x5f6 <__vector_11+0x186>
     5de:	fa 01       	movw	r30, r20
     5e0:	44 91       	lpm	r20, Z
     5e2:	f8 01       	movw	r30, r16
     5e4:	40 83       	st	Z, r20
     5e6:	f9 01       	movw	r30, r18
     5e8:	32 96       	adiw	r30, 0x02	; 2
     5ea:	94 91       	lpm	r25, Z
     5ec:	2d 5f       	subi	r18, 0xFD	; 253
     5ee:	3f 4f       	sbci	r19, 0xFF	; 255
     5f0:	fb 01       	movw	r30, r22
     5f2:	90 83       	st	Z, r25
     5f4:	01 c0       	rjmp	.+2      	; 0x5f8 <__vector_11+0x188>
     5f6:	9a 01       	movw	r18, r20
     5f8:	8f 5f       	subi	r24, 0xFF	; 255
     5fa:	85 30       	cpi	r24, 0x05	; 5
     5fc:	39 f7       	brne	.-50     	; 0x5cc <__vector_11+0x15c>
     5fe:	ea ee       	ldi	r30, 0xEA	; 234
     600:	f0 e0       	ldi	r31, 0x00	; 0
     602:	8e e1       	ldi	r24, 0x1E	; 30
     604:	80 83       	st	Z, r24
     606:	10 82       	st	Z, r1
     608:	a1 c0       	rjmp	.+322    	; 0x74c <__vector_11+0x2dc>
     60a:	88 30       	cpi	r24, 0x08	; 8
     60c:	81 f4       	brne	.+32     	; 0x62e <__vector_11+0x1be>
     60e:	60 38       	cpi	r22, 0x80	; 128
     610:	09 f0       	breq	.+2      	; 0x614 <__vector_11+0x1a4>
     612:	95 c0       	rjmp	.+298    	; 0x73e <__vector_11+0x2ce>
     614:	e8 ee       	ldi	r30, 0xE8	; 232
     616:	f0 e0       	ldi	r31, 0x00	; 0
     618:	80 81       	ld	r24, Z
     61a:	80 ff       	sbrs	r24, 0
     61c:	fd cf       	rjmp	.-6      	; 0x618 <__vector_11+0x1a8>
     61e:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <usb_configuration>
     622:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     626:	8e ef       	ldi	r24, 0xFE	; 254
     628:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     62c:	8f c0       	rjmp	.+286    	; 0x74c <__vector_11+0x2dc>
     62e:	81 32       	cpi	r24, 0x21	; 33
     630:	b9 f4       	brne	.+46     	; 0x660 <__vector_11+0x1f0>
     632:	61 3a       	cpi	r22, 0xA1	; 161
     634:	09 f0       	breq	.+2      	; 0x638 <__vector_11+0x1c8>
     636:	83 c0       	rjmp	.+262    	; 0x73e <__vector_11+0x2ce>
     638:	e8 ee       	ldi	r30, 0xE8	; 232
     63a:	f0 e0       	ldi	r31, 0x00	; 0
     63c:	80 81       	ld	r24, Z
     63e:	80 ff       	sbrs	r24, 0
     640:	fd cf       	rjmp	.-6      	; 0x63c <__vector_11+0x1cc>
     642:	e0 e0       	ldi	r30, 0x00	; 0
     644:	f1 e0       	ldi	r31, 0x01	; 1
     646:	27 e0       	ldi	r18, 0x07	; 7
     648:	31 e0       	ldi	r19, 0x01	; 1
     64a:	a1 ef       	ldi	r26, 0xF1	; 241
     64c:	b0 e0       	ldi	r27, 0x00	; 0
     64e:	81 91       	ld	r24, Z+
     650:	8c 93       	st	X, r24
     652:	e2 17       	cp	r30, r18
     654:	f3 07       	cpc	r31, r19
     656:	d9 f7       	brne	.-10     	; 0x64e <__vector_11+0x1de>
     658:	8e ef       	ldi	r24, 0xFE	; 254
     65a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     65e:	76 c0       	rjmp	.+236    	; 0x74c <__vector_11+0x2dc>
     660:	80 32       	cpi	r24, 0x20	; 32
     662:	d1 f4       	brne	.+52     	; 0x698 <__vector_11+0x228>
     664:	61 32       	cpi	r22, 0x21	; 33
     666:	09 f0       	breq	.+2      	; 0x66a <__vector_11+0x1fa>
     668:	6a c0       	rjmp	.+212    	; 0x73e <__vector_11+0x2ce>
     66a:	e8 ee       	ldi	r30, 0xE8	; 232
     66c:	f0 e0       	ldi	r31, 0x00	; 0
     66e:	80 81       	ld	r24, Z
     670:	82 ff       	sbrs	r24, 2
     672:	fd cf       	rjmp	.-6      	; 0x66e <__vector_11+0x1fe>
     674:	e0 e0       	ldi	r30, 0x00	; 0
     676:	f1 e0       	ldi	r31, 0x01	; 1
     678:	27 e0       	ldi	r18, 0x07	; 7
     67a:	31 e0       	ldi	r19, 0x01	; 1
     67c:	a1 ef       	ldi	r26, 0xF1	; 241
     67e:	b0 e0       	ldi	r27, 0x00	; 0
     680:	8c 91       	ld	r24, X
     682:	81 93       	st	Z+, r24
     684:	e2 17       	cp	r30, r18
     686:	f3 07       	cpc	r31, r19
     688:	d9 f7       	brne	.-10     	; 0x680 <__vector_11+0x210>
     68a:	e8 ee       	ldi	r30, 0xE8	; 232
     68c:	f0 e0       	ldi	r31, 0x00	; 0
     68e:	8b ef       	ldi	r24, 0xFB	; 251
     690:	80 83       	st	Z, r24
     692:	8e ef       	ldi	r24, 0xFE	; 254
     694:	80 83       	st	Z, r24
     696:	5a c0       	rjmp	.+180    	; 0x74c <__vector_11+0x2dc>
     698:	82 32       	cpi	r24, 0x22	; 34
     69a:	71 f4       	brne	.+28     	; 0x6b8 <__vector_11+0x248>
     69c:	61 32       	cpi	r22, 0x21	; 33
     69e:	09 f0       	breq	.+2      	; 0x6a2 <__vector_11+0x232>
     6a0:	4e c0       	rjmp	.+156    	; 0x73e <__vector_11+0x2ce>
     6a2:	20 93 40 01 	sts	0x0140, r18	; 0x800140 <__data_end>
     6a6:	e8 ee       	ldi	r30, 0xE8	; 232
     6a8:	f0 e0       	ldi	r31, 0x00	; 0
     6aa:	80 81       	ld	r24, Z
     6ac:	80 ff       	sbrs	r24, 0
     6ae:	fd cf       	rjmp	.-6      	; 0x6aa <__vector_11+0x23a>
     6b0:	8e ef       	ldi	r24, 0xFE	; 254
     6b2:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     6b6:	4a c0       	rjmp	.+148    	; 0x74c <__vector_11+0x2dc>
     6b8:	81 11       	cpse	r24, r1
     6ba:	1a c0       	rjmp	.+52     	; 0x6f0 <__vector_11+0x280>
     6bc:	e8 ee       	ldi	r30, 0xE8	; 232
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	80 81       	ld	r24, Z
     6c2:	80 ff       	sbrs	r24, 0
     6c4:	fd cf       	rjmp	.-6      	; 0x6c0 <__vector_11+0x250>
     6c6:	62 38       	cpi	r22, 0x82	; 130
     6c8:	51 f4       	brne	.+20     	; 0x6de <__vector_11+0x26e>
     6ca:	e9 ee       	ldi	r30, 0xE9	; 233
     6cc:	f0 e0       	ldi	r31, 0x00	; 0
     6ce:	40 83       	st	Z, r20
     6d0:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     6d4:	85 fb       	bst	r24, 5
     6d6:	88 27       	eor	r24, r24
     6d8:	80 f9       	bld	r24, 0
     6da:	10 82       	st	Z, r1
     6dc:	01 c0       	rjmp	.+2      	; 0x6e0 <__vector_11+0x270>
     6de:	80 e0       	ldi	r24, 0x00	; 0
     6e0:	e1 ef       	ldi	r30, 0xF1	; 241
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	80 83       	st	Z, r24
     6e6:	10 82       	st	Z, r1
     6e8:	8e ef       	ldi	r24, 0xFE	; 254
     6ea:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     6ee:	2e c0       	rjmp	.+92     	; 0x74c <__vector_11+0x2dc>
     6f0:	98 2f       	mov	r25, r24
     6f2:	9d 7f       	andi	r25, 0xFD	; 253
     6f4:	91 30       	cpi	r25, 0x01	; 1
     6f6:	19 f5       	brne	.+70     	; 0x73e <__vector_11+0x2ce>
     6f8:	62 30       	cpi	r22, 0x02	; 2
     6fa:	09 f5       	brne	.+66     	; 0x73e <__vector_11+0x2ce>
     6fc:	23 2b       	or	r18, r19
     6fe:	f9 f4       	brne	.+62     	; 0x73e <__vector_11+0x2ce>
     700:	4f 77       	andi	r20, 0x7F	; 127
     702:	9f ef       	ldi	r25, 0xFF	; 255
     704:	94 0f       	add	r25, r20
     706:	94 30       	cpi	r25, 0x04	; 4
     708:	d0 f4       	brcc	.+52     	; 0x73e <__vector_11+0x2ce>
     70a:	9e ef       	ldi	r25, 0xFE	; 254
     70c:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     710:	40 93 e9 00 	sts	0x00E9, r20	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     714:	83 30       	cpi	r24, 0x03	; 3
     716:	21 f4       	brne	.+8      	; 0x720 <__vector_11+0x2b0>
     718:	81 e2       	ldi	r24, 0x21	; 33
     71a:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     71e:	16 c0       	rjmp	.+44     	; 0x74c <__vector_11+0x2dc>
     720:	89 e1       	ldi	r24, 0x19	; 25
     722:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	02 c0       	rjmp	.+4      	; 0x730 <__vector_11+0x2c0>
     72c:	88 0f       	add	r24, r24
     72e:	99 1f       	adc	r25, r25
     730:	4a 95       	dec	r20
     732:	e2 f7       	brpl	.-8      	; 0x72c <__vector_11+0x2bc>
     734:	ea ee       	ldi	r30, 0xEA	; 234
     736:	f0 e0       	ldi	r31, 0x00	; 0
     738:	80 83       	st	Z, r24
     73a:	10 82       	st	Z, r1
     73c:	07 c0       	rjmp	.+14     	; 0x74c <__vector_11+0x2dc>
     73e:	81 e2       	ldi	r24, 0x21	; 33
     740:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     744:	03 c0       	rjmp	.+6      	; 0x74c <__vector_11+0x2dc>
     746:	6c 93       	st	X, r22
     748:	21 11       	cpse	r18, r1
     74a:	f7 ce       	rjmp	.-530    	; 0x53a <__vector_11+0xca>
     74c:	ff 91       	pop	r31
     74e:	ef 91       	pop	r30
     750:	df 91       	pop	r29
     752:	cf 91       	pop	r28
     754:	bf 91       	pop	r27
     756:	af 91       	pop	r26
     758:	9f 91       	pop	r25
     75a:	8f 91       	pop	r24
     75c:	7f 91       	pop	r23
     75e:	6f 91       	pop	r22
     760:	5f 91       	pop	r21
     762:	4f 91       	pop	r20
     764:	3f 91       	pop	r19
     766:	2f 91       	pop	r18
     768:	1f 91       	pop	r17
     76a:	0f 91       	pop	r16
     76c:	0f 90       	pop	r0
     76e:	0f be       	out	0x3f, r0	; 63
     770:	0f 90       	pop	r0
     772:	1f 90       	pop	r1
     774:	18 95       	reti

00000776 <setMainState>:
 float *current_position;

 
 void setMainState(int state)
 {
	 current_mainstate = state;
     776:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <current_mainstate>
     77a:	08 95       	ret

0000077c <getMainState>:
 }

 enum MAINSTATE getMainState()
 {
	 return current_mainstate;
 }
     77c:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <current_mainstate>
     780:	08 95       	ret

00000782 <setPuckState>:

 void setPuckState(int state)
 {
	 current_puckstate = state;
     782:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <current_puckstate>
     786:	08 95       	ret

00000788 <getPuckState>:
 }

 enum PUCKSTATE getPuckState()
 {
	 return current_puckstate;
 }
     788:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <current_puckstate>
     78c:	08 95       	ret

0000078e <setPosition>:

 void setPosition(float *pos)
 {
	 current_position = pos; 
     78e:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <current_position+0x1>
     792:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <current_position>
     796:	08 95       	ret

00000798 <getPosition>:
 }

 float *getPosition()
 {
	 return current_position;
     798:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <current_position>
     79c:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <current_position+0x1>
     7a0:	08 95       	ret

000007a2 <set_power>:

void goStraight(float velocity, int direction)
{   
    left_on(velocity,direction);
	right_on(velocity,direction);
}
     7a2:	60 93 61 01 	sts	0x0161, r22	; 0x800161 <power>
     7a6:	70 93 62 01 	sts	0x0162, r23	; 0x800162 <power+0x1>
     7aa:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <power+0x2>
     7ae:	90 93 64 01 	sts	0x0164, r25	; 0x800164 <power+0x3>
     7b2:	08 95       	ret

000007b4 <diff>:
     7b4:	cf 92       	push	r12
     7b6:	df 92       	push	r13
     7b8:	ef 92       	push	r14
     7ba:	ff 92       	push	r15
     7bc:	6b 01       	movw	r12, r22
     7be:	7c 01       	movw	r14, r24
     7c0:	0e 94 cc 03 	call	0x798	; 0x798 <getPosition>
     7c4:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <location+0x1>
     7c8:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <location>
     7cc:	fc 01       	movw	r30, r24
     7ce:	20 85       	ldd	r18, Z+8	; 0x08
     7d0:	31 85       	ldd	r19, Z+9	; 0x09
     7d2:	42 85       	ldd	r20, Z+10	; 0x0a
     7d4:	53 85       	ldd	r21, Z+11	; 0x0b
     7d6:	c7 01       	movw	r24, r14
     7d8:	b6 01       	movw	r22, r12
     7da:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     7de:	6b 01       	movw	r12, r22
     7e0:	7c 01       	movw	r14, r24
     7e2:	26 c0       	rjmp	.+76     	; 0x830 <diff+0x7c>
     7e4:	20 e0       	ldi	r18, 0x00	; 0
     7e6:	30 e0       	ldi	r19, 0x00	; 0
     7e8:	a9 01       	movw	r20, r18
     7ea:	c7 01       	movw	r24, r14
     7ec:	b6 01       	movw	r22, r12
     7ee:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     7f2:	18 16       	cp	r1, r24
     7f4:	7c f4       	brge	.+30     	; 0x814 <diff+0x60>
     7f6:	29 ef       	ldi	r18, 0xF9	; 249
     7f8:	3f e0       	ldi	r19, 0x0F	; 15
     7fa:	49 ec       	ldi	r20, 0xC9	; 201
     7fc:	50 e4       	ldi	r21, 0x40	; 64
     7fe:	c7 01       	movw	r24, r14
     800:	b6 01       	movw	r22, r12
     802:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     806:	46 2f       	mov	r20, r22
     808:	57 2f       	mov	r21, r23
     80a:	68 2f       	mov	r22, r24
     80c:	79 2f       	mov	r23, r25
     80e:	6a 01       	movw	r12, r20
     810:	7b 01       	movw	r14, r22
     812:	0e c0       	rjmp	.+28     	; 0x830 <diff+0x7c>
     814:	29 ef       	ldi	r18, 0xF9	; 249
     816:	3f e0       	ldi	r19, 0x0F	; 15
     818:	49 ec       	ldi	r20, 0xC9	; 201
     81a:	50 e4       	ldi	r21, 0x40	; 64
     81c:	c7 01       	movw	r24, r14
     81e:	b6 01       	movw	r22, r12
     820:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     824:	46 2f       	mov	r20, r22
     826:	57 2f       	mov	r21, r23
     828:	68 2f       	mov	r22, r24
     82a:	79 2f       	mov	r23, r25
     82c:	6a 01       	movw	r12, r20
     82e:	7b 01       	movw	r14, r22
     830:	29 ef       	ldi	r18, 0xF9	; 249
     832:	3f e0       	ldi	r19, 0x0F	; 15
     834:	49 e4       	ldi	r20, 0x49	; 73
     836:	50 e4       	ldi	r21, 0x40	; 64
     838:	c7 01       	movw	r24, r14
     83a:	b6 01       	movw	r22, r12
     83c:	9f 77       	andi	r25, 0x7F	; 127
     83e:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     842:	18 16       	cp	r1, r24
     844:	7c f2       	brlt	.-98     	; 0x7e4 <diff+0x30>
     846:	c0 92 59 01 	sts	0x0159, r12	; 0x800159 <delta_angle>
     84a:	d0 92 5a 01 	sts	0x015A, r13	; 0x80015a <delta_angle+0x1>
     84e:	e0 92 5b 01 	sts	0x015B, r14	; 0x80015b <delta_angle+0x2>
     852:	f0 92 5c 01 	sts	0x015C, r15	; 0x80015c <delta_angle+0x3>
     856:	ff 90       	pop	r15
     858:	ef 90       	pop	r14
     85a:	df 90       	pop	r13
     85c:	cf 90       	pop	r12
     85e:	08 95       	ret

00000860 <left_on>:
     860:	cf 92       	push	r12
     862:	df 92       	push	r13
     864:	ef 92       	push	r14
     866:	ff 92       	push	r15
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	6b 01       	movw	r12, r22
     86e:	7c 01       	movw	r14, r24
     870:	ea 01       	movw	r28, r20
     872:	20 e0       	ldi	r18, 0x00	; 0
     874:	30 e0       	ldi	r19, 0x00	; 0
     876:	40 e8       	ldi	r20, 0x80	; 128
     878:	5f e3       	ldi	r21, 0x3F	; 63
     87a:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     87e:	18 16       	cp	r1, r24
     880:	44 f4       	brge	.+16     	; 0x892 <left_on+0x32>
     882:	0f 2e       	mov	r0, r31
     884:	c1 2c       	mov	r12, r1
     886:	d1 2c       	mov	r13, r1
     888:	f0 e8       	ldi	r31, 0x80	; 128
     88a:	ef 2e       	mov	r14, r31
     88c:	ff e3       	ldi	r31, 0x3F	; 63
     88e:	ff 2e       	mov	r15, r31
     890:	f0 2d       	mov	r31, r0
     892:	21 97       	sbiw	r28, 0x01	; 1
     894:	19 f4       	brne	.+6      	; 0x89c <left_on+0x3c>
     896:	28 9a       	sbi	0x05, 0	; 5
     898:	29 98       	cbi	0x05, 1	; 5
     89a:	02 c0       	rjmp	.+4      	; 0x8a0 <left_on+0x40>
     89c:	28 98       	cbi	0x05, 0	; 5
     89e:	29 9a       	sbi	0x05, 1	; 5
     8a0:	80 e0       	ldi	r24, 0x00	; 0
     8a2:	94 e0       	ldi	r25, 0x04	; 4
     8a4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     8a8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	40 e8       	ldi	r20, 0x80	; 128
     8b2:	54 e4       	ldi	r21, 0x44	; 68
     8b4:	c7 01       	movw	r24, r14
     8b6:	b6 01       	movw	r22, r12
     8b8:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
     8bc:	0e 94 64 14 	call	0x28c8	; 0x28c8 <__fixsfsi>
     8c0:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     8c4:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     8c8:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <L_on>
     8cc:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <L_on+0x1>
     8d0:	89 2b       	or	r24, r25
     8d2:	31 f5       	brne	.+76     	; 0x920 <left_on+0xc0>
     8d4:	e1 e8       	ldi	r30, 0x81	; 129
     8d6:	f0 e0       	ldi	r31, 0x00	; 0
     8d8:	80 81       	ld	r24, Z
     8da:	8b 7f       	andi	r24, 0xFB	; 251
     8dc:	80 83       	st	Z, r24
     8de:	80 81       	ld	r24, Z
     8e0:	82 60       	ori	r24, 0x02	; 2
     8e2:	80 83       	st	Z, r24
     8e4:	80 81       	ld	r24, Z
     8e6:	8e 7f       	andi	r24, 0xFE	; 254
     8e8:	80 83       	st	Z, r24
     8ea:	80 81       	ld	r24, Z
     8ec:	80 61       	ori	r24, 0x10	; 16
     8ee:	80 83       	st	Z, r24
     8f0:	80 81       	ld	r24, Z
     8f2:	88 60       	ori	r24, 0x08	; 8
     8f4:	80 83       	st	Z, r24
     8f6:	e0 e8       	ldi	r30, 0x80	; 128
     8f8:	f0 e0       	ldi	r31, 0x00	; 0
     8fa:	80 81       	ld	r24, Z
     8fc:	82 60       	ori	r24, 0x02	; 2
     8fe:	80 83       	st	Z, r24
     900:	80 81       	ld	r24, Z
     902:	81 60       	ori	r24, 0x01	; 1
     904:	80 83       	st	Z, r24
     906:	80 81       	ld	r24, Z
     908:	80 62       	ori	r24, 0x20	; 32
     90a:	80 83       	st	Z, r24
     90c:	80 81       	ld	r24, Z
     90e:	8f 7e       	andi	r24, 0xEF	; 239
     910:	80 83       	st	Z, r24
     912:	26 9a       	sbi	0x04, 6	; 4
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <L_on+0x1>
     91c:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <L_on>
     920:	df 91       	pop	r29
     922:	cf 91       	pop	r28
     924:	ff 90       	pop	r15
     926:	ef 90       	pop	r14
     928:	df 90       	pop	r13
     92a:	cf 90       	pop	r12
     92c:	08 95       	ret

0000092e <right_on>:
     92e:	cf 92       	push	r12
     930:	df 92       	push	r13
     932:	ef 92       	push	r14
     934:	ff 92       	push	r15
     936:	cf 93       	push	r28
     938:	df 93       	push	r29
     93a:	6b 01       	movw	r12, r22
     93c:	7c 01       	movw	r14, r24
     93e:	ea 01       	movw	r28, r20
     940:	20 e0       	ldi	r18, 0x00	; 0
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e8       	ldi	r20, 0x80	; 128
     946:	5f e3       	ldi	r21, 0x3F	; 63
     948:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     94c:	18 16       	cp	r1, r24
     94e:	44 f4       	brge	.+16     	; 0x960 <right_on+0x32>
     950:	0f 2e       	mov	r0, r31
     952:	c1 2c       	mov	r12, r1
     954:	d1 2c       	mov	r13, r1
     956:	f0 e8       	ldi	r31, 0x80	; 128
     958:	ef 2e       	mov	r14, r31
     95a:	ff e3       	ldi	r31, 0x3F	; 63
     95c:	ff 2e       	mov	r15, r31
     95e:	f0 2d       	mov	r31, r0
     960:	21 97       	sbiw	r28, 0x01	; 1
     962:	19 f4       	brne	.+6      	; 0x96a <right_on+0x3c>
     964:	2a 9a       	sbi	0x05, 2	; 5
     966:	2b 98       	cbi	0x05, 3	; 5
     968:	02 c0       	rjmp	.+4      	; 0x96e <right_on+0x40>
     96a:	2a 98       	cbi	0x05, 2	; 5
     96c:	2b 9a       	sbi	0x05, 3	; 5
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	94 e0       	ldi	r25, 0x04	; 4
     972:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__TEXT_REGION_LENGTH__+0x7e0097>
     976:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__TEXT_REGION_LENGTH__+0x7e0096>
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	40 e8       	ldi	r20, 0x80	; 128
     980:	54 e4       	ldi	r21, 0x44	; 68
     982:	c7 01       	movw	r24, r14
     984:	b6 01       	movw	r22, r12
     986:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
     98a:	0e 94 64 14 	call	0x28c8	; 0x28c8 <__fixsfsi>
     98e:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     992:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     996:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <R_on>
     99a:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <R_on+0x1>
     99e:	89 2b       	or	r24, r25
     9a0:	31 f5       	brne	.+76     	; 0x9ee <right_on+0xc0>
     9a2:	e1 e9       	ldi	r30, 0x91	; 145
     9a4:	f0 e0       	ldi	r31, 0x00	; 0
     9a6:	80 81       	ld	r24, Z
     9a8:	8b 7f       	andi	r24, 0xFB	; 251
     9aa:	80 83       	st	Z, r24
     9ac:	80 81       	ld	r24, Z
     9ae:	82 60       	ori	r24, 0x02	; 2
     9b0:	80 83       	st	Z, r24
     9b2:	80 81       	ld	r24, Z
     9b4:	8e 7f       	andi	r24, 0xFE	; 254
     9b6:	80 83       	st	Z, r24
     9b8:	80 81       	ld	r24, Z
     9ba:	80 61       	ori	r24, 0x10	; 16
     9bc:	80 83       	st	Z, r24
     9be:	80 81       	ld	r24, Z
     9c0:	88 60       	ori	r24, 0x08	; 8
     9c2:	80 83       	st	Z, r24
     9c4:	e0 e9       	ldi	r30, 0x90	; 144
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	80 81       	ld	r24, Z
     9ca:	82 60       	ori	r24, 0x02	; 2
     9cc:	80 83       	st	Z, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	8e 7f       	andi	r24, 0xFE	; 254
     9d2:	80 83       	st	Z, r24
     9d4:	80 81       	ld	r24, Z
     9d6:	80 68       	ori	r24, 0x80	; 128
     9d8:	80 83       	st	Z, r24
     9da:	80 81       	ld	r24, Z
     9dc:	8f 7b       	andi	r24, 0xBF	; 191
     9de:	80 83       	st	Z, r24
     9e0:	3e 9a       	sbi	0x07, 6	; 7
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <R_on+0x1>
     9ea:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <R_on>
     9ee:	df 91       	pop	r29
     9f0:	cf 91       	pop	r28
     9f2:	ff 90       	pop	r15
     9f4:	ef 90       	pop	r14
     9f6:	df 90       	pop	r13
     9f8:	cf 90       	pop	r12
     9fa:	08 95       	ret

000009fc <search>:
     9fc:	0e 94 cc 03 	call	0x798	; 0x798 <getPosition>
     a00:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <location+0x1>
     a04:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <location>
     a08:	41 e0       	ldi	r20, 0x01	; 1
     a0a:	50 e0       	ldi	r21, 0x00	; 0
     a0c:	6d ec       	ldi	r22, 0xCD	; 205
     a0e:	7c ec       	ldi	r23, 0xCC	; 204
     a10:	8c e4       	ldi	r24, 0x4C	; 76
     a12:	9e e3       	ldi	r25, 0x3E	; 62
     a14:	0e 94 97 04 	call	0x92e	; 0x92e <right_on>
     a18:	40 e0       	ldi	r20, 0x00	; 0
     a1a:	50 e0       	ldi	r21, 0x00	; 0
     a1c:	6d ec       	ldi	r22, 0xCD	; 205
     a1e:	7c ec       	ldi	r23, 0xCC	; 204
     a20:	8c e4       	ldi	r24, 0x4C	; 76
     a22:	9e e3       	ldi	r25, 0x3E	; 62
     a24:	0e 94 30 04 	call	0x860	; 0x860 <left_on>
     a28:	08 95       	ret

00000a2a <move>:

void move(int x, int y){
     a2a:	4f 92       	push	r4
     a2c:	5f 92       	push	r5
     a2e:	6f 92       	push	r6
     a30:	7f 92       	push	r7
     a32:	8f 92       	push	r8
     a34:	9f 92       	push	r9
     a36:	af 92       	push	r10
     a38:	bf 92       	push	r11
     a3a:	cf 92       	push	r12
     a3c:	df 92       	push	r13
     a3e:	ef 92       	push	r14
     a40:	ff 92       	push	r15
     a42:	0f 93       	push	r16
     a44:	1f 93       	push	r17
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	7c 01       	movw	r14, r24
     a4c:	8b 01       	movw	r16, r22
    location = getPosition();
     a4e:	0e 94 cc 03 	call	0x798	; 0x798 <getPosition>
     a52:	ec 01       	movw	r28, r24
     a54:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <location+0x1>
     a58:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <location>
    float target_angle = atan2f(y - location[1], x - location[0]);
     a5c:	b7 01       	movw	r22, r14
     a5e:	ff 0c       	add	r15, r15
     a60:	88 0b       	sbc	r24, r24
     a62:	99 0b       	sbc	r25, r25
     a64:	0e 94 9c 14 	call	0x2938	; 0x2938 <__floatsisf>
     a68:	28 81       	ld	r18, Y
     a6a:	39 81       	ldd	r19, Y+1	; 0x01
     a6c:	4a 81       	ldd	r20, Y+2	; 0x02
     a6e:	5b 81       	ldd	r21, Y+3	; 0x03
     a70:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     a74:	6b 01       	movw	r12, r22
     a76:	7c 01       	movw	r14, r24
     a78:	b8 01       	movw	r22, r16
     a7a:	11 0f       	add	r17, r17
     a7c:	88 0b       	sbc	r24, r24
     a7e:	99 0b       	sbc	r25, r25
     a80:	0e 94 9c 14 	call	0x2938	; 0x2938 <__floatsisf>
     a84:	2c 81       	ldd	r18, Y+4	; 0x04
     a86:	3d 81       	ldd	r19, Y+5	; 0x05
     a88:	4e 81       	ldd	r20, Y+6	; 0x06
     a8a:	5f 81       	ldd	r21, Y+7	; 0x07
     a8c:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     a90:	a7 01       	movw	r20, r14
     a92:	96 01       	movw	r18, r12
     a94:	0e 94 89 13 	call	0x2712	; 0x2712 <atan2>

    //change target angle to positive 0-2pi
    //if(target_angle < 0) {target_angle = target_angle + 2 * pi;}
    diff(target_angle); //update delta angle
     a98:	0e 94 da 03 	call	0x7b4	; 0x7b4 <diff>

	float P_move;
	static float I_move;
	float D_move;
	//drive PID
	P_move = delta_angle * Kp_move; // Proportional
     a9c:	c0 90 59 01 	lds	r12, 0x0159	; 0x800159 <delta_angle>
     aa0:	d0 90 5a 01 	lds	r13, 0x015A	; 0x80015a <delta_angle+0x1>
     aa4:	e0 90 5b 01 	lds	r14, 0x015B	; 0x80015b <delta_angle+0x2>
     aa8:	f0 90 5c 01 	lds	r15, 0x015C	; 0x80015c <delta_angle+0x3>
	I_move = I_move + delta_angle * Ki_move; // Integral
     aac:	20 e0       	ldi	r18, 0x00	; 0
     aae:	30 e0       	ldi	r19, 0x00	; 0
     ab0:	a9 01       	movw	r20, r18
     ab2:	c7 01       	movw	r24, r14
     ab4:	b6 01       	movw	r22, r12
     ab6:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
     aba:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <I_move.1862>
     abe:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <I_move.1862+0x1>
     ac2:	40 91 49 01 	lds	r20, 0x0149	; 0x800149 <I_move.1862+0x2>
     ac6:	50 91 4a 01 	lds	r21, 0x014A	; 0x80014a <I_move.1862+0x3>
     aca:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     ace:	4b 01       	movw	r8, r22
     ad0:	5c 01       	movw	r10, r24
     ad2:	60 93 47 01 	sts	0x0147, r22	; 0x800147 <I_move.1862>
     ad6:	70 93 48 01 	sts	0x0148, r23	; 0x800148 <I_move.1862+0x1>
     ada:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <I_move.1862+0x2>
     ade:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <I_move.1862+0x3>
	D_move = (delta_angle - delta_angle_prev) * Kd_move; // Derivative
     ae2:	20 91 5d 01 	lds	r18, 0x015D	; 0x80015d <delta_angle_prev>
     ae6:	30 91 5e 01 	lds	r19, 0x015E	; 0x80015e <delta_angle_prev+0x1>
     aea:	40 91 5f 01 	lds	r20, 0x015F	; 0x80015f <delta_angle_prev+0x2>
     aee:	50 91 60 01 	lds	r21, 0x0160	; 0x800160 <delta_angle_prev+0x3>
     af2:	c7 01       	movw	r24, r14
     af4:	b6 01       	movw	r22, r12
     af6:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     afa:	20 e0       	ldi	r18, 0x00	; 0
     afc:	30 e0       	ldi	r19, 0x00	; 0
     afe:	a9 01       	movw	r20, r18
     b00:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
     b04:	2b 01       	movw	r4, r22
     b06:	3c 01       	movw	r6, r24
	delta_angle_prev = delta_angle;
     b08:	c0 92 5d 01 	sts	0x015D, r12	; 0x80015d <delta_angle_prev>
     b0c:	d0 92 5e 01 	sts	0x015E, r13	; 0x80015e <delta_angle_prev+0x1>
     b10:	e0 92 5f 01 	sts	0x015F, r14	; 0x80015f <delta_angle_prev+0x2>
     b14:	f0 92 60 01 	sts	0x0160, r15	; 0x800160 <delta_angle_prev+0x3>

	float P_move;
	static float I_move;
	float D_move;
	//drive PID
	P_move = delta_angle * Kp_move; // Proportional
     b18:	2d ec       	ldi	r18, 0xCD	; 205
     b1a:	3c ec       	ldi	r19, 0xCC	; 204
     b1c:	4c ec       	ldi	r20, 0xCC	; 204
     b1e:	5e e3       	ldi	r21, 0x3E	; 62
     b20:	c7 01       	movw	r24, r14
     b22:	b6 01       	movw	r22, r12
     b24:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
	I_move = I_move + delta_angle * Ki_move; // Integral
	D_move = (delta_angle - delta_angle_prev) * Kd_move; // Derivative
	delta_angle_prev = delta_angle;
	
	float PID_move = fabs(P_move+I_move+D_move);
     b28:	a5 01       	movw	r20, r10
     b2a:	94 01       	movw	r18, r8
     b2c:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     b30:	a3 01       	movw	r20, r6
     b32:	92 01       	movw	r18, r4
     b34:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     b38:	6b 01       	movw	r12, r22
     b3a:	7c 01       	movw	r14, r24
     b3c:	e8 94       	clt
     b3e:	f7 f8       	bld	r15, 7
	//	      right_on(drive_PID, forwards);}
	//    } 
	//else {
	    float left_power;
	    float right_power;
	    if (pk_angle > 0)
     b40:	80 90 55 01 	lds	r8, 0x0155	; 0x800155 <pk_angle>
     b44:	90 90 56 01 	lds	r9, 0x0156	; 0x800156 <pk_angle+0x1>
     b48:	a0 90 57 01 	lds	r10, 0x0157	; 0x800157 <pk_angle+0x2>
     b4c:	b0 90 58 01 	lds	r11, 0x0158	; 0x800158 <pk_angle+0x3>
     b50:	20 e0       	ldi	r18, 0x00	; 0
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	a9 01       	movw	r20, r18
     b56:	c5 01       	movw	r24, r10
     b58:	b4 01       	movw	r22, r8
     b5a:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     b5e:	18 16       	cp	r1, r24
     b60:	ec f4       	brge	.+58     	; 0xb9c <__stack+0x9d>
	    {left_power = power + PID_move;
     b62:	80 90 61 01 	lds	r8, 0x0161	; 0x800161 <power>
     b66:	90 90 62 01 	lds	r9, 0x0162	; 0x800162 <power+0x1>
     b6a:	a0 90 63 01 	lds	r10, 0x0163	; 0x800163 <power+0x2>
     b6e:	b0 90 64 01 	lds	r11, 0x0164	; 0x800164 <power+0x3>
     b72:	a7 01       	movw	r20, r14
     b74:	96 01       	movw	r18, r12
     b76:	c5 01       	movw	r24, r10
     b78:	b4 01       	movw	r22, r8
     b7a:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     b7e:	06 2f       	mov	r16, r22
     b80:	17 2f       	mov	r17, r23
     b82:	d8 2f       	mov	r29, r24
     b84:	c9 2f       	mov	r28, r25
	    right_power = power - PID_move;}// !careful direction
     b86:	a7 01       	movw	r20, r14
     b88:	96 01       	movw	r18, r12
     b8a:	c5 01       	movw	r24, r10
     b8c:	b4 01       	movw	r22, r8
     b8e:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     b92:	d6 2e       	mov	r13, r22
     b94:	c7 2e       	mov	r12, r23
     b96:	f8 2e       	mov	r15, r24
     b98:	e9 2e       	mov	r14, r25
     b9a:	3a c0       	rjmp	.+116    	; 0xc10 <__stack+0x111>
	    else if (pk_angle < 0) {
     b9c:	20 e0       	ldi	r18, 0x00	; 0
     b9e:	30 e0       	ldi	r19, 0x00	; 0
     ba0:	a9 01       	movw	r20, r18
     ba2:	c5 01       	movw	r24, r10
     ba4:	b4 01       	movw	r22, r8
     ba6:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
     baa:	88 23       	and	r24, r24
     bac:	ec f4       	brge	.+58     	; 0xbe8 <__stack+0xe9>
		    left_power = power - PID_move;
     bae:	80 90 61 01 	lds	r8, 0x0161	; 0x800161 <power>
     bb2:	90 90 62 01 	lds	r9, 0x0162	; 0x800162 <power+0x1>
     bb6:	a0 90 63 01 	lds	r10, 0x0163	; 0x800163 <power+0x2>
     bba:	b0 90 64 01 	lds	r11, 0x0164	; 0x800164 <power+0x3>
     bbe:	a7 01       	movw	r20, r14
     bc0:	96 01       	movw	r18, r12
     bc2:	c5 01       	movw	r24, r10
     bc4:	b4 01       	movw	r22, r8
     bc6:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     bca:	06 2f       	mov	r16, r22
     bcc:	17 2f       	mov	r17, r23
     bce:	d8 2f       	mov	r29, r24
     bd0:	c9 2f       	mov	r28, r25
		    right_power = power + PID_move;
     bd2:	a5 01       	movw	r20, r10
     bd4:	94 01       	movw	r18, r8
     bd6:	c7 01       	movw	r24, r14
     bd8:	b6 01       	movw	r22, r12
     bda:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     bde:	d6 2e       	mov	r13, r22
     be0:	c7 2e       	mov	r12, r23
     be2:	f8 2e       	mov	r15, r24
     be4:	e9 2e       	mov	r14, r25
     be6:	14 c0       	rjmp	.+40     	; 0xc10 <__stack+0x111>
	    }
		else {left_power = power + PID_move;
     be8:	20 91 61 01 	lds	r18, 0x0161	; 0x800161 <power>
     bec:	30 91 62 01 	lds	r19, 0x0162	; 0x800162 <power+0x1>
     bf0:	40 91 63 01 	lds	r20, 0x0163	; 0x800163 <power+0x2>
     bf4:	50 91 64 01 	lds	r21, 0x0164	; 0x800164 <power+0x3>
     bf8:	c7 01       	movw	r24, r14
     bfa:	b6 01       	movw	r22, r12
     bfc:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     c00:	06 2f       	mov	r16, r22
     c02:	17 2f       	mov	r17, r23
     c04:	d8 2f       	mov	r29, r24
     c06:	c9 2f       	mov	r28, r25
			right_power = power + PID_move;}
     c08:	d6 2e       	mov	r13, r22
     c0a:	c7 2e       	mov	r12, r23
     c0c:	f8 2e       	mov	r15, r24
     c0e:	e9 2e       	mov	r14, r25

	    if(left_power > 1) {left_power = 1;}
     c10:	20 e0       	ldi	r18, 0x00	; 0
     c12:	30 e0       	ldi	r19, 0x00	; 0
     c14:	40 e8       	ldi	r20, 0x80	; 128
     c16:	5f e3       	ldi	r21, 0x3F	; 63
     c18:	60 2f       	mov	r22, r16
     c1a:	71 2f       	mov	r23, r17
     c1c:	8d 2f       	mov	r24, r29
     c1e:	9c 2f       	mov	r25, r28
     c20:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     c24:	18 16       	cp	r1, r24
     c26:	84 f0       	brlt	.+32     	; 0xc48 <__stack+0x149>
	    if(left_power < 0) {left_power = 0;}
     c28:	20 e0       	ldi	r18, 0x00	; 0
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	a9 01       	movw	r20, r18
     c2e:	60 2f       	mov	r22, r16
     c30:	71 2f       	mov	r23, r17
     c32:	8d 2f       	mov	r24, r29
     c34:	9c 2f       	mov	r25, r28
     c36:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
     c3a:	88 23       	and	r24, r24
     c3c:	4c f4       	brge	.+18     	; 0xc50 <__stack+0x151>
     c3e:	00 e0       	ldi	r16, 0x00	; 0
     c40:	10 e0       	ldi	r17, 0x00	; 0
     c42:	d0 e0       	ldi	r29, 0x00	; 0
     c44:	c0 e0       	ldi	r28, 0x00	; 0
     c46:	04 c0       	rjmp	.+8      	; 0xc50 <__stack+0x151>
		    right_power = power + PID_move;
	    }
		else {left_power = power + PID_move;
			right_power = power + PID_move;}

	    if(left_power > 1) {left_power = 1;}
     c48:	00 e0       	ldi	r16, 0x00	; 0
     c4a:	10 e0       	ldi	r17, 0x00	; 0
     c4c:	d0 e8       	ldi	r29, 0x80	; 128
     c4e:	cf e3       	ldi	r28, 0x3F	; 63
	    if(left_power < 0) {left_power = 0;}
	    if(right_power > 1) {right_power = 1;}
     c50:	20 e0       	ldi	r18, 0x00	; 0
     c52:	30 e0       	ldi	r19, 0x00	; 0
     c54:	40 e8       	ldi	r20, 0x80	; 128
     c56:	5f e3       	ldi	r21, 0x3F	; 63
     c58:	6d 2d       	mov	r22, r13
     c5a:	7c 2d       	mov	r23, r12
     c5c:	8f 2d       	mov	r24, r15
     c5e:	9e 2d       	mov	r25, r14
     c60:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     c64:	18 16       	cp	r1, r24
     c66:	84 f0       	brlt	.+32     	; 0xc88 <__stack+0x189>
	    if(right_power < 0) {right_power = 0;}
     c68:	20 e0       	ldi	r18, 0x00	; 0
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	a9 01       	movw	r20, r18
     c6e:	6d 2d       	mov	r22, r13
     c70:	7c 2d       	mov	r23, r12
     c72:	8f 2d       	mov	r24, r15
     c74:	9e 2d       	mov	r25, r14
     c76:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
     c7a:	88 23       	and	r24, r24
     c7c:	74 f4       	brge	.+28     	; 0xc9a <__stack+0x19b>
     c7e:	d1 2c       	mov	r13, r1
     c80:	c1 2c       	mov	r12, r1
     c82:	f1 2c       	mov	r15, r1
     c84:	e1 2c       	mov	r14, r1
     c86:	09 c0       	rjmp	.+18     	; 0xc9a <__stack+0x19b>
		else {left_power = power + PID_move;
			right_power = power + PID_move;}

	    if(left_power > 1) {left_power = 1;}
	    if(left_power < 0) {left_power = 0;}
	    if(right_power > 1) {right_power = 1;}
     c88:	d1 2c       	mov	r13, r1
     c8a:	c1 2c       	mov	r12, r1
     c8c:	68 94       	set
     c8e:	ff 24       	eor	r15, r15
     c90:	f7 f8       	bld	r15, 7
     c92:	0f 2e       	mov	r0, r31
     c94:	ff e3       	ldi	r31, 0x3F	; 63
     c96:	ef 2e       	mov	r14, r31
     c98:	f0 2d       	mov	r31, r0
	    if(right_power < 0) {right_power = 0;}

	    left_on(left_power, forwards);
     c9a:	41 e0       	ldi	r20, 0x01	; 1
     c9c:	50 e0       	ldi	r21, 0x00	; 0
     c9e:	60 2f       	mov	r22, r16
     ca0:	71 2f       	mov	r23, r17
     ca2:	8d 2f       	mov	r24, r29
     ca4:	9c 2f       	mov	r25, r28
     ca6:	0e 94 30 04 	call	0x860	; 0x860 <left_on>
	    right_on(right_power, forwards);
     caa:	41 e0       	ldi	r20, 0x01	; 1
     cac:	50 e0       	ldi	r21, 0x00	; 0
     cae:	6d 2d       	mov	r22, r13
     cb0:	7c 2d       	mov	r23, r12
     cb2:	8f 2d       	mov	r24, r15
     cb4:	9e 2d       	mov	r25, r14
     cb6:	0e 94 97 04 	call	0x92e	; 0x92e <right_on>
    //}

    //if(fabs(location[0] - target_x) < 5 && fabs(location[1] - target_y) < 5) 
	//{stop();}
}
     cba:	df 91       	pop	r29
     cbc:	cf 91       	pop	r28
     cbe:	1f 91       	pop	r17
     cc0:	0f 91       	pop	r16
     cc2:	ff 90       	pop	r15
     cc4:	ef 90       	pop	r14
     cc6:	df 90       	pop	r13
     cc8:	cf 90       	pop	r12
     cca:	bf 90       	pop	r11
     ccc:	af 90       	pop	r10
     cce:	9f 90       	pop	r9
     cd0:	8f 90       	pop	r8
     cd2:	7f 90       	pop	r7
     cd4:	6f 90       	pop	r6
     cd6:	5f 90       	pop	r5
     cd8:	4f 90       	pop	r4
     cda:	08 95       	ret

00000cdc <curve>:

void curve(float turn_target) // angle = puck_angle
{
     cdc:	4f 92       	push	r4
     cde:	5f 92       	push	r5
     ce0:	6f 92       	push	r6
     ce2:	7f 92       	push	r7
     ce4:	8f 92       	push	r8
     ce6:	9f 92       	push	r9
     ce8:	af 92       	push	r10
     cea:	bf 92       	push	r11
     cec:	cf 92       	push	r12
     cee:	df 92       	push	r13
     cf0:	ef 92       	push	r14
     cf2:	ff 92       	push	r15
     cf4:	0f 93       	push	r16
     cf6:	1f 93       	push	r17
     cf8:	cf 93       	push	r28
     cfa:	df 93       	push	r29
     cfc:	6b 01       	movw	r12, r22
     cfe:	7c 01       	movw	r14, r24
pk_angle = turn_target;
     d00:	60 93 55 01 	sts	0x0155, r22	; 0x800155 <pk_angle>
     d04:	70 93 56 01 	sts	0x0156, r23	; 0x800156 <pk_angle+0x1>
     d08:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <pk_angle+0x2>
     d0c:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <pk_angle+0x3>
float P_curve = 0;
static float I_curve = 0;
float D_curve = 0;
//drive PID
P_curve = pk_angle * Kp_curve; // Proportional
I_curve = I_curve + pk_angle * Ki_curve; // Integral
     d10:	20 e0       	ldi	r18, 0x00	; 0
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	a9 01       	movw	r20, r18
     d16:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
     d1a:	20 91 43 01 	lds	r18, 0x0143	; 0x800143 <I_curve.1871>
     d1e:	30 91 44 01 	lds	r19, 0x0144	; 0x800144 <I_curve.1871+0x1>
     d22:	40 91 45 01 	lds	r20, 0x0145	; 0x800145 <I_curve.1871+0x2>
     d26:	50 91 46 01 	lds	r21, 0x0146	; 0x800146 <I_curve.1871+0x3>
     d2a:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     d2e:	4b 01       	movw	r8, r22
     d30:	5c 01       	movw	r10, r24
     d32:	60 93 43 01 	sts	0x0143, r22	; 0x800143 <I_curve.1871>
     d36:	70 93 44 01 	sts	0x0144, r23	; 0x800144 <I_curve.1871+0x1>
     d3a:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <I_curve.1871+0x2>
     d3e:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <I_curve.1871+0x3>
D_curve = (pk_angle - pk_angle_prev) * Kd_curve; // Derivative
     d42:	20 91 51 01 	lds	r18, 0x0151	; 0x800151 <pk_angle_prev>
     d46:	30 91 52 01 	lds	r19, 0x0152	; 0x800152 <pk_angle_prev+0x1>
     d4a:	40 91 53 01 	lds	r20, 0x0153	; 0x800153 <pk_angle_prev+0x2>
     d4e:	50 91 54 01 	lds	r21, 0x0154	; 0x800154 <pk_angle_prev+0x3>
     d52:	c7 01       	movw	r24, r14
     d54:	b6 01       	movw	r22, r12
     d56:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     d5a:	20 e0       	ldi	r18, 0x00	; 0
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	a9 01       	movw	r20, r18
     d60:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
     d64:	2b 01       	movw	r4, r22
     d66:	3c 01       	movw	r6, r24
pk_angle_prev = pk_angle;
     d68:	c0 92 51 01 	sts	0x0151, r12	; 0x800151 <pk_angle_prev>
     d6c:	d0 92 52 01 	sts	0x0152, r13	; 0x800152 <pk_angle_prev+0x1>
     d70:	e0 92 53 01 	sts	0x0153, r14	; 0x800153 <pk_angle_prev+0x2>
     d74:	f0 92 54 01 	sts	0x0154, r15	; 0x800154 <pk_angle_prev+0x3>

float P_curve = 0;
static float I_curve = 0;
float D_curve = 0;
//drive PID
P_curve = pk_angle * Kp_curve; // Proportional
     d78:	2a e9       	ldi	r18, 0x9A	; 154
     d7a:	39 e9       	ldi	r19, 0x99	; 153
     d7c:	49 e1       	ldi	r20, 0x19	; 25
     d7e:	5f e3       	ldi	r21, 0x3F	; 63
     d80:	c7 01       	movw	r24, r14
     d82:	b6 01       	movw	r22, r12
     d84:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
I_curve = I_curve + pk_angle * Ki_curve; // Integral
D_curve = (pk_angle - pk_angle_prev) * Kd_curve; // Derivative
pk_angle_prev = pk_angle;

float PID_curve = fabs(P_curve + I_curve + D_curve);
     d88:	a5 01       	movw	r20, r10
     d8a:	94 01       	movw	r18, r8
     d8c:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     d90:	a3 01       	movw	r20, r6
     d92:	92 01       	movw	r18, r4
     d94:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     d98:	4b 01       	movw	r8, r22
     d9a:	5c 01       	movw	r10, r24
     d9c:	e8 94       	clt
     d9e:	b7 f8       	bld	r11, 7

float left_power;
float right_power;
if (pk_angle > 0)
     da0:	20 e0       	ldi	r18, 0x00	; 0
     da2:	30 e0       	ldi	r19, 0x00	; 0
     da4:	a9 01       	movw	r20, r18
     da6:	c7 01       	movw	r24, r14
     da8:	b6 01       	movw	r22, r12
     daa:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     dae:	18 16       	cp	r1, r24
     db0:	ec f4       	brge	.+58     	; 0xdec <curve+0x110>
{left_power = power + PID_curve;
     db2:	c0 90 61 01 	lds	r12, 0x0161	; 0x800161 <power>
     db6:	d0 90 62 01 	lds	r13, 0x0162	; 0x800162 <power+0x1>
     dba:	e0 90 63 01 	lds	r14, 0x0163	; 0x800163 <power+0x2>
     dbe:	f0 90 64 01 	lds	r15, 0x0164	; 0x800164 <power+0x3>
     dc2:	a5 01       	movw	r20, r10
     dc4:	94 01       	movw	r18, r8
     dc6:	c7 01       	movw	r24, r14
     dc8:	b6 01       	movw	r22, r12
     dca:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     dce:	06 2f       	mov	r16, r22
     dd0:	17 2f       	mov	r17, r23
     dd2:	d8 2f       	mov	r29, r24
     dd4:	c9 2f       	mov	r28, r25
 right_power = power - PID_curve;}// !careful direction
     dd6:	a5 01       	movw	r20, r10
     dd8:	94 01       	movw	r18, r8
     dda:	c7 01       	movw	r24, r14
     ddc:	b6 01       	movw	r22, r12
     dde:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     de2:	d6 2e       	mov	r13, r22
     de4:	c7 2e       	mov	r12, r23
     de6:	f8 2e       	mov	r15, r24
     de8:	e9 2e       	mov	r14, r25
     dea:	3a c0       	rjmp	.+116    	; 0xe60 <curve+0x184>
else if (pk_angle < 0) {
     dec:	20 e0       	ldi	r18, 0x00	; 0
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	a9 01       	movw	r20, r18
     df2:	c7 01       	movw	r24, r14
     df4:	b6 01       	movw	r22, r12
     df6:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
     dfa:	88 23       	and	r24, r24
     dfc:	ec f4       	brge	.+58     	; 0xe38 <curve+0x15c>
	left_power = power - PID_curve;
     dfe:	c0 90 61 01 	lds	r12, 0x0161	; 0x800161 <power>
     e02:	d0 90 62 01 	lds	r13, 0x0162	; 0x800162 <power+0x1>
     e06:	e0 90 63 01 	lds	r14, 0x0163	; 0x800163 <power+0x2>
     e0a:	f0 90 64 01 	lds	r15, 0x0164	; 0x800164 <power+0x3>
     e0e:	a5 01       	movw	r20, r10
     e10:	94 01       	movw	r18, r8
     e12:	c7 01       	movw	r24, r14
     e14:	b6 01       	movw	r22, r12
     e16:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
     e1a:	06 2f       	mov	r16, r22
     e1c:	17 2f       	mov	r17, r23
     e1e:	d8 2f       	mov	r29, r24
     e20:	c9 2f       	mov	r28, r25
	right_power = power + PID_curve;
     e22:	a7 01       	movw	r20, r14
     e24:	96 01       	movw	r18, r12
     e26:	c5 01       	movw	r24, r10
     e28:	b4 01       	movw	r22, r8
     e2a:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     e2e:	d6 2e       	mov	r13, r22
     e30:	c7 2e       	mov	r12, r23
     e32:	f8 2e       	mov	r15, r24
     e34:	e9 2e       	mov	r14, r25
     e36:	14 c0       	rjmp	.+40     	; 0xe60 <curve+0x184>
}
else {left_power = power + PID_curve;
     e38:	20 91 61 01 	lds	r18, 0x0161	; 0x800161 <power>
     e3c:	30 91 62 01 	lds	r19, 0x0162	; 0x800162 <power+0x1>
     e40:	40 91 63 01 	lds	r20, 0x0163	; 0x800163 <power+0x2>
     e44:	50 91 64 01 	lds	r21, 0x0164	; 0x800164 <power+0x3>
     e48:	c5 01       	movw	r24, r10
     e4a:	b4 01       	movw	r22, r8
     e4c:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
     e50:	06 2f       	mov	r16, r22
     e52:	17 2f       	mov	r17, r23
     e54:	d8 2f       	mov	r29, r24
     e56:	c9 2f       	mov	r28, r25
right_power = power + PID_curve;}
     e58:	d6 2e       	mov	r13, r22
     e5a:	c7 2e       	mov	r12, r23
     e5c:	f8 2e       	mov	r15, r24
     e5e:	e9 2e       	mov	r14, r25

if(left_power > 1) {left_power = 1;}
     e60:	20 e0       	ldi	r18, 0x00	; 0
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	40 e8       	ldi	r20, 0x80	; 128
     e66:	5f e3       	ldi	r21, 0x3F	; 63
     e68:	60 2f       	mov	r22, r16
     e6a:	71 2f       	mov	r23, r17
     e6c:	8d 2f       	mov	r24, r29
     e6e:	9c 2f       	mov	r25, r28
     e70:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     e74:	18 16       	cp	r1, r24
     e76:	84 f0       	brlt	.+32     	; 0xe98 <curve+0x1bc>
if(left_power < 0) {left_power = 0;}
     e78:	20 e0       	ldi	r18, 0x00	; 0
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	a9 01       	movw	r20, r18
     e7e:	60 2f       	mov	r22, r16
     e80:	71 2f       	mov	r23, r17
     e82:	8d 2f       	mov	r24, r29
     e84:	9c 2f       	mov	r25, r28
     e86:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
     e8a:	88 23       	and	r24, r24
     e8c:	4c f4       	brge	.+18     	; 0xea0 <curve+0x1c4>
     e8e:	00 e0       	ldi	r16, 0x00	; 0
     e90:	10 e0       	ldi	r17, 0x00	; 0
     e92:	d0 e0       	ldi	r29, 0x00	; 0
     e94:	c0 e0       	ldi	r28, 0x00	; 0
     e96:	04 c0       	rjmp	.+8      	; 0xea0 <curve+0x1c4>
	right_power = power + PID_curve;
}
else {left_power = power + PID_curve;
right_power = power + PID_curve;}

if(left_power > 1) {left_power = 1;}
     e98:	00 e0       	ldi	r16, 0x00	; 0
     e9a:	10 e0       	ldi	r17, 0x00	; 0
     e9c:	d0 e8       	ldi	r29, 0x80	; 128
     e9e:	cf e3       	ldi	r28, 0x3F	; 63
if(left_power < 0) {left_power = 0;}
if(right_power > 1) {right_power = 1;}
     ea0:	20 e0       	ldi	r18, 0x00	; 0
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	40 e8       	ldi	r20, 0x80	; 128
     ea6:	5f e3       	ldi	r21, 0x3F	; 63
     ea8:	6d 2d       	mov	r22, r13
     eaa:	7c 2d       	mov	r23, r12
     eac:	8f 2d       	mov	r24, r15
     eae:	9e 2d       	mov	r25, r14
     eb0:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
     eb4:	18 16       	cp	r1, r24
     eb6:	84 f0       	brlt	.+32     	; 0xed8 <curve+0x1fc>
if(right_power < 0) {right_power = 0;}
     eb8:	20 e0       	ldi	r18, 0x00	; 0
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	a9 01       	movw	r20, r18
     ebe:	6d 2d       	mov	r22, r13
     ec0:	7c 2d       	mov	r23, r12
     ec2:	8f 2d       	mov	r24, r15
     ec4:	9e 2d       	mov	r25, r14
     ec6:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
     eca:	88 23       	and	r24, r24
     ecc:	74 f4       	brge	.+28     	; 0xeea <curve+0x20e>
     ece:	d1 2c       	mov	r13, r1
     ed0:	c1 2c       	mov	r12, r1
     ed2:	f1 2c       	mov	r15, r1
     ed4:	e1 2c       	mov	r14, r1
     ed6:	09 c0       	rjmp	.+18     	; 0xeea <curve+0x20e>
else {left_power = power + PID_curve;
right_power = power + PID_curve;}

if(left_power > 1) {left_power = 1;}
if(left_power < 0) {left_power = 0;}
if(right_power > 1) {right_power = 1;}
     ed8:	d1 2c       	mov	r13, r1
     eda:	c1 2c       	mov	r12, r1
     edc:	68 94       	set
     ede:	ff 24       	eor	r15, r15
     ee0:	f7 f8       	bld	r15, 7
     ee2:	0f 2e       	mov	r0, r31
     ee4:	ff e3       	ldi	r31, 0x3F	; 63
     ee6:	ef 2e       	mov	r14, r31
     ee8:	f0 2d       	mov	r31, r0
if(right_power < 0) {right_power = 0;}

left_on(left_power, forwards);
     eea:	41 e0       	ldi	r20, 0x01	; 1
     eec:	50 e0       	ldi	r21, 0x00	; 0
     eee:	60 2f       	mov	r22, r16
     ef0:	71 2f       	mov	r23, r17
     ef2:	8d 2f       	mov	r24, r29
     ef4:	9c 2f       	mov	r25, r28
     ef6:	0e 94 30 04 	call	0x860	; 0x860 <left_on>
right_on(right_power, forwards);
     efa:	41 e0       	ldi	r20, 0x01	; 1
     efc:	50 e0       	ldi	r21, 0x00	; 0
     efe:	6d 2d       	mov	r22, r13
     f00:	7c 2d       	mov	r23, r12
     f02:	8f 2d       	mov	r24, r15
     f04:	9e 2d       	mov	r25, r14
     f06:	0e 94 97 04 	call	0x92e	; 0x92e <right_on>

}
     f0a:	df 91       	pop	r29
     f0c:	cf 91       	pop	r28
     f0e:	1f 91       	pop	r17
     f10:	0f 91       	pop	r16
     f12:	ff 90       	pop	r15
     f14:	ef 90       	pop	r14
     f16:	df 90       	pop	r13
     f18:	cf 90       	pop	r12
     f1a:	bf 90       	pop	r11
     f1c:	af 90       	pop	r10
     f1e:	9f 90       	pop	r9
     f20:	8f 90       	pop	r8
     f22:	7f 90       	pop	r7
     f24:	6f 90       	pop	r6
     f26:	5f 90       	pop	r5
     f28:	4f 90       	pop	r4
     f2a:	08 95       	ret

00000f2c <left_off>:
	
}

void left_off(){
    // turn off the clock
	clear(TCCR1B, CS12);
     f2c:	e1 e8       	ldi	r30, 0x81	; 129
     f2e:	f0 e0       	ldi	r31, 0x00	; 0
     f30:	80 81       	ld	r24, Z
     f32:	8b 7f       	andi	r24, 0xFB	; 251
     f34:	80 83       	st	Z, r24
	clear(TCCR1B, CS11);
     f36:	80 81       	ld	r24, Z
     f38:	8d 7f       	andi	r24, 0xFD	; 253
     f3a:	80 83       	st	Z, r24
	clear(TCCR1B, CS10);
     f3c:	80 81       	ld	r24, Z
     f3e:	8e 7f       	andi	r24, 0xFE	; 254
     f40:	80 83       	st	Z, r24
	// set port B6 input
	clear(DDRB, 6);
     f42:	26 98       	cbi	0x04, 6	; 4
	L_on = 0;
     f44:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <L_on+0x1>
     f48:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <L_on>
     f4c:	08 95       	ret

00000f4e <right_off>:
	}


void right_off(){
    // turn off the clock
	clear(TCCR3B, CS32);
     f4e:	e1 e9       	ldi	r30, 0x91	; 145
     f50:	f0 e0       	ldi	r31, 0x00	; 0
     f52:	80 81       	ld	r24, Z
     f54:	8b 7f       	andi	r24, 0xFB	; 251
     f56:	80 83       	st	Z, r24
	clear(TCCR3B, CS31);
     f58:	80 81       	ld	r24, Z
     f5a:	8d 7f       	andi	r24, 0xFD	; 253
     f5c:	80 83       	st	Z, r24
	clear(TCCR3B, CS30);
     f5e:	80 81       	ld	r24, Z
     f60:	8e 7f       	andi	r24, 0xFE	; 254
     f62:	80 83       	st	Z, r24
	// set port C6 input
	clear(DDRC, 6);
     f64:	3e 98       	cbi	0x07, 6	; 7
	R_on = 0;
     f66:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <R_on+0x1>
     f6a:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <R_on>
     f6e:	08 95       	ret

00000f70 <stop>:
void set_power(float dpower){
    power = dpower;
	}

void stop(){
	right_off();
     f70:	0e 94 a7 07 	call	0xf4e	; 0xf4e <right_off>
	left_off();
     f74:	0e 94 96 07 	call	0xf2c	; 0xf2c <left_off>
     f78:	08 95       	ret

00000f7a <location_init>:
	*/
}

void calculate3(unsigned int* data)
{
    drop(); // change later
     f7a:	0e 94 55 11 	call	0x22aa	; 0x22aa <m_wii_open>
     f7e:	88 23       	and	r24, r24
     f80:	19 f0       	breq	.+6      	; 0xf88 <location_init+0xe>
     f82:	81 e0       	ldi	r24, 0x01	; 1
     f84:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <init_mwii>
     f88:	08 95       	ret

00000f8a <countstar>:
     f8a:	0f 93       	push	r16
     f8c:	1f 93       	push	r17
     f8e:	cf 93       	push	r28
     f90:	df 93       	push	r29
     f92:	fc 01       	movw	r30, r24
     f94:	c9 e6       	ldi	r28, 0x69	; 105
     f96:	d1 e0       	ldi	r29, 0x01	; 1
     f98:	bc 01       	movw	r22, r24
     f9a:	68 5e       	subi	r22, 0xE8	; 232
     f9c:	7f 4f       	sbci	r23, 0xFF	; 255
     f9e:	01 e0       	ldi	r16, 0x01	; 1
     fa0:	10 e0       	ldi	r17, 0x00	; 0
     fa2:	de 01       	movw	r26, r28
     fa4:	44 e0       	ldi	r20, 0x04	; 4
     fa6:	50 e0       	ldi	r21, 0x00	; 0
     fa8:	80 81       	ld	r24, Z
     faa:	91 81       	ldd	r25, Z+1	; 0x01
     fac:	8f 3f       	cpi	r24, 0xFF	; 255
     fae:	93 40       	sbci	r25, 0x03	; 3
     fb0:	41 f4       	brne	.+16     	; 0xfc2 <countstar+0x38>
     fb2:	82 81       	ldd	r24, Z+2	; 0x02
     fb4:	93 81       	ldd	r25, Z+3	; 0x03
     fb6:	8f 3f       	cpi	r24, 0xFF	; 255
     fb8:	93 40       	sbci	r25, 0x03	; 3
     fba:	19 f4       	brne	.+6      	; 0xfc2 <countstar+0x38>
     fbc:	19 83       	std	Y+1, r17	; 0x01
     fbe:	08 83       	st	Y, r16
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <countstar+0x3c>
     fc2:	19 82       	std	Y+1, r1	; 0x01
     fc4:	18 82       	st	Y, r1
     fc6:	2d 91       	ld	r18, X+
     fc8:	3c 91       	ld	r19, X
     fca:	11 97       	sbiw	r26, 0x01	; 1
     fcc:	12 96       	adiw	r26, 0x02	; 2
     fce:	8d 91       	ld	r24, X+
     fd0:	9c 91       	ld	r25, X
     fd2:	13 97       	sbiw	r26, 0x03	; 3
     fd4:	82 0f       	add	r24, r18
     fd6:	93 1f       	adc	r25, r19
     fd8:	14 96       	adiw	r26, 0x04	; 4
     fda:	2d 91       	ld	r18, X+
     fdc:	3c 91       	ld	r19, X
     fde:	15 97       	sbiw	r26, 0x05	; 5
     fe0:	82 0f       	add	r24, r18
     fe2:	93 1f       	adc	r25, r19
     fe4:	16 96       	adiw	r26, 0x06	; 6
     fe6:	2d 91       	ld	r18, X+
     fe8:	3c 91       	ld	r19, X
     fea:	17 97       	sbiw	r26, 0x07	; 7
     fec:	82 0f       	add	r24, r18
     fee:	93 1f       	adc	r25, r19
     ff0:	9a 01       	movw	r18, r20
     ff2:	28 1b       	sub	r18, r24
     ff4:	39 0b       	sbc	r19, r25
     ff6:	36 96       	adiw	r30, 0x06	; 6
     ff8:	22 96       	adiw	r28, 0x02	; 2
     ffa:	e6 17       	cp	r30, r22
     ffc:	f7 07       	cpc	r31, r23
     ffe:	a1 f6       	brne	.-88     	; 0xfa8 <countstar+0x1e>
    1000:	30 93 72 01 	sts	0x0172, r19	; 0x800172 <stars+0x1>
    1004:	20 93 71 01 	sts	0x0171, r18	; 0x800171 <stars>
    1008:	df 91       	pop	r29
    100a:	cf 91       	pop	r28
    100c:	1f 91       	pop	r17
    100e:	0f 91       	pop	r16
    1010:	08 95       	ret

00001012 <calculate4>:
    1012:	2f 92       	push	r2
    1014:	3f 92       	push	r3
    1016:	4f 92       	push	r4
    1018:	5f 92       	push	r5
    101a:	6f 92       	push	r6
    101c:	7f 92       	push	r7
    101e:	8f 92       	push	r8
    1020:	9f 92       	push	r9
    1022:	af 92       	push	r10
    1024:	bf 92       	push	r11
    1026:	cf 92       	push	r12
    1028:	df 92       	push	r13
    102a:	ef 92       	push	r14
    102c:	ff 92       	push	r15
    102e:	0f 93       	push	r16
    1030:	1f 93       	push	r17
    1032:	cf 93       	push	r28
    1034:	df 93       	push	r29
    1036:	cd b7       	in	r28, 0x3d	; 61
    1038:	de b7       	in	r29, 0x3e	; 62
    103a:	ce 56       	subi	r28, 0x6E	; 110
    103c:	d1 09       	sbc	r29, r1
    103e:	0f b6       	in	r0, 0x3f	; 63
    1040:	f8 94       	cli
    1042:	de bf       	out	0x3e, r29	; 62
    1044:	0f be       	out	0x3f, r0	; 63
    1046:	cd bf       	out	0x3d, r28	; 61
    1048:	ad 96       	adiw	r28, 0x2d	; 45
    104a:	9f af       	std	Y+63, r25	; 0x3f
    104c:	8e af       	std	Y+62, r24	; 0x3e
    104e:	ad 97       	sbiw	r28, 0x2d	; 45
    1050:	9e 01       	movw	r18, r28
    1052:	2f 5f       	subi	r18, 0xFF	; 255
    1054:	3f 4f       	sbci	r19, 0xFF	; 255
    1056:	ab 96       	adiw	r28, 0x2b	; 43
    1058:	3f af       	std	Y+63, r19	; 0x3f
    105a:	2e af       	std	Y+62, r18	; 0x3e
    105c:	ab 97       	sbiw	r28, 0x2b	; 43
    105e:	a7 96       	adiw	r28, 0x27	; 39
    1060:	9f af       	std	Y+63, r25	; 0x3f
    1062:	8e af       	std	Y+62, r24	; 0x3e
    1064:	a7 97       	sbiw	r28, 0x27	; 39
    1066:	61 2c       	mov	r6, r1
    1068:	71 2c       	mov	r7, r1
    106a:	62 96       	adiw	r28, 0x12	; 18
    106c:	1f ae       	std	Y+63, r1	; 0x3f
    106e:	62 97       	sbiw	r28, 0x12	; 18
    1070:	66 96       	adiw	r28, 0x16	; 22
    1072:	1f ae       	std	Y+63, r1	; 0x3f
    1074:	66 97       	sbiw	r28, 0x16	; 22
    1076:	6a 96       	adiw	r28, 0x1a	; 26
    1078:	1f ae       	std	Y+63, r1	; 0x3f
    107a:	6a 97       	sbiw	r28, 0x1a	; 26
    107c:	6b 96       	adiw	r28, 0x1b	; 27
    107e:	1f ae       	std	Y+63, r1	; 0x3f
    1080:	6b 97       	sbiw	r28, 0x1b	; 27
    1082:	ac 96       	adiw	r28, 0x2c	; 44
    1084:	3f ad       	ldd	r19, Y+63	; 0x3f
    1086:	ac 97       	sbiw	r28, 0x2c	; 44
    1088:	ae 96       	adiw	r28, 0x2e	; 46
    108a:	3f af       	std	Y+63, r19	; 0x3f
    108c:	ae 97       	sbiw	r28, 0x2e	; 46
    108e:	ad 96       	adiw	r28, 0x2d	; 45
    1090:	8f ad       	ldd	r24, Y+63	; 0x3f
    1092:	ad 97       	sbiw	r28, 0x2d	; 45
    1094:	af 96       	adiw	r28, 0x2f	; 47
    1096:	8f af       	std	Y+63, r24	; 0x3f
    1098:	af 97       	sbiw	r28, 0x2f	; 47
    109a:	a5 96       	adiw	r28, 0x25	; 37
    109c:	7f ae       	std	Y+63, r7	; 0x3f
    109e:	6e ae       	std	Y+62, r6	; 0x3e
    10a0:	a5 97       	sbiw	r28, 0x25	; 37
    10a2:	c6 c0       	rjmp	.+396    	; 0x1230 <calculate4+0x21e>
    10a4:	42 2c       	mov	r4, r2
    10a6:	53 2c       	mov	r5, r3
    10a8:	78 01       	movw	r14, r16
    10aa:	d8 01       	movw	r26, r16
    10ac:	6d 91       	ld	r22, X+
    10ae:	7c 91       	ld	r23, X
    10b0:	80 e0       	ldi	r24, 0x00	; 0
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    10b8:	9b 01       	movw	r18, r22
    10ba:	ac 01       	movw	r20, r24
    10bc:	6f 96       	adiw	r28, 0x1f	; 31
    10be:	6c ad       	ldd	r22, Y+60	; 0x3c
    10c0:	7d ad       	ldd	r23, Y+61	; 0x3d
    10c2:	8e ad       	ldd	r24, Y+62	; 0x3e
    10c4:	9f ad       	ldd	r25, Y+63	; 0x3f
    10c6:	6f 97       	sbiw	r28, 0x1f	; 31
    10c8:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    10cc:	0e 94 64 14 	call	0x28c8	; 0x28c8 <__fixsfsi>
    10d0:	9b 01       	movw	r18, r22
    10d2:	77 23       	and	r23, r23
    10d4:	24 f4       	brge	.+8      	; 0x10de <calculate4+0xcc>
    10d6:	22 27       	eor	r18, r18
    10d8:	33 27       	eor	r19, r19
    10da:	26 1b       	sub	r18, r22
    10dc:	37 0b       	sbc	r19, r23
    10de:	b9 01       	movw	r22, r18
    10e0:	33 0f       	add	r19, r19
    10e2:	88 0b       	sbc	r24, r24
    10e4:	99 0b       	sbc	r25, r25
    10e6:	0e 94 9c 14 	call	0x2938	; 0x2938 <__floatsisf>
    10ea:	4b 01       	movw	r8, r22
    10ec:	5c 01       	movw	r10, r24
    10ee:	f7 01       	movw	r30, r14
    10f0:	62 81       	ldd	r22, Z+2	; 0x02
    10f2:	73 81       	ldd	r23, Z+3	; 0x03
    10f4:	80 e0       	ldi	r24, 0x00	; 0
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    10fc:	9b 01       	movw	r18, r22
    10fe:	ac 01       	movw	r20, r24
    1100:	a3 96       	adiw	r28, 0x23	; 35
    1102:	6c ad       	ldd	r22, Y+60	; 0x3c
    1104:	7d ad       	ldd	r23, Y+61	; 0x3d
    1106:	8e ad       	ldd	r24, Y+62	; 0x3e
    1108:	9f ad       	ldd	r25, Y+63	; 0x3f
    110a:	a3 97       	sbiw	r28, 0x23	; 35
    110c:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    1110:	0e 94 64 14 	call	0x28c8	; 0x28c8 <__fixsfsi>
    1114:	9b 01       	movw	r18, r22
    1116:	77 23       	and	r23, r23
    1118:	24 f4       	brge	.+8      	; 0x1122 <calculate4+0x110>
    111a:	22 27       	eor	r18, r18
    111c:	33 27       	eor	r19, r19
    111e:	26 1b       	sub	r18, r22
    1120:	37 0b       	sbc	r19, r23
    1122:	b9 01       	movw	r22, r18
    1124:	33 0f       	add	r19, r19
    1126:	88 0b       	sbc	r24, r24
    1128:	99 0b       	sbc	r25, r25
    112a:	0e 94 9c 14 	call	0x2938	; 0x2938 <__floatsisf>
    112e:	6b 01       	movw	r12, r22
    1130:	7c 01       	movw	r14, r24
    1132:	a5 01       	movw	r20, r10
    1134:	94 01       	movw	r18, r8
    1136:	c5 01       	movw	r24, r10
    1138:	b4 01       	movw	r22, r8
    113a:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    113e:	29 96       	adiw	r28, 0x09	; 9
    1140:	6c af       	std	Y+60, r22	; 0x3c
    1142:	7d af       	std	Y+61, r23	; 0x3d
    1144:	8e af       	std	Y+62, r24	; 0x3e
    1146:	9f af       	std	Y+63, r25	; 0x3f
    1148:	29 97       	sbiw	r28, 0x09	; 9
    114a:	a5 01       	movw	r20, r10
    114c:	94 01       	movw	r18, r8
    114e:	c5 01       	movw	r24, r10
    1150:	b4 01       	movw	r22, r8
    1152:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    1156:	4b 01       	movw	r8, r22
    1158:	5c 01       	movw	r10, r24
    115a:	a7 01       	movw	r20, r14
    115c:	96 01       	movw	r18, r12
    115e:	c7 01       	movw	r24, r14
    1160:	b6 01       	movw	r22, r12
    1162:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    1166:	9b 01       	movw	r18, r22
    1168:	ac 01       	movw	r20, r24
    116a:	c5 01       	movw	r24, r10
    116c:	b4 01       	movw	r22, r8
    116e:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    1172:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <sqrt>
    1176:	6b 01       	movw	r12, r22
    1178:	7c 01       	movw	r14, r24
    117a:	d3 01       	movw	r26, r6
    117c:	6d 93       	st	X+, r22
    117e:	7d 93       	st	X+, r23
    1180:	8d 93       	st	X+, r24
    1182:	9d 93       	st	X+, r25
    1184:	3d 01       	movw	r6, r26
    1186:	62 96       	adiw	r28, 0x12	; 18
    1188:	2f ad       	ldd	r18, Y+63	; 0x3f
    118a:	62 97       	sbiw	r28, 0x12	; 18
    118c:	66 96       	adiw	r28, 0x16	; 22
    118e:	3f ad       	ldd	r19, Y+63	; 0x3f
    1190:	66 97       	sbiw	r28, 0x16	; 22
    1192:	6a 96       	adiw	r28, 0x1a	; 26
    1194:	4f ad       	ldd	r20, Y+63	; 0x3f
    1196:	6a 97       	sbiw	r28, 0x1a	; 26
    1198:	6b 96       	adiw	r28, 0x1b	; 27
    119a:	5f ad       	ldd	r21, Y+63	; 0x3f
    119c:	6b 97       	sbiw	r28, 0x1b	; 27
    119e:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
    11a2:	18 16       	cp	r1, r24
    11a4:	f4 f4       	brge	.+60     	; 0x11e2 <calculate4+0x1d0>
    11a6:	2a 96       	adiw	r28, 0x0a	; 10
    11a8:	4f ae       	std	Y+63, r4	; 0x3f
    11aa:	2a 97       	sbiw	r28, 0x0a	; 10
    11ac:	2b 96       	adiw	r28, 0x0b	; 11
    11ae:	5f ae       	std	Y+63, r5	; 0x3f
    11b0:	2b 97       	sbiw	r28, 0x0b	; 11
    11b2:	a8 96       	adiw	r28, 0x28	; 40
    11b4:	bf ad       	ldd	r27, Y+63	; 0x3f
    11b6:	a8 97       	sbiw	r28, 0x28	; 40
    11b8:	2e 96       	adiw	r28, 0x0e	; 14
    11ba:	bf af       	std	Y+63, r27	; 0x3f
    11bc:	2e 97       	sbiw	r28, 0x0e	; 14
    11be:	a9 96       	adiw	r28, 0x29	; 41
    11c0:	ef ad       	ldd	r30, Y+63	; 0x3f
    11c2:	a9 97       	sbiw	r28, 0x29	; 41
    11c4:	2f 96       	adiw	r28, 0x0f	; 15
    11c6:	ef af       	std	Y+63, r30	; 0x3f
    11c8:	2f 97       	sbiw	r28, 0x0f	; 15
    11ca:	62 96       	adiw	r28, 0x12	; 18
    11cc:	cf ae       	std	Y+63, r12	; 0x3f
    11ce:	62 97       	sbiw	r28, 0x12	; 18
    11d0:	66 96       	adiw	r28, 0x16	; 22
    11d2:	df ae       	std	Y+63, r13	; 0x3f
    11d4:	66 97       	sbiw	r28, 0x16	; 22
    11d6:	6a 96       	adiw	r28, 0x1a	; 26
    11d8:	ef ae       	std	Y+63, r14	; 0x3f
    11da:	6a 97       	sbiw	r28, 0x1a	; 26
    11dc:	6b 96       	adiw	r28, 0x1b	; 27
    11de:	ff ae       	std	Y+63, r15	; 0x3f
    11e0:	6b 97       	sbiw	r28, 0x1b	; 27
    11e2:	ff ef       	ldi	r31, 0xFF	; 255
    11e4:	2f 1a       	sub	r2, r31
    11e6:	3f 0a       	sbc	r3, r31
    11e8:	0a 5f       	subi	r16, 0xFA	; 250
    11ea:	1f 4f       	sbci	r17, 0xFF	; 255
    11ec:	24 e0       	ldi	r18, 0x04	; 4
    11ee:	22 16       	cp	r2, r18
    11f0:	31 04       	cpc	r3, r1
    11f2:	09 f0       	breq	.+2      	; 0x11f6 <calculate4+0x1e4>
    11f4:	57 cf       	rjmp	.-338    	; 0x10a4 <calculate4+0x92>
    11f6:	a5 96       	adiw	r28, 0x25	; 37
    11f8:	8e ad       	ldd	r24, Y+62	; 0x3e
    11fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    11fc:	a5 97       	sbiw	r28, 0x25	; 37
    11fe:	01 96       	adiw	r24, 0x01	; 1
    1200:	a5 96       	adiw	r28, 0x25	; 37
    1202:	9f af       	std	Y+63, r25	; 0x3f
    1204:	8e af       	std	Y+62, r24	; 0x3e
    1206:	a5 97       	sbiw	r28, 0x25	; 37
    1208:	a7 96       	adiw	r28, 0x27	; 39
    120a:	ae ad       	ldd	r26, Y+62	; 0x3e
    120c:	bf ad       	ldd	r27, Y+63	; 0x3f
    120e:	a7 97       	sbiw	r28, 0x27	; 39
    1210:	16 96       	adiw	r26, 0x06	; 6
    1212:	a7 96       	adiw	r28, 0x27	; 39
    1214:	bf af       	std	Y+63, r27	; 0x3f
    1216:	ae af       	std	Y+62, r26	; 0x3e
    1218:	a7 97       	sbiw	r28, 0x27	; 39
    121a:	ab 96       	adiw	r28, 0x2b	; 43
    121c:	ee ad       	ldd	r30, Y+62	; 0x3e
    121e:	ff ad       	ldd	r31, Y+63	; 0x3f
    1220:	ab 97       	sbiw	r28, 0x2b	; 43
    1222:	70 96       	adiw	r30, 0x10	; 16
    1224:	ab 96       	adiw	r28, 0x2b	; 43
    1226:	ff af       	std	Y+63, r31	; 0x3f
    1228:	ee af       	std	Y+62, r30	; 0x3e
    122a:	ab 97       	sbiw	r28, 0x2b	; 43
    122c:	04 97       	sbiw	r24, 0x04	; 4
    122e:	d1 f1       	breq	.+116    	; 0x12a4 <calculate4+0x292>
    1230:	a4 96       	adiw	r28, 0x24	; 36
    1232:	0f ad       	ldd	r16, Y+63	; 0x3f
    1234:	a4 97       	sbiw	r28, 0x24	; 36
    1236:	a5 96       	adiw	r28, 0x25	; 37
    1238:	1f ad       	ldd	r17, Y+63	; 0x3f
    123a:	a5 97       	sbiw	r28, 0x25	; 37
    123c:	a7 96       	adiw	r28, 0x27	; 39
    123e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1240:	bf ad       	ldd	r27, Y+63	; 0x3f
    1242:	a7 97       	sbiw	r28, 0x27	; 39
    1244:	6d 91       	ld	r22, X+
    1246:	7c 91       	ld	r23, X
    1248:	80 e0       	ldi	r24, 0x00	; 0
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    1250:	6f 96       	adiw	r28, 0x1f	; 31
    1252:	6c af       	std	Y+60, r22	; 0x3c
    1254:	7d af       	std	Y+61, r23	; 0x3d
    1256:	8e af       	std	Y+62, r24	; 0x3e
    1258:	9f af       	std	Y+63, r25	; 0x3f
    125a:	6f 97       	sbiw	r28, 0x1f	; 31
    125c:	a7 96       	adiw	r28, 0x27	; 39
    125e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1260:	ff ad       	ldd	r31, Y+63	; 0x3f
    1262:	a7 97       	sbiw	r28, 0x27	; 39
    1264:	62 81       	ldd	r22, Z+2	; 0x02
    1266:	73 81       	ldd	r23, Z+3	; 0x03
    1268:	80 e0       	ldi	r24, 0x00	; 0
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    1270:	a3 96       	adiw	r28, 0x23	; 35
    1272:	6c af       	std	Y+60, r22	; 0x3c
    1274:	7d af       	std	Y+61, r23	; 0x3d
    1276:	8e af       	std	Y+62, r24	; 0x3e
    1278:	9f af       	std	Y+63, r25	; 0x3f
    127a:	a3 97       	sbiw	r28, 0x23	; 35
    127c:	ab 96       	adiw	r28, 0x2b	; 43
    127e:	6e ac       	ldd	r6, Y+62	; 0x3e
    1280:	7f ac       	ldd	r7, Y+63	; 0x3f
    1282:	ab 97       	sbiw	r28, 0x2b	; 43
    1284:	ae 96       	adiw	r28, 0x2e	; 46
    1286:	4f ac       	ldd	r4, Y+63	; 0x3f
    1288:	ae 97       	sbiw	r28, 0x2e	; 46
    128a:	af 96       	adiw	r28, 0x2f	; 47
    128c:	5f ac       	ldd	r5, Y+63	; 0x3f
    128e:	af 97       	sbiw	r28, 0x2f	; 47
    1290:	21 2c       	mov	r2, r1
    1292:	31 2c       	mov	r3, r1
    1294:	a8 96       	adiw	r28, 0x28	; 40
    1296:	0f af       	std	Y+63, r16	; 0x3f
    1298:	a8 97       	sbiw	r28, 0x28	; 40
    129a:	a9 96       	adiw	r28, 0x29	; 41
    129c:	1f af       	std	Y+63, r17	; 0x3f
    129e:	a9 97       	sbiw	r28, 0x29	; 41
    12a0:	82 01       	movw	r16, r4
    12a2:	00 cf       	rjmp	.-512    	; 0x10a4 <calculate4+0x92>
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	20 e0       	ldi	r18, 0x00	; 0
    12aa:	30 e0       	ldi	r19, 0x00	; 0
    12ac:	2b 96       	adiw	r28, 0x0b	; 11
    12ae:	4e ad       	ldd	r20, Y+62	; 0x3e
    12b0:	5f ad       	ldd	r21, Y+63	; 0x3f
    12b2:	2b 97       	sbiw	r28, 0x0b	; 11
    12b4:	2f 96       	adiw	r28, 0x0f	; 15
    12b6:	6e ad       	ldd	r22, Y+62	; 0x3e
    12b8:	7f ad       	ldd	r23, Y+63	; 0x3f
    12ba:	2f 97       	sbiw	r28, 0x0f	; 15
    12bc:	68 17       	cp	r22, r24
    12be:	79 07       	cpc	r23, r25
    12c0:	81 f0       	breq	.+32     	; 0x12e2 <calculate4+0x2d0>
    12c2:	48 17       	cp	r20, r24
    12c4:	59 07       	cpc	r21, r25
    12c6:	69 f0       	breq	.+26     	; 0x12e2 <calculate4+0x2d0>
    12c8:	f9 01       	movw	r30, r18
    12ca:	ee 0f       	add	r30, r30
    12cc:	ff 1f       	adc	r31, r31
    12ce:	a1 e4       	ldi	r26, 0x41	; 65
    12d0:	b0 e0       	ldi	r27, 0x00	; 0
    12d2:	ac 0f       	add	r26, r28
    12d4:	bd 1f       	adc	r27, r29
    12d6:	ea 0f       	add	r30, r26
    12d8:	fb 1f       	adc	r31, r27
    12da:	91 83       	std	Z+1, r25	; 0x01
    12dc:	80 83       	st	Z, r24
    12de:	2f 5f       	subi	r18, 0xFF	; 255
    12e0:	3f 4f       	sbci	r19, 0xFF	; 255
    12e2:	01 96       	adiw	r24, 0x01	; 1
    12e4:	84 30       	cpi	r24, 0x04	; 4
    12e6:	91 05       	cpc	r25, r1
    12e8:	49 f7       	brne	.-46     	; 0x12bc <calculate4+0x2aa>
    12ea:	23 96       	adiw	r28, 0x03	; 3
    12ec:	0e ad       	ldd	r16, Y+62	; 0x3e
    12ee:	1f ad       	ldd	r17, Y+63	; 0x3f
    12f0:	23 97       	sbiw	r28, 0x03	; 3
    12f2:	25 96       	adiw	r28, 0x05	; 5
    12f4:	ee ac       	ldd	r14, Y+62	; 0x3e
    12f6:	ff ac       	ldd	r15, Y+63	; 0x3f
    12f8:	25 97       	sbiw	r28, 0x05	; 5
    12fa:	2f 96       	adiw	r28, 0x0f	; 15
    12fc:	8e ad       	ldd	r24, Y+62	; 0x3e
    12fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    1300:	2f 97       	sbiw	r28, 0x0f	; 15
    1302:	88 0f       	add	r24, r24
    1304:	99 1f       	adc	r25, r25
    1306:	88 0f       	add	r24, r24
    1308:	99 1f       	adc	r25, r25
    130a:	dc 01       	movw	r26, r24
    130c:	a0 0f       	add	r26, r16
    130e:	b1 1f       	adc	r27, r17
    1310:	aa 0f       	add	r26, r26
    1312:	bb 1f       	adc	r27, r27
    1314:	aa 0f       	add	r26, r26
    1316:	bb 1f       	adc	r27, r27
    1318:	e1 e0       	ldi	r30, 0x01	; 1
    131a:	f0 e0       	ldi	r31, 0x00	; 0
    131c:	ec 0f       	add	r30, r28
    131e:	fd 1f       	adc	r31, r29
    1320:	ae 0f       	add	r26, r30
    1322:	bf 1f       	adc	r27, r31
    1324:	fc 01       	movw	r30, r24
    1326:	ee 0d       	add	r30, r14
    1328:	ff 1d       	adc	r31, r15
    132a:	ee 0f       	add	r30, r30
    132c:	ff 1f       	adc	r31, r31
    132e:	ee 0f       	add	r30, r30
    1330:	ff 1f       	adc	r31, r31
    1332:	21 e0       	ldi	r18, 0x01	; 1
    1334:	30 e0       	ldi	r19, 0x00	; 0
    1336:	2c 0f       	add	r18, r28
    1338:	3d 1f       	adc	r19, r29
    133a:	e2 0f       	add	r30, r18
    133c:	f3 1f       	adc	r31, r19
    133e:	20 81       	ld	r18, Z
    1340:	31 81       	ldd	r19, Z+1	; 0x01
    1342:	42 81       	ldd	r20, Z+2	; 0x02
    1344:	53 81       	ldd	r21, Z+3	; 0x03
    1346:	6d 91       	ld	r22, X+
    1348:	7d 91       	ld	r23, X+
    134a:	8d 91       	ld	r24, X+
    134c:	9c 91       	ld	r25, X
    134e:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    1352:	4b 01       	movw	r8, r22
    1354:	5c 01       	movw	r10, r24
    1356:	2b 96       	adiw	r28, 0x0b	; 11
    1358:	ae ad       	ldd	r26, Y+62	; 0x3e
    135a:	bf ad       	ldd	r27, Y+63	; 0x3f
    135c:	2b 97       	sbiw	r28, 0x0b	; 11
    135e:	aa 0f       	add	r26, r26
    1360:	bb 1f       	adc	r27, r27
    1362:	aa 0f       	add	r26, r26
    1364:	bb 1f       	adc	r27, r27
    1366:	fd 01       	movw	r30, r26
    1368:	e0 0f       	add	r30, r16
    136a:	f1 1f       	adc	r31, r17
    136c:	ee 0f       	add	r30, r30
    136e:	ff 1f       	adc	r31, r31
    1370:	ee 0f       	add	r30, r30
    1372:	ff 1f       	adc	r31, r31
    1374:	81 e0       	ldi	r24, 0x01	; 1
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	8c 0f       	add	r24, r28
    137a:	9d 1f       	adc	r25, r29
    137c:	e8 0f       	add	r30, r24
    137e:	f9 1f       	adc	r31, r25
    1380:	ae 0d       	add	r26, r14
    1382:	bf 1d       	adc	r27, r15
    1384:	aa 0f       	add	r26, r26
    1386:	bb 1f       	adc	r27, r27
    1388:	aa 0f       	add	r26, r26
    138a:	bb 1f       	adc	r27, r27
    138c:	a8 0f       	add	r26, r24
    138e:	b9 1f       	adc	r27, r25
    1390:	2d 91       	ld	r18, X+
    1392:	3d 91       	ld	r19, X+
    1394:	4d 91       	ld	r20, X+
    1396:	5c 91       	ld	r21, X
    1398:	60 81       	ld	r22, Z
    139a:	71 81       	ldd	r23, Z+1	; 0x01
    139c:	82 81       	ldd	r24, Z+2	; 0x02
    139e:	93 81       	ldd	r25, Z+3	; 0x03
    13a0:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    13a4:	9b 01       	movw	r18, r22
    13a6:	ac 01       	movw	r20, r24
    13a8:	c5 01       	movw	r24, r10
    13aa:	b4 01       	movw	r22, r8
    13ac:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
    13b0:	88 23       	and	r24, r24
    13b2:	8c f4       	brge	.+34     	; 0x13d6 <calculate4+0x3c4>
    13b4:	2f 96       	adiw	r28, 0x0f	; 15
    13b6:	ae ad       	ldd	r26, Y+62	; 0x3e
    13b8:	bf ad       	ldd	r27, Y+63	; 0x3f
    13ba:	2f 97       	sbiw	r28, 0x0f	; 15
    13bc:	b0 93 68 01 	sts	0x0168, r27	; 0x800168 <northstar.2015+0x1>
    13c0:	a0 93 67 01 	sts	0x0167, r26	; 0x800167 <northstar.2015>
    13c4:	2b 96       	adiw	r28, 0x0b	; 11
    13c6:	ee ad       	ldd	r30, Y+62	; 0x3e
    13c8:	ff ad       	ldd	r31, Y+63	; 0x3f
    13ca:	2b 97       	sbiw	r28, 0x0b	; 11
    13cc:	f0 93 66 01 	sts	0x0166, r31	; 0x800166 <southstar.2016+0x1>
    13d0:	e0 93 65 01 	sts	0x0165, r30	; 0x800165 <southstar.2016>
    13d4:	10 c0       	rjmp	.+32     	; 0x13f6 <calculate4+0x3e4>
    13d6:	2b 96       	adiw	r28, 0x0b	; 11
    13d8:	2e ad       	ldd	r18, Y+62	; 0x3e
    13da:	3f ad       	ldd	r19, Y+63	; 0x3f
    13dc:	2b 97       	sbiw	r28, 0x0b	; 11
    13de:	30 93 68 01 	sts	0x0168, r19	; 0x800168 <northstar.2015+0x1>
    13e2:	20 93 67 01 	sts	0x0167, r18	; 0x800167 <northstar.2015>
    13e6:	2f 96       	adiw	r28, 0x0f	; 15
    13e8:	8e ad       	ldd	r24, Y+62	; 0x3e
    13ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    13ec:	2f 97       	sbiw	r28, 0x0f	; 15
    13ee:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <southstar.2016+0x1>
    13f2:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <southstar.2016>
    13f6:	e0 90 67 01 	lds	r14, 0x0167	; 0x800167 <northstar.2015>
    13fa:	f0 90 68 01 	lds	r15, 0x0168	; 0x800168 <northstar.2015+0x1>
    13fe:	00 91 65 01 	lds	r16, 0x0165	; 0x800165 <southstar.2016>
    1402:	10 91 66 01 	lds	r17, 0x0166	; 0x800166 <southstar.2016+0x1>
    1406:	f7 01       	movw	r30, r14
    1408:	ee 0f       	add	r30, r30
    140a:	ff 1f       	adc	r31, r31
    140c:	ee 0f       	add	r30, r30
    140e:	ff 1f       	adc	r31, r31
    1410:	e0 0f       	add	r30, r16
    1412:	f1 1f       	adc	r31, r17
    1414:	ee 0f       	add	r30, r30
    1416:	ff 1f       	adc	r31, r31
    1418:	ee 0f       	add	r30, r30
    141a:	ff 1f       	adc	r31, r31
    141c:	ec 0f       	add	r30, r28
    141e:	fd 1f       	adc	r31, r29
    1420:	21 81       	ldd	r18, Z+1	; 0x01
    1422:	32 81       	ldd	r19, Z+2	; 0x02
    1424:	43 81       	ldd	r20, Z+3	; 0x03
    1426:	54 81       	ldd	r21, Z+4	; 0x04
    1428:	60 e0       	ldi	r22, 0x00	; 0
    142a:	70 e0       	ldi	r23, 0x00	; 0
    142c:	88 ee       	ldi	r24, 0xE8	; 232
    142e:	91 e4       	ldi	r25, 0x41	; 65
    1430:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <__divsf3>
    1434:	29 96       	adiw	r28, 0x09	; 9
    1436:	6c af       	std	Y+60, r22	; 0x3c
    1438:	7d af       	std	Y+61, r23	; 0x3d
    143a:	8e af       	std	Y+62, r24	; 0x3e
    143c:	9f af       	std	Y+63, r25	; 0x3f
    143e:	29 97       	sbiw	r28, 0x09	; 9
    1440:	60 93 80 01 	sts	0x0180, r22	; 0x800180 <scale>
    1444:	70 93 81 01 	sts	0x0181, r23	; 0x800181 <scale+0x1>
    1448:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <scale+0x2>
    144c:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <scale+0x3>
    1450:	d7 01       	movw	r26, r14
    1452:	aa 0f       	add	r26, r26
    1454:	bb 1f       	adc	r27, r27
    1456:	ae 0d       	add	r26, r14
    1458:	bf 1d       	adc	r27, r15
    145a:	aa 0f       	add	r26, r26
    145c:	bb 1f       	adc	r27, r27
    145e:	ad 96       	adiw	r28, 0x2d	; 45
    1460:	ee ad       	ldd	r30, Y+62	; 0x3e
    1462:	ff ad       	ldd	r31, Y+63	; 0x3f
    1464:	ad 97       	sbiw	r28, 0x2d	; 45
    1466:	ae 0f       	add	r26, r30
    1468:	bf 1f       	adc	r27, r31
    146a:	12 96       	adiw	r26, 0x02	; 2
    146c:	2d 90       	ld	r2, X+
    146e:	3c 90       	ld	r3, X
    1470:	13 97       	sbiw	r26, 0x03	; 3
    1472:	f8 01       	movw	r30, r16
    1474:	ee 0f       	add	r30, r30
    1476:	ff 1f       	adc	r31, r31
    1478:	e0 0f       	add	r30, r16
    147a:	f1 1f       	adc	r31, r17
    147c:	ee 0f       	add	r30, r30
    147e:	ff 1f       	adc	r31, r31
    1480:	ad 96       	adiw	r28, 0x2d	; 45
    1482:	2e ad       	ldd	r18, Y+62	; 0x3e
    1484:	3f ad       	ldd	r19, Y+63	; 0x3f
    1486:	ad 97       	sbiw	r28, 0x2d	; 45
    1488:	e2 0f       	add	r30, r18
    148a:	f3 1f       	adc	r31, r19
    148c:	e2 80       	ldd	r14, Z+2	; 0x02
    148e:	f3 80       	ldd	r15, Z+3	; 0x03
    1490:	0d 91       	ld	r16, X+
    1492:	1c 91       	ld	r17, X
    1494:	c0 80       	ld	r12, Z
    1496:	d1 80       	ldd	r13, Z+1	; 0x01
    1498:	b1 01       	movw	r22, r2
    149a:	80 e0       	ldi	r24, 0x00	; 0
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    14a2:	4b 01       	movw	r8, r22
    14a4:	5c 01       	movw	r10, r24
    14a6:	b7 01       	movw	r22, r14
    14a8:	80 e0       	ldi	r24, 0x00	; 0
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    14b0:	9b 01       	movw	r18, r22
    14b2:	ac 01       	movw	r20, r24
    14b4:	c5 01       	movw	r24, r10
    14b6:	b4 01       	movw	r22, r8
    14b8:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    14bc:	4b 01       	movw	r8, r22
    14be:	5c 01       	movw	r10, r24
    14c0:	b8 01       	movw	r22, r16
    14c2:	80 e0       	ldi	r24, 0x00	; 0
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    14ca:	2b 01       	movw	r4, r22
    14cc:	3c 01       	movw	r6, r24
    14ce:	b6 01       	movw	r22, r12
    14d0:	80 e0       	ldi	r24, 0x00	; 0
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    14d8:	9b 01       	movw	r18, r22
    14da:	ac 01       	movw	r20, r24
    14dc:	c3 01       	movw	r24, r6
    14de:	b2 01       	movw	r22, r4
    14e0:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    14e4:	a5 01       	movw	r20, r10
    14e6:	94 01       	movw	r18, r8
    14e8:	0e 94 89 13 	call	0x2712	; 0x2712 <atan2>
    14ec:	4b 01       	movw	r8, r22
    14ee:	5c 01       	movw	r10, r24
    14f0:	b6 01       	movw	r22, r12
    14f2:	60 0f       	add	r22, r16
    14f4:	71 1f       	adc	r23, r17
    14f6:	80 e0       	ldi	r24, 0x00	; 0
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	40 e0       	ldi	r20, 0x00	; 0
    1504:	5f e3       	ldi	r21, 0x3F	; 63
    1506:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    150a:	20 e0       	ldi	r18, 0x00	; 0
    150c:	30 e8       	ldi	r19, 0x80	; 128
    150e:	4c ef       	ldi	r20, 0xFC	; 252
    1510:	53 e4       	ldi	r21, 0x43	; 67
    1512:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    1516:	2b 01       	movw	r4, r22
    1518:	3c 01       	movw	r6, r24
    151a:	77 fa       	bst	r7, 7
    151c:	70 94       	com	r7
    151e:	77 f8       	bld	r7, 7
    1520:	70 94       	com	r7
    1522:	b7 01       	movw	r22, r14
    1524:	62 0d       	add	r22, r2
    1526:	73 1d       	adc	r23, r3
    1528:	80 e0       	ldi	r24, 0x00	; 0
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	0e 94 9a 14 	call	0x2934	; 0x2934 <__floatunsisf>
    1530:	20 e0       	ldi	r18, 0x00	; 0
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	40 e0       	ldi	r20, 0x00	; 0
    1536:	5f e3       	ldi	r21, 0x3F	; 63
    1538:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    153c:	20 e0       	ldi	r18, 0x00	; 0
    153e:	30 e0       	ldi	r19, 0x00	; 0
    1540:	49 eb       	ldi	r20, 0xB9	; 185
    1542:	53 e4       	ldi	r21, 0x43	; 67
    1544:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    1548:	6b 01       	movw	r12, r22
    154a:	7c 01       	movw	r14, r24
    154c:	f7 fa       	bst	r15, 7
    154e:	f0 94       	com	r15
    1550:	f7 f8       	bld	r15, 7
    1552:	f0 94       	com	r15
    1554:	c5 01       	movw	r24, r10
    1556:	b4 01       	movw	r22, r8
    1558:	0e 94 ed 13 	call	0x27da	; 0x27da <cos>
    155c:	2d 96       	adiw	r28, 0x0d	; 13
    155e:	6c af       	std	Y+60, r22	; 0x3c
    1560:	7d af       	std	Y+61, r23	; 0x3d
    1562:	8e af       	std	Y+62, r24	; 0x3e
    1564:	9f af       	std	Y+63, r25	; 0x3f
    1566:	2d 97       	sbiw	r28, 0x0d	; 13
    1568:	c5 01       	movw	r24, r10
    156a:	b4 01       	movw	r22, r8
    156c:	0e 94 2c 16 	call	0x2c58	; 0x2c58 <sin>
    1570:	61 96       	adiw	r28, 0x11	; 17
    1572:	6c af       	std	Y+60, r22	; 0x3c
    1574:	7d af       	std	Y+61, r23	; 0x3d
    1576:	8e af       	std	Y+62, r24	; 0x3e
    1578:	9f af       	std	Y+63, r25	; 0x3f
    157a:	61 97       	sbiw	r28, 0x11	; 17
    157c:	2a e0       	ldi	r18, 0x0A	; 10
    157e:	37 ed       	ldi	r19, 0xD7	; 215
    1580:	43 ea       	ldi	r20, 0xA3	; 163
    1582:	5c e3       	ldi	r21, 0x3C	; 60
    1584:	60 91 84 01 	lds	r22, 0x0184	; 0x800184 <orientation>
    1588:	70 91 85 01 	lds	r23, 0x0185	; 0x800185 <orientation+0x1>
    158c:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <orientation+0x2>
    1590:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <orientation+0x3>
    1594:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    1598:	65 96       	adiw	r28, 0x15	; 21
    159a:	6c af       	std	Y+60, r22	; 0x3c
    159c:	7d af       	std	Y+61, r23	; 0x3d
    159e:	8e af       	std	Y+62, r24	; 0x3e
    15a0:	9f af       	std	Y+63, r25	; 0x3f
    15a2:	65 97       	sbiw	r28, 0x15	; 21
    15a4:	28 e4       	ldi	r18, 0x48	; 72
    15a6:	31 ee       	ldi	r19, 0xE1	; 225
    15a8:	4a e7       	ldi	r20, 0x7A	; 122
    15aa:	5f e3       	ldi	r21, 0x3F	; 63
    15ac:	c5 01       	movw	r24, r10
    15ae:	b4 01       	movw	r22, r8
    15b0:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    15b4:	9b 01       	movw	r18, r22
    15b6:	ac 01       	movw	r20, r24
    15b8:	65 96       	adiw	r28, 0x15	; 21
    15ba:	6c ad       	ldd	r22, Y+60	; 0x3c
    15bc:	7d ad       	ldd	r23, Y+61	; 0x3d
    15be:	8e ad       	ldd	r24, Y+62	; 0x3e
    15c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    15c2:	65 97       	sbiw	r28, 0x15	; 21
    15c4:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    15c8:	65 96       	adiw	r28, 0x15	; 21
    15ca:	6c af       	std	Y+60, r22	; 0x3c
    15cc:	7d af       	std	Y+61, r23	; 0x3d
    15ce:	8e af       	std	Y+62, r24	; 0x3e
    15d0:	9f af       	std	Y+63, r25	; 0x3f
    15d2:	65 97       	sbiw	r28, 0x15	; 21
    15d4:	08 e8       	ldi	r16, 0x88	; 136
    15d6:	11 e0       	ldi	r17, 0x01	; 1
    15d8:	2a e0       	ldi	r18, 0x0A	; 10
    15da:	37 ed       	ldi	r19, 0xD7	; 215
    15dc:	43 ea       	ldi	r20, 0xA3	; 163
    15de:	5c e3       	ldi	r21, 0x3C	; 60
    15e0:	d8 01       	movw	r26, r16
    15e2:	6d 91       	ld	r22, X+
    15e4:	7d 91       	ld	r23, X+
    15e6:	8d 91       	ld	r24, X+
    15e8:	9c 91       	ld	r25, X
    15ea:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    15ee:	69 96       	adiw	r28, 0x19	; 25
    15f0:	6c af       	std	Y+60, r22	; 0x3c
    15f2:	7d af       	std	Y+61, r23	; 0x3d
    15f4:	8e af       	std	Y+62, r24	; 0x3e
    15f6:	9f af       	std	Y+63, r25	; 0x3f
    15f8:	69 97       	sbiw	r28, 0x19	; 25
    15fa:	2d 96       	adiw	r28, 0x0d	; 13
    15fc:	2c ad       	ldd	r18, Y+60	; 0x3c
    15fe:	3d ad       	ldd	r19, Y+61	; 0x3d
    1600:	4e ad       	ldd	r20, Y+62	; 0x3e
    1602:	5f ad       	ldd	r21, Y+63	; 0x3f
    1604:	2d 97       	sbiw	r28, 0x0d	; 13
    1606:	c3 01       	movw	r24, r6
    1608:	b2 01       	movw	r22, r4
    160a:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    160e:	4b 01       	movw	r8, r22
    1610:	5c 01       	movw	r10, r24
    1612:	61 96       	adiw	r28, 0x11	; 17
    1614:	2c ad       	ldd	r18, Y+60	; 0x3c
    1616:	3d ad       	ldd	r19, Y+61	; 0x3d
    1618:	4e ad       	ldd	r20, Y+62	; 0x3e
    161a:	5f ad       	ldd	r21, Y+63	; 0x3f
    161c:	61 97       	sbiw	r28, 0x11	; 17
    161e:	c7 01       	movw	r24, r14
    1620:	b6 01       	movw	r22, r12
    1622:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    1626:	9b 01       	movw	r18, r22
    1628:	ac 01       	movw	r20, r24
    162a:	c5 01       	movw	r24, r10
    162c:	b4 01       	movw	r22, r8
    162e:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    1632:	28 e4       	ldi	r18, 0x48	; 72
    1634:	31 ee       	ldi	r19, 0xE1	; 225
    1636:	4a e7       	ldi	r20, 0x7A	; 122
    1638:	5f e3       	ldi	r21, 0x3F	; 63
    163a:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    163e:	9b 01       	movw	r18, r22
    1640:	ac 01       	movw	r20, r24
    1642:	69 96       	adiw	r28, 0x19	; 25
    1644:	6c ad       	ldd	r22, Y+60	; 0x3c
    1646:	7d ad       	ldd	r23, Y+61	; 0x3d
    1648:	8e ad       	ldd	r24, Y+62	; 0x3e
    164a:	9f ad       	ldd	r25, Y+63	; 0x3f
    164c:	69 97       	sbiw	r28, 0x19	; 25
    164e:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    1652:	4b 01       	movw	r8, r22
    1654:	5c 01       	movw	r10, r24
    1656:	f8 01       	movw	r30, r16
    1658:	60 83       	st	Z, r22
    165a:	71 83       	std	Z+1, r23	; 0x01
    165c:	82 83       	std	Z+2, r24	; 0x02
    165e:	93 83       	std	Z+3, r25	; 0x03
    1660:	2a e0       	ldi	r18, 0x0A	; 10
    1662:	37 ed       	ldi	r19, 0xD7	; 215
    1664:	43 ea       	ldi	r20, 0xA3	; 163
    1666:	5c e3       	ldi	r21, 0x3C	; 60
    1668:	64 81       	ldd	r22, Z+4	; 0x04
    166a:	75 81       	ldd	r23, Z+5	; 0x05
    166c:	86 81       	ldd	r24, Z+6	; 0x06
    166e:	97 81       	ldd	r25, Z+7	; 0x07
    1670:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    1674:	69 96       	adiw	r28, 0x19	; 25
    1676:	6c af       	std	Y+60, r22	; 0x3c
    1678:	7d af       	std	Y+61, r23	; 0x3d
    167a:	8e af       	std	Y+62, r24	; 0x3e
    167c:	9f af       	std	Y+63, r25	; 0x3f
    167e:	69 97       	sbiw	r28, 0x19	; 25
    1680:	61 96       	adiw	r28, 0x11	; 17
    1682:	2c ad       	ldd	r18, Y+60	; 0x3c
    1684:	3d ad       	ldd	r19, Y+61	; 0x3d
    1686:	4e ad       	ldd	r20, Y+62	; 0x3e
    1688:	5f ad       	ldd	r21, Y+63	; 0x3f
    168a:	61 97       	sbiw	r28, 0x11	; 17
    168c:	c3 01       	movw	r24, r6
    168e:	b2 01       	movw	r22, r4
    1690:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    1694:	2b 01       	movw	r4, r22
    1696:	3c 01       	movw	r6, r24
    1698:	2d 96       	adiw	r28, 0x0d	; 13
    169a:	2c ad       	ldd	r18, Y+60	; 0x3c
    169c:	3d ad       	ldd	r19, Y+61	; 0x3d
    169e:	4e ad       	ldd	r20, Y+62	; 0x3e
    16a0:	5f ad       	ldd	r21, Y+63	; 0x3f
    16a2:	2d 97       	sbiw	r28, 0x0d	; 13
    16a4:	c7 01       	movw	r24, r14
    16a6:	b6 01       	movw	r22, r12
    16a8:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    16ac:	9b 01       	movw	r18, r22
    16ae:	ac 01       	movw	r20, r24
    16b0:	c3 01       	movw	r24, r6
    16b2:	b2 01       	movw	r22, r4
    16b4:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    16b8:	28 e4       	ldi	r18, 0x48	; 72
    16ba:	31 ee       	ldi	r19, 0xE1	; 225
    16bc:	4a e7       	ldi	r20, 0x7A	; 122
    16be:	5f e3       	ldi	r21, 0x3F	; 63
    16c0:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    16c4:	9b 01       	movw	r18, r22
    16c6:	ac 01       	movw	r20, r24
    16c8:	69 96       	adiw	r28, 0x19	; 25
    16ca:	6c ad       	ldd	r22, Y+60	; 0x3c
    16cc:	7d ad       	ldd	r23, Y+61	; 0x3d
    16ce:	8e ad       	ldd	r24, Y+62	; 0x3e
    16d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    16d2:	69 97       	sbiw	r28, 0x19	; 25
    16d4:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    16d8:	6b 01       	movw	r12, r22
    16da:	7c 01       	movw	r14, r24
    16dc:	d8 01       	movw	r26, r16
    16de:	14 96       	adiw	r26, 0x04	; 4
    16e0:	6d 93       	st	X+, r22
    16e2:	7d 93       	st	X+, r23
    16e4:	8d 93       	st	X+, r24
    16e6:	9c 93       	st	X, r25
    16e8:	17 97       	sbiw	r26, 0x07	; 7
    16ea:	29 ef       	ldi	r18, 0xF9	; 249
    16ec:	3f e0       	ldi	r19, 0x0F	; 15
    16ee:	49 e4       	ldi	r20, 0x49	; 73
    16f0:	50 e4       	ldi	r21, 0x40	; 64
    16f2:	65 96       	adiw	r28, 0x15	; 21
    16f4:	6c ad       	ldd	r22, Y+60	; 0x3c
    16f6:	7d ad       	ldd	r23, Y+61	; 0x3d
    16f8:	8e ad       	ldd	r24, Y+62	; 0x3e
    16fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    16fc:	65 97       	sbiw	r28, 0x15	; 21
    16fe:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    1702:	2b 01       	movw	r4, r22
    1704:	3c 01       	movw	r6, r24
    1706:	29 ef       	ldi	r18, 0xF9	; 249
    1708:	3f e0       	ldi	r19, 0x0F	; 15
    170a:	49 e4       	ldi	r20, 0x49	; 73
    170c:	50 ec       	ldi	r21, 0xC0	; 192
    170e:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
    1712:	88 23       	and	r24, r24
    1714:	4c f0       	brlt	.+18     	; 0x1728 <calculate4+0x716>
    1716:	40 92 84 01 	sts	0x0184, r4	; 0x800184 <orientation>
    171a:	50 92 85 01 	sts	0x0185, r5	; 0x800185 <orientation+0x1>
    171e:	60 92 86 01 	sts	0x0186, r6	; 0x800186 <orientation+0x2>
    1722:	70 92 87 01 	sts	0x0187, r7	; 0x800187 <orientation+0x3>
    1726:	10 c0       	rjmp	.+32     	; 0x1748 <calculate4+0x736>
    1728:	29 ef       	ldi	r18, 0xF9	; 249
    172a:	3f e0       	ldi	r19, 0x0F	; 15
    172c:	49 ec       	ldi	r20, 0xC9	; 201
    172e:	50 e4       	ldi	r21, 0x40	; 64
    1730:	c3 01       	movw	r24, r6
    1732:	b2 01       	movw	r22, r4
    1734:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    1738:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <orientation>
    173c:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <orientation+0x1>
    1740:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <orientation+0x2>
    1744:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <orientation+0x3>
    1748:	04 e7       	ldi	r16, 0x74	; 116
    174a:	11 e0       	ldi	r17, 0x01	; 1
    174c:	a5 01       	movw	r20, r10
    174e:	94 01       	movw	r18, r8
    1750:	29 96       	adiw	r28, 0x09	; 9
    1752:	6c ad       	ldd	r22, Y+60	; 0x3c
    1754:	7d ad       	ldd	r23, Y+61	; 0x3d
    1756:	8e ad       	ldd	r24, Y+62	; 0x3e
    1758:	9f ad       	ldd	r25, Y+63	; 0x3f
    175a:	29 97       	sbiw	r28, 0x09	; 9
    175c:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    1760:	f8 01       	movw	r30, r16
    1762:	60 83       	st	Z, r22
    1764:	71 83       	std	Z+1, r23	; 0x01
    1766:	82 83       	std	Z+2, r24	; 0x02
    1768:	93 83       	std	Z+3, r25	; 0x03
    176a:	a7 01       	movw	r20, r14
    176c:	96 01       	movw	r18, r12
    176e:	29 96       	adiw	r28, 0x09	; 9
    1770:	6c ad       	ldd	r22, Y+60	; 0x3c
    1772:	7d ad       	ldd	r23, Y+61	; 0x3d
    1774:	8e ad       	ldd	r24, Y+62	; 0x3e
    1776:	9f ad       	ldd	r25, Y+63	; 0x3f
    1778:	29 97       	sbiw	r28, 0x09	; 9
    177a:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    177e:	d8 01       	movw	r26, r16
    1780:	14 96       	adiw	r26, 0x04	; 4
    1782:	6d 93       	st	X+, r22
    1784:	7d 93       	st	X+, r23
    1786:	8d 93       	st	X+, r24
    1788:	9c 93       	st	X, r25
    178a:	17 97       	sbiw	r26, 0x07	; 7
    178c:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <orientation>
    1790:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <orientation+0x1>
    1794:	a0 91 86 01 	lds	r26, 0x0186	; 0x800186 <orientation+0x2>
    1798:	b0 91 87 01 	lds	r27, 0x0187	; 0x800187 <orientation+0x3>
    179c:	f8 01       	movw	r30, r16
    179e:	80 87       	std	Z+8, r24	; 0x08
    17a0:	91 87       	std	Z+9, r25	; 0x09
    17a2:	a2 87       	std	Z+10, r26	; 0x0a
    17a4:	b3 87       	std	Z+11, r27	; 0x0b
    17a6:	c2 59       	subi	r28, 0x92	; 146
    17a8:	df 4f       	sbci	r29, 0xFF	; 255
    17aa:	0f b6       	in	r0, 0x3f	; 63
    17ac:	f8 94       	cli
    17ae:	de bf       	out	0x3e, r29	; 62
    17b0:	0f be       	out	0x3f, r0	; 63
    17b2:	cd bf       	out	0x3d, r28	; 61
    17b4:	df 91       	pop	r29
    17b6:	cf 91       	pop	r28
    17b8:	1f 91       	pop	r17
    17ba:	0f 91       	pop	r16
    17bc:	ff 90       	pop	r15
    17be:	ef 90       	pop	r14
    17c0:	df 90       	pop	r13
    17c2:	cf 90       	pop	r12
    17c4:	bf 90       	pop	r11
    17c6:	af 90       	pop	r10
    17c8:	9f 90       	pop	r9
    17ca:	8f 90       	pop	r8
    17cc:	7f 90       	pop	r7
    17ce:	6f 90       	pop	r6
    17d0:	5f 90       	pop	r5
    17d2:	4f 90       	pop	r4
    17d4:	3f 90       	pop	r3
    17d6:	2f 90       	pop	r2
    17d8:	08 95       	ret

000017da <drop>:
    17da:	cf 92       	push	r12
    17dc:	df 92       	push	r13
    17de:	ef 92       	push	r14
    17e0:	ff 92       	push	r15
    17e2:	0f 93       	push	r16
    17e4:	1f 93       	push	r17
    17e6:	cf 93       	push	r28
    17e8:	df 93       	push	r29
    17ea:	c0 90 80 01 	lds	r12, 0x0180	; 0x800180 <scale>
    17ee:	d0 90 81 01 	lds	r13, 0x0181	; 0x800181 <scale+0x1>
    17f2:	e0 90 82 01 	lds	r14, 0x0182	; 0x800182 <scale+0x2>
    17f6:	f0 90 83 01 	lds	r15, 0x0183	; 0x800183 <scale+0x3>
    17fa:	c4 e7       	ldi	r28, 0x74	; 116
    17fc:	d1 e0       	ldi	r29, 0x01	; 1
    17fe:	08 e8       	ldi	r16, 0x88	; 136
    1800:	11 e0       	ldi	r17, 0x01	; 1
    1802:	a7 01       	movw	r20, r14
    1804:	96 01       	movw	r18, r12
    1806:	f8 01       	movw	r30, r16
    1808:	60 81       	ld	r22, Z
    180a:	71 81       	ldd	r23, Z+1	; 0x01
    180c:	82 81       	ldd	r24, Z+2	; 0x02
    180e:	93 81       	ldd	r25, Z+3	; 0x03
    1810:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    1814:	68 83       	st	Y, r22
    1816:	79 83       	std	Y+1, r23	; 0x01
    1818:	8a 83       	std	Y+2, r24	; 0x02
    181a:	9b 83       	std	Y+3, r25	; 0x03
    181c:	f8 01       	movw	r30, r16
    181e:	24 81       	ldd	r18, Z+4	; 0x04
    1820:	35 81       	ldd	r19, Z+5	; 0x05
    1822:	46 81       	ldd	r20, Z+6	; 0x06
    1824:	57 81       	ldd	r21, Z+7	; 0x07
    1826:	c7 01       	movw	r24, r14
    1828:	b6 01       	movw	r22, r12
    182a:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    182e:	6c 83       	std	Y+4, r22	; 0x04
    1830:	7d 83       	std	Y+5, r23	; 0x05
    1832:	8e 83       	std	Y+6, r24	; 0x06
    1834:	9f 83       	std	Y+7, r25	; 0x07
    1836:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <orientation>
    183a:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <orientation+0x1>
    183e:	a0 91 86 01 	lds	r26, 0x0186	; 0x800186 <orientation+0x2>
    1842:	b0 91 87 01 	lds	r27, 0x0187	; 0x800187 <orientation+0x3>
    1846:	88 87       	std	Y+8, r24	; 0x08
    1848:	99 87       	std	Y+9, r25	; 0x09
    184a:	aa 87       	std	Y+10, r26	; 0x0a
    184c:	bb 87       	std	Y+11, r27	; 0x0b
    184e:	df 91       	pop	r29
    1850:	cf 91       	pop	r28
    1852:	1f 91       	pop	r17
    1854:	0f 91       	pop	r16
    1856:	ff 90       	pop	r15
    1858:	ef 90       	pop	r14
    185a:	df 90       	pop	r13
    185c:	cf 90       	pop	r12
    185e:	08 95       	ret

00001860 <location_calculate>:
 stars = 4 - (lost[0]+lost[1]+lost[2]+lost[3]);
 }
 }

void location_calculate(unsigned int* data)
{
    1860:	cf 93       	push	r28
    1862:	df 93       	push	r29
    1864:	ec 01       	movw	r28, r24
countstar(data);
    1866:	0e 94 c5 07 	call	0xf8a	; 0xf8a <countstar>
switch(stars) 
    186a:	20 91 71 01 	lds	r18, 0x0171	; 0x800171 <stars>
    186e:	30 91 72 01 	lds	r19, 0x0172	; 0x800172 <stars+0x1>
    1872:	22 30       	cpi	r18, 0x02	; 2
    1874:	31 05       	cpc	r19, r1
    1876:	a9 f0       	breq	.+42     	; 0x18a2 <location_calculate+0x42>
    1878:	3c f4       	brge	.+14     	; 0x1888 <location_calculate+0x28>
    187a:	21 15       	cp	r18, r1
    187c:	31 05       	cpc	r19, r1
    187e:	b9 f0       	breq	.+46     	; 0x18ae <location_calculate+0x4e>
    1880:	21 30       	cpi	r18, 0x01	; 1
    1882:	31 05       	cpc	r19, r1
    1884:	89 f0       	breq	.+34     	; 0x18a8 <location_calculate+0x48>
    1886:	16 c0       	rjmp	.+44     	; 0x18b4 <location_calculate+0x54>
    1888:	23 30       	cpi	r18, 0x03	; 3
    188a:	31 05       	cpc	r19, r1
    188c:	39 f0       	breq	.+14     	; 0x189c <location_calculate+0x3c>
    188e:	24 30       	cpi	r18, 0x04	; 4
    1890:	31 05       	cpc	r19, r1
    1892:	81 f4       	brne	.+32     	; 0x18b4 <location_calculate+0x54>
{
	case 4:
	calculate4(data);
    1894:	ce 01       	movw	r24, r28
    1896:	0e 94 09 08 	call	0x1012	; 0x1012 <calculate4>
	break;
    189a:	0e c0       	rjmp	.+28     	; 0x18b8 <location_calculate+0x58>
	*/
}

void calculate3(unsigned int* data)
{
    drop(); // change later
    189c:	0e 94 ed 0b 	call	0x17da	; 0x17da <drop>
    18a0:	0b c0       	rjmp	.+22     	; 0x18b8 <location_calculate+0x58>
	case 3:
	calculate3(data);
	break;
	
	case 2:
	drop();
    18a2:	0e 94 ed 0b 	call	0x17da	; 0x17da <drop>
	break;
    18a6:	08 c0       	rjmp	.+16     	; 0x18b8 <location_calculate+0x58>
	
	case 1:
	drop();
    18a8:	0e 94 ed 0b 	call	0x17da	; 0x17da <drop>
	break;
    18ac:	05 c0       	rjmp	.+10     	; 0x18b8 <location_calculate+0x58>
	
	case 0:
	drop();
    18ae:	0e 94 ed 0b 	call	0x17da	; 0x17da <drop>
	break;
    18b2:	02 c0       	rjmp	.+4      	; 0x18b8 <location_calculate+0x58>
	
	default: 
	drop(); // caution
    18b4:	0e 94 ed 0b 	call	0x17da	; 0x17da <drop>
}

}
    18b8:	df 91       	pop	r29
    18ba:	cf 91       	pop	r28
    18bc:	08 95       	ret

000018be <location_update>:
 if (m_wii_open()){init_mwii =1;}
 else {}//error
 }

 void location_update(unsigned int* data)
 {
    18be:	cf 93       	push	r28
    18c0:	df 93       	push	r29
    18c2:	ec 01       	movw	r28, r24
 if (!init_mwii){location_init();}
    18c4:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <init_mwii>
    18c8:	81 11       	cpse	r24, r1
    18ca:	02 c0       	rjmp	.+4      	; 0x18d0 <location_update+0x12>
    18cc:	0e 94 bd 07 	call	0xf7a	; 0xf7a <location_init>
 // if (m_wii_read(data)) 
 //{
 location_calculate(data);
    18d0:	ce 01       	movw	r24, r28
    18d2:	0e 94 30 0c 	call	0x1860	; 0x1860 <location_calculate>
 setPosition(location);
    18d6:	84 e7       	ldi	r24, 0x74	; 116
    18d8:	91 e0       	ldi	r25, 0x01	; 1
    18da:	0e 94 c7 03 	call	0x78e	; 0x78e <setPosition>
  //}
 //else {}//error
 }
    18de:	df 91       	pop	r29
    18e0:	cf 91       	pop	r28
    18e2:	08 95       	ret

000018e4 <update_puck>:
	 m_usb_tx_int(PT_ADC[4]);
     m_usb_tx_string("\t state: ");
	 m_usb_tx_int(getPuckState());
	 m_usb_tx_string("\n");

}
    18e4:	2f 92       	push	r2
    18e6:	3f 92       	push	r3
    18e8:	4f 92       	push	r4
    18ea:	5f 92       	push	r5
    18ec:	6f 92       	push	r6
    18ee:	7f 92       	push	r7
    18f0:	8f 92       	push	r8
    18f2:	9f 92       	push	r9
    18f4:	af 92       	push	r10
    18f6:	bf 92       	push	r11
    18f8:	cf 92       	push	r12
    18fa:	df 92       	push	r13
    18fc:	ef 92       	push	r14
    18fe:	ff 92       	push	r15
    1900:	0f 93       	push	r16
    1902:	1f 93       	push	r17
    1904:	cf 93       	push	r28
    1906:	df 93       	push	r29
    1908:	cd b7       	in	r28, 0x3d	; 61
    190a:	de b7       	in	r29, 0x3e	; 62
    190c:	64 97       	sbiw	r28, 0x14	; 20
    190e:	0f b6       	in	r0, 0x3f	; 63
    1910:	f8 94       	cli
    1912:	de bf       	out	0x3e, r29	; 62
    1914:	0f be       	out	0x3f, r0	; 63
    1916:	cd bf       	out	0x3d, r28	; 61
    1918:	84 e1       	ldi	r24, 0x14	; 20
    191a:	ed e0       	ldi	r30, 0x0D	; 13
    191c:	f1 e0       	ldi	r31, 0x01	; 1
    191e:	de 01       	movw	r26, r28
    1920:	11 96       	adiw	r26, 0x01	; 1
    1922:	01 90       	ld	r0, Z+
    1924:	0d 92       	st	X+, r0
    1926:	8a 95       	dec	r24
    1928:	e1 f7       	brne	.-8      	; 0x1922 <update_puck+0x3e>
    192a:	0e 94 1e 01 	call	0x23c	; 0x23c <ADC0>
    192e:	08 e9       	ldi	r16, 0x98	; 152
    1930:	11 e0       	ldi	r17, 0x01	; 1
    1932:	f8 01       	movw	r30, r16
    1934:	60 83       	st	Z, r22
    1936:	71 83       	std	Z+1, r23	; 0x01
    1938:	82 83       	std	Z+2, r24	; 0x02
    193a:	93 83       	std	Z+3, r25	; 0x03
    193c:	0e 94 4a 01 	call	0x294	; 0x294 <ADC1>
    1940:	f8 01       	movw	r30, r16
    1942:	64 83       	std	Z+4, r22	; 0x04
    1944:	75 83       	std	Z+5, r23	; 0x05
    1946:	86 83       	std	Z+6, r24	; 0x06
    1948:	97 83       	std	Z+7, r25	; 0x07
    194a:	0e 94 76 01 	call	0x2ec	; 0x2ec <ADC2>
    194e:	f8 01       	movw	r30, r16
    1950:	60 87       	std	Z+8, r22	; 0x08
    1952:	71 87       	std	Z+9, r23	; 0x09
    1954:	82 87       	std	Z+10, r24	; 0x0a
    1956:	93 87       	std	Z+11, r25	; 0x0b
    1958:	0e 94 a2 01 	call	0x344	; 0x344 <ADC3>
    195c:	f8 01       	movw	r30, r16
    195e:	64 87       	std	Z+12, r22	; 0x0c
    1960:	75 87       	std	Z+13, r23	; 0x0d
    1962:	86 87       	std	Z+14, r24	; 0x0e
    1964:	97 87       	std	Z+15, r25	; 0x0f
    1966:	0e 94 ce 01 	call	0x39c	; 0x39c <ADC4>
    196a:	f8 01       	movw	r30, r16
    196c:	60 8b       	std	Z+16, r22	; 0x10
    196e:	71 8b       	std	Z+17, r23	; 0x11
    1970:	82 8b       	std	Z+18, r24	; 0x12
    1972:	93 8b       	std	Z+19, r25	; 0x13
    1974:	78 01       	movw	r14, r16
    1976:	0f 2e       	mov	r0, r31
    1978:	fc ea       	ldi	r31, 0xAC	; 172
    197a:	cf 2e       	mov	r12, r31
    197c:	f1 e0       	ldi	r31, 0x01	; 1
    197e:	df 2e       	mov	r13, r31
    1980:	f0 2d       	mov	r31, r0
    1982:	20 e0       	ldi	r18, 0x00	; 0
    1984:	30 e0       	ldi	r19, 0x00	; 0
    1986:	48 ec       	ldi	r20, 0xC8	; 200
    1988:	52 e4       	ldi	r21, 0x42	; 66
    198a:	f8 01       	movw	r30, r16
    198c:	60 81       	ld	r22, Z
    198e:	71 81       	ldd	r23, Z+1	; 0x01
    1990:	82 81       	ldd	r24, Z+2	; 0x02
    1992:	93 81       	ldd	r25, Z+3	; 0x03
    1994:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
    1998:	88 23       	and	r24, r24
    199a:	2c f4       	brge	.+10     	; 0x19a6 <update_puck+0xc2>
    199c:	f8 01       	movw	r30, r16
    199e:	10 82       	st	Z, r1
    19a0:	11 82       	std	Z+1, r1	; 0x01
    19a2:	12 82       	std	Z+2, r1	; 0x02
    19a4:	13 82       	std	Z+3, r1	; 0x03
    19a6:	0c 5f       	subi	r16, 0xFC	; 252
    19a8:	1f 4f       	sbci	r17, 0xFF	; 255
    19aa:	0c 15       	cp	r16, r12
    19ac:	1d 05       	cpc	r17, r13
    19ae:	49 f7       	brne	.-46     	; 0x1982 <update_puck+0x9e>
    19b0:	ce 01       	movw	r24, r28
    19b2:	01 96       	adiw	r24, 0x01	; 1
    19b4:	1c 01       	movw	r2, r24
    19b6:	41 2c       	mov	r4, r1
    19b8:	51 2c       	mov	r5, r1
    19ba:	32 01       	movw	r6, r4
    19bc:	00 e0       	ldi	r16, 0x00	; 0
    19be:	10 e0       	ldi	r17, 0x00	; 0
    19c0:	f7 01       	movw	r30, r14
    19c2:	81 90       	ld	r8, Z+
    19c4:	91 90       	ld	r9, Z+
    19c6:	a1 90       	ld	r10, Z+
    19c8:	b1 90       	ld	r11, Z+
    19ca:	7f 01       	movw	r14, r30
    19cc:	f1 01       	movw	r30, r2
    19ce:	21 91       	ld	r18, Z+
    19d0:	31 91       	ld	r19, Z+
    19d2:	41 91       	ld	r20, Z+
    19d4:	51 91       	ld	r21, Z+
    19d6:	1f 01       	movw	r2, r30
    19d8:	c5 01       	movw	r24, r10
    19da:	b4 01       	movw	r22, r8
    19dc:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    19e0:	9b 01       	movw	r18, r22
    19e2:	ac 01       	movw	r20, r24
    19e4:	c3 01       	movw	r24, r6
    19e6:	b2 01       	movw	r22, r4
    19e8:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    19ec:	2b 01       	movw	r4, r22
    19ee:	3c 01       	movw	r6, r24
    19f0:	b8 01       	movw	r22, r16
    19f2:	11 0f       	add	r17, r17
    19f4:	88 0b       	sbc	r24, r24
    19f6:	99 0b       	sbc	r25, r25
    19f8:	0e 94 9c 14 	call	0x2938	; 0x2938 <__floatsisf>
    19fc:	9b 01       	movw	r18, r22
    19fe:	ac 01       	movw	r20, r24
    1a00:	c5 01       	movw	r24, r10
    1a02:	b4 01       	movw	r22, r8
    1a04:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    1a08:	0e 94 64 14 	call	0x28c8	; 0x28c8 <__fixsfsi>
    1a0c:	8b 01       	movw	r16, r22
    1a0e:	ec 14       	cp	r14, r12
    1a10:	fd 04       	cpc	r15, r13
    1a12:	b1 f6       	brne	.-84     	; 0x19c0 <update_puck+0xdc>
    1a14:	07 2e       	mov	r0, r23
    1a16:	00 0c       	add	r0, r0
    1a18:	88 0b       	sbc	r24, r24
    1a1a:	99 0b       	sbc	r25, r25
    1a1c:	0e 94 9c 14 	call	0x2938	; 0x2938 <__floatsisf>
    1a20:	9b 01       	movw	r18, r22
    1a22:	ac 01       	movw	r20, r24
    1a24:	c3 01       	movw	r24, r6
    1a26:	b2 01       	movw	r22, r4
    1a28:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <__divsf3>
    1a2c:	60 93 ac 01 	sts	0x01AC, r22	; 0x8001ac <puck_angle>
    1a30:	70 93 ad 01 	sts	0x01AD, r23	; 0x8001ad <puck_angle+0x1>
    1a34:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <puck_angle+0x2>
    1a38:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <puck_angle+0x3>
    1a3c:	05 36       	cpi	r16, 0x65	; 101
    1a3e:	11 05       	cpc	r17, r1
    1a40:	0c f4       	brge	.+2      	; 0x1a44 <update_puck+0x160>
    1a42:	46 c0       	rjmp	.+140    	; 0x1ad0 <update_puck+0x1ec>
    1a44:	c0 90 a0 01 	lds	r12, 0x01A0	; 0x8001a0 <PT_ADC+0x8>
    1a48:	d0 90 a1 01 	lds	r13, 0x01A1	; 0x8001a1 <PT_ADC+0x9>
    1a4c:	e0 90 a2 01 	lds	r14, 0x01A2	; 0x8001a2 <PT_ADC+0xa>
    1a50:	f0 90 a3 01 	lds	r15, 0x01A3	; 0x8001a3 <PT_ADC+0xb>
    1a54:	20 e0       	ldi	r18, 0x00	; 0
    1a56:	30 e0       	ldi	r19, 0x00	; 0
    1a58:	4a e7       	ldi	r20, 0x7A	; 122
    1a5a:	54 e4       	ldi	r21, 0x44	; 68
    1a5c:	c7 01       	movw	r24, r14
    1a5e:	b6 01       	movw	r22, r12
    1a60:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
    1a64:	18 16       	cp	r1, r24
    1a66:	7c f5       	brge	.+94     	; 0x1ac6 <update_puck+0x1e2>
    1a68:	20 e0       	ldi	r18, 0x00	; 0
    1a6a:	30 e8       	ldi	r19, 0x80	; 128
    1a6c:	4c e7       	ldi	r20, 0x7C	; 124
    1a6e:	54 e4       	ldi	r21, 0x44	; 68
    1a70:	c7 01       	movw	r24, r14
    1a72:	b6 01       	movw	r22, r12
    1a74:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
    1a78:	88 23       	and	r24, r24
    1a7a:	2c f5       	brge	.+74     	; 0x1ac6 <update_puck+0x1e2>
    1a7c:	20 e0       	ldi	r18, 0x00	; 0
    1a7e:	30 ec       	ldi	r19, 0xC0	; 192
    1a80:	43 e7       	ldi	r20, 0x73	; 115
    1a82:	54 e4       	ldi	r21, 0x44	; 68
    1a84:	60 91 9c 01 	lds	r22, 0x019C	; 0x80019c <PT_ADC+0x4>
    1a88:	70 91 9d 01 	lds	r23, 0x019D	; 0x80019d <PT_ADC+0x5>
    1a8c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <PT_ADC+0x6>
    1a90:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <PT_ADC+0x7>
    1a94:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
    1a98:	18 16       	cp	r1, r24
    1a9a:	84 f0       	brlt	.+32     	; 0x1abc <update_puck+0x1d8>
    1a9c:	20 e0       	ldi	r18, 0x00	; 0
    1a9e:	30 ec       	ldi	r19, 0xC0	; 192
    1aa0:	43 e7       	ldi	r20, 0x73	; 115
    1aa2:	54 e4       	ldi	r21, 0x44	; 68
    1aa4:	60 91 a4 01 	lds	r22, 0x01A4	; 0x8001a4 <PT_ADC+0xc>
    1aa8:	70 91 a5 01 	lds	r23, 0x01A5	; 0x8001a5 <PT_ADC+0xd>
    1aac:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <PT_ADC+0xe>
    1ab0:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <PT_ADC+0xf>
    1ab4:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <__gesf2>
    1ab8:	18 16       	cp	r1, r24
    1aba:	2c f4       	brge	.+10     	; 0x1ac6 <update_puck+0x1e2>
    1abc:	82 e0       	ldi	r24, 0x02	; 2
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	0e 94 c1 03 	call	0x782	; 0x782 <setPuckState>
    1ac4:	09 c0       	rjmp	.+18     	; 0x1ad8 <update_puck+0x1f4>
    1ac6:	81 e0       	ldi	r24, 0x01	; 1
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	0e 94 c1 03 	call	0x782	; 0x782 <setPuckState>
    1ace:	04 c0       	rjmp	.+8      	; 0x1ad8 <update_puck+0x1f4>
    1ad0:	80 e0       	ldi	r24, 0x00	; 0
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	0e 94 c1 03 	call	0x782	; 0x782 <setPuckState>
    1ad8:	64 96       	adiw	r28, 0x14	; 20
    1ada:	0f b6       	in	r0, 0x3f	; 63
    1adc:	f8 94       	cli
    1ade:	de bf       	out	0x3e, r29	; 62
    1ae0:	0f be       	out	0x3f, r0	; 63
    1ae2:	cd bf       	out	0x3d, r28	; 61
    1ae4:	df 91       	pop	r29
    1ae6:	cf 91       	pop	r28
    1ae8:	1f 91       	pop	r17
    1aea:	0f 91       	pop	r16
    1aec:	ff 90       	pop	r15
    1aee:	ef 90       	pop	r14
    1af0:	df 90       	pop	r13
    1af2:	cf 90       	pop	r12
    1af4:	bf 90       	pop	r11
    1af6:	af 90       	pop	r10
    1af8:	9f 90       	pop	r9
    1afa:	8f 90       	pop	r8
    1afc:	7f 90       	pop	r7
    1afe:	6f 90       	pop	r6
    1b00:	5f 90       	pop	r5
    1b02:	4f 90       	pop	r4
    1b04:	3f 90       	pop	r3
    1b06:	2f 90       	pop	r2
    1b08:	08 95       	ret

00001b0a <shoot>:
	
}

void shoot(){
	//kick the puck into the goal
	set(PORTB, 7);
    1b0a:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1b0c:	87 ea       	ldi	r24, 0xA7	; 167
    1b0e:	91 e6       	ldi	r25, 0x61	; 97
    1b10:	01 97       	sbiw	r24, 0x01	; 1
    1b12:	f1 f7       	brne	.-4      	; 0x1b10 <shoot+0x6>
    1b14:	00 c0       	rjmp	.+0      	; 0x1b16 <shoot+0xc>
    1b16:	00 00       	nop
	m_wait(100);
	clear(PORTB, 7);
    1b18:	2f 98       	cbi	0x05, 7	; 5
    1b1a:	08 95       	ret

00001b1c <comm_test>:
}


void comm_test(){
    1b1c:	4a e0       	ldi	r20, 0x0A	; 10
    1b1e:	50 e0       	ldi	r21, 0x00	; 0
     int i; // for flashing
     for(i=0;i<10;i++){
     clear(PORTD,LED_pin);
    1b20:	eb e0       	ldi	r30, 0x0B	; 11
    1b22:	f1 e0       	ldi	r31, 0x01	; 1
    1b24:	61 e0       	ldi	r22, 0x01	; 1
    1b26:	70 e0       	ldi	r23, 0x00	; 0
    1b28:	9b b1       	in	r25, 0x0b	; 11
    1b2a:	9b 01       	movw	r18, r22
    1b2c:	00 80       	ld	r0, Z
    1b2e:	02 c0       	rjmp	.+4      	; 0x1b34 <comm_test+0x18>
    1b30:	22 0f       	add	r18, r18
    1b32:	33 1f       	adc	r19, r19
    1b34:	0a 94       	dec	r0
    1b36:	e2 f7       	brpl	.-8      	; 0x1b30 <comm_test+0x14>
    1b38:	82 2f       	mov	r24, r18
    1b3a:	80 95       	com	r24
    1b3c:	89 23       	and	r24, r25
    1b3e:	8b b9       	out	0x0b, r24	; 11
    1b40:	2f e3       	ldi	r18, 0x3F	; 63
    1b42:	82 e4       	ldi	r24, 0x42	; 66
    1b44:	9f e0       	ldi	r25, 0x0F	; 15
    1b46:	21 50       	subi	r18, 0x01	; 1
    1b48:	80 40       	sbci	r24, 0x00	; 0
    1b4a:	90 40       	sbci	r25, 0x00	; 0
    1b4c:	e1 f7       	brne	.-8      	; 0x1b46 <comm_test+0x2a>
    1b4e:	00 c0       	rjmp	.+0      	; 0x1b50 <comm_test+0x34>
    1b50:	00 00       	nop
	 m_wait(5000);
	 set(PORTD,LED_pin);
    1b52:	2b b1       	in	r18, 0x0b	; 11
    1b54:	cb 01       	movw	r24, r22
    1b56:	00 80       	ld	r0, Z
    1b58:	02 c0       	rjmp	.+4      	; 0x1b5e <comm_test+0x42>
    1b5a:	88 0f       	add	r24, r24
    1b5c:	99 1f       	adc	r25, r25
    1b5e:	0a 94       	dec	r0
    1b60:	e2 f7       	brpl	.-8      	; 0x1b5a <comm_test+0x3e>
    1b62:	82 2b       	or	r24, r18
    1b64:	8b b9       	out	0x0b, r24	; 11
    1b66:	2f e3       	ldi	r18, 0x3F	; 63
    1b68:	82 e4       	ldi	r24, 0x42	; 66
    1b6a:	9f e0       	ldi	r25, 0x0F	; 15
    1b6c:	21 50       	subi	r18, 0x01	; 1
    1b6e:	80 40       	sbci	r24, 0x00	; 0
    1b70:	90 40       	sbci	r25, 0x00	; 0
    1b72:	e1 f7       	brne	.-8      	; 0x1b6c <comm_test+0x50>
    1b74:	00 c0       	rjmp	.+0      	; 0x1b76 <comm_test+0x5a>
    1b76:	00 00       	nop
    1b78:	41 50       	subi	r20, 0x01	; 1
    1b7a:	51 09       	sbc	r21, r1
}


void comm_test(){
     int i; // for flashing
     for(i=0;i<10;i++){
    1b7c:	a9 f6       	brne	.-86     	; 0x1b28 <comm_test+0xc>
     clear(PORTD,LED_pin);
	 m_wait(5000);
	 set(PORTD,LED_pin);
	 m_wait(5000);} // flash for 10 times				
     }
    1b7e:	08 95       	ret

00001b80 <init0>:

void init0(unsigned int frequency)
{
	OCR0A = frequency;
    1b80:	87 bd       	out	0x27, r24	; 39

	//clock prescaler /1024
	set(TCCR0B, CS02);
    1b82:	85 b5       	in	r24, 0x25	; 37
    1b84:	84 60       	ori	r24, 0x04	; 4
    1b86:	85 bd       	out	0x25, r24	; 37
	clear(TCCR0B, CS01);
    1b88:	85 b5       	in	r24, 0x25	; 37
    1b8a:	8d 7f       	andi	r24, 0xFD	; 253
    1b8c:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS00);
    1b8e:	85 b5       	in	r24, 0x25	; 37
    1b90:	81 60       	ori	r24, 0x01	; 1
    1b92:	85 bd       	out	0x25, r24	; 37

	//timer mode: up to OCR0A
	clear(TCCR0B, WGM02);
    1b94:	85 b5       	in	r24, 0x25	; 37
    1b96:	87 7f       	andi	r24, 0xF7	; 247
    1b98:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A, WGM01);
    1b9a:	84 b5       	in	r24, 0x24	; 36
    1b9c:	82 60       	ori	r24, 0x02	; 2
    1b9e:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A, WGM00);
    1ba0:	84 b5       	in	r24, 0x24	; 36
    1ba2:	8e 7f       	andi	r24, 0xFE	; 254
    1ba4:	84 bd       	out	0x24, r24	; 36
    1ba6:	08 95       	ret

00001ba8 <interupt0>:
}

void interupt0(bool on)
{    if(on)
    1ba8:	88 23       	and	r24, r24
    1baa:	39 f0       	breq	.+14     	; 0x1bba <interupt0+0x12>
	{
		set(TIMSK0, OCIE0A); //enable timer interupt
    1bac:	ee e6       	ldi	r30, 0x6E	; 110
    1bae:	f0 e0       	ldi	r31, 0x00	; 0
    1bb0:	80 81       	ld	r24, Z
    1bb2:	82 60       	ori	r24, 0x02	; 2
    1bb4:	80 83       	st	Z, r24
		sei(); //turn on interupts
    1bb6:	78 94       	sei
    1bb8:	08 95       	ret
	}
	else
	{   clear(TIMSK0, OCIE0A);}
    1bba:	ee e6       	ldi	r30, 0x6E	; 110
    1bbc:	f0 e0       	ldi	r31, 0x00	; 0
    1bbe:	80 81       	ld	r24, Z
    1bc0:	8d 7f       	andi	r24, 0xFD	; 253
    1bc2:	80 83       	st	Z, r24
    1bc4:	08 95       	ret

00001bc6 <initialize>:
    m_red(ON);
	if(m_usb_isconnected()) {m_usb_tx_string("error!\n\r");}
}

void initialize() {
	m_clockdivide(0); //the system clock must have 16 MHz frequency to use mBUS
    1bc6:	e1 e6       	ldi	r30, 0x61	; 97
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	80 e8       	ldi	r24, 0x80	; 128
    1bcc:	80 83       	st	Z, r24
    1bce:	10 82       	st	Z, r1
	m_red(OFF);
    1bd0:	6e 9a       	sbi	0x0d, 6	; 13
    1bd2:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
    1bd4:	6a 9a       	sbi	0x0d, 2	; 13
    1bd6:	72 9a       	sbi	0x0e, 2	; 14

    //enable inputs for switches,  enable the internal pull-up resistor
	clear(DDRB, 4);
    1bd8:	24 98       	cbi	0x04, 4	; 4
	set(PORTB, 4);
    1bda:	2c 9a       	sbi	0x05, 4	; 5
	clear(DDRB, 5);
    1bdc:	25 98       	cbi	0x04, 5	; 4
	set(PORTB, 5);
    1bde:	2d 9a       	sbi	0x05, 5	; 5

    // use a switch on B4 for team
	if(!check(PINB,4)) 
    1be0:	1c 99       	sbic	0x03, 4	; 3
    1be2:	06 c0       	rjmp	.+12     	; 0x1bf0 <initialize+0x2a>
	{LED_pin = 3;} 
    1be4:	83 e0       	ldi	r24, 0x03	; 3
    1be6:	90 e0       	ldi	r25, 0x00	; 0
    1be8:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <LED_pin+0x1>
    1bec:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <LED_pin>
    //use a switch on B5 for goal
    if(!check(PINB,5)) 
    1bf0:	1d 99       	sbic	0x03, 5	; 3
    1bf2:	0c c0       	rjmp	.+24     	; 0x1c0c <initialize+0x46>
	{goal_x = -115;
    1bf4:	8d e8       	ldi	r24, 0x8D	; 141
    1bf6:	9f ef       	ldi	r25, 0xFF	; 255
    1bf8:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <goal_x+0x1>
    1bfc:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <goal_x>
	 home_x = 70;}
    1c00:	86 e4       	ldi	r24, 0x46	; 70
    1c02:	90 e0       	ldi	r25, 0x00	; 0
    1c04:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <home_x+0x1>
    1c08:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <home_x>
	
	// common cathode for LED input
	clear(DDRD, 4); 
    1c0c:	54 98       	cbi	0x0a, 4	; 10
	set(PORTD,4);
    1c0e:	5c 9a       	sbi	0x0b, 4	; 11
	//Enabling Positioning LED Pins for output
	set(DDRD, LED_pin);
    1c10:	4a b1       	in	r20, 0x0a	; 10
    1c12:	eb e0       	ldi	r30, 0x0B	; 11
    1c14:	f1 e0       	ldi	r31, 0x01	; 1
    1c16:	81 e0       	ldi	r24, 0x01	; 1
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	9c 01       	movw	r18, r24
    1c1c:	00 80       	ld	r0, Z
    1c1e:	02 c0       	rjmp	.+4      	; 0x1c24 <initialize+0x5e>
    1c20:	22 0f       	add	r18, r18
    1c22:	33 1f       	adc	r19, r19
    1c24:	0a 94       	dec	r0
    1c26:	e2 f7       	brpl	.-8      	; 0x1c20 <initialize+0x5a>
    1c28:	24 2b       	or	r18, r20
    1c2a:	2a b9       	out	0x0a, r18	; 10
	set(PORTD, LED_pin);
    1c2c:	2b b1       	in	r18, 0x0b	; 11
    1c2e:	00 80       	ld	r0, Z
    1c30:	02 c0       	rjmp	.+4      	; 0x1c36 <initialize+0x70>
    1c32:	88 0f       	add	r24, r24
    1c34:	99 1f       	adc	r25, r25
    1c36:	0a 94       	dec	r0
    1c38:	e2 f7       	brpl	.-8      	; 0x1c32 <initialize+0x6c>
    1c3a:	82 2b       	or	r24, r18
    1c3c:	8b b9       	out	0x0b, r24	; 11

    // driver board PWM line B6,C6
	// enable direction line B0B1 for left motor, B2B3 for right motor
	set(DDRB, 0);
    1c3e:	20 9a       	sbi	0x04, 0	; 4
	set(DDRB, 1);
    1c40:	21 9a       	sbi	0x04, 1	; 4
	set(DDRB, 2);
    1c42:	22 9a       	sbi	0x04, 2	; 4
	set(DDRB, 3);
    1c44:	23 9a       	sbi	0x04, 3	; 4

	//enable kicker ports
	set(DDRB, 7);
    1c46:	27 9a       	sbi	0x04, 7	; 4

	set_power(INITIAL_POWER);
    1c48:	60 e0       	ldi	r22, 0x00	; 0
    1c4a:	70 e0       	ldi	r23, 0x00	; 0
    1c4c:	80 e0       	ldi	r24, 0x00	; 0
    1c4e:	9f e3       	ldi	r25, 0x3F	; 63
    1c50:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <set_power>

	//initialize mRF
	m_bus_init();
    1c54:	0e 94 02 10 	call	0x2004	; 0x2004 <m_bus_init>
	m_rf_open(CHANNEL, MY_ADDRESS, BUFFER_SIZE);
    1c58:	4a e0       	ldi	r20, 0x0A	; 10
    1c5a:	69 e3       	ldi	r22, 0x39	; 57
    1c5c:	81 e0       	ldi	r24, 0x01	; 1
    1c5e:	0e 94 13 10 	call	0x2026	; 0x2026 <m_rf_open>

	// initialize mWii
	m_wii_open();
    1c62:	0e 94 55 11 	call	0x22aa	; 0x22aa <m_wii_open>

	//start timer0
	init0(MWII_FREQUENCY);
    1c66:	8a ef       	ldi	r24, 0xFA	; 250
    1c68:	90 e0       	ldi	r25, 0x00	; 0
    1c6a:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <init0>
	interupt0(1);
    1c6e:	81 e0       	ldi	r24, 0x01	; 1
    1c70:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <interupt0>

	// start ADC
	initADC();
    1c74:	0e 94 07 01 	call	0x20e	; 0x20e <initADC>

	sei(); //enable interrupts
    1c78:	78 94       	sei
    1c7a:	08 95       	ret

00001c7c <main>:

void init0(unsigned int frequency); // timer0 init for mwii reading
void interupt0(bool on);

int main(void)
{
    1c7c:	cf 93       	push	r28
    1c7e:	df 93       	push	r29
    1c80:	cd b7       	in	r28, 0x3d	; 61
    1c82:	de b7       	in	r29, 0x3e	; 62
    1c84:	2a 97       	sbiw	r28, 0x0a	; 10
    1c86:	0f b6       	in	r0, 0x3f	; 63
    1c88:	f8 94       	cli
    1c8a:	de bf       	out	0x3e, r29	; 62
    1c8c:	0f be       	out	0x3f, r0	; 63
    1c8e:	cd bf       	out	0x3d, r28	; 61
    initialize();
    1c90:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <initialize>
	m_red(ON);
    1c94:	6e 9a       	sbi	0x0d, 6	; 13
    1c96:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
    1c98:	6a 9a       	sbi	0x0d, 2	; 13
    1c9a:	72 98       	cbi	0x0e, 2	; 14
	//curve(puck_angle); // find puck
	
	if(receive){
	    m_wii_read(data);
		location_update(data);
    	m_green(TOGGLE);
    1c9c:	68 94       	set
    1c9e:	ee 24       	eor	r14, r14
    1ca0:	e2 f8       	bld	r14, 2
			case DEFENSE:
			setMainState(RETURN);
			break;
		}
		RF_READ = 0;
		m_red(TOGGLE);
    1ca2:	68 94       	set
    1ca4:	ff 24       	eor	r15, r15
    1ca6:	f6 f8       	bld	r15, 6
		}
		else{move(goal_x, goal_y);
		    char buffer_T1[BUFFER_SIZE] = {ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST};
		    m_rf_send(T1_ADDRESS, buffer_T1, BUFFER_SIZE);
			}
		clear(PORTD,LED_pin);
    1ca8:	0b e0       	ldi	r16, 0x0B	; 11
    1caa:	11 e0       	ldi	r17, 0x01	; 1
    //search();
	
	//move(goal_x,goal_y);//qualification
	//curve(puck_angle); // find puck
	
	if(receive){
    1cac:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <receive>
    1cb0:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <receive+0x1>
    1cb4:	89 2b       	or	r24, r25
    1cb6:	81 f0       	breq	.+32     	; 0x1cd8 <main+0x5c>
	    m_wii_read(data);
    1cb8:	80 eb       	ldi	r24, 0xB0	; 176
    1cba:	91 e0       	ldi	r25, 0x01	; 1
    1cbc:	0e 94 76 12 	call	0x24ec	; 0x24ec <m_wii_read>
		location_update(data);
    1cc0:	80 eb       	ldi	r24, 0xB0	; 176
    1cc2:	91 e0       	ldi	r25, 0x01	; 1
    1cc4:	0e 94 5f 0c 	call	0x18be	; 0x18be <location_update>
    	m_green(TOGGLE);
    1cc8:	6a 9a       	sbi	0x0d, 2	; 13
    1cca:	8e b1       	in	r24, 0x0e	; 14
    1ccc:	8e 25       	eor	r24, r14
    1cce:	8e b9       	out	0x0e, r24	; 14
		receive = 0;
    1cd0:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <receive+0x1>
    1cd4:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <receive>
	}

	update_puck();
    1cd8:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <update_puck>


	if(RF_READ) {
    1cdc:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <RF_READ>
    1ce0:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <RF_READ+0x1>
    1ce4:	89 2b       	or	r24, r25
    1ce6:	09 f4       	brne	.+2      	; 0x1cea <main+0x6e>
    1ce8:	4e c0       	rjmp	.+156    	; 0x1d86 <main+0x10a>
		m_rf_read(buffer, BUFFER_SIZE);
    1cea:	6a e0       	ldi	r22, 0x0A	; 10
    1cec:	8f ec       	ldi	r24, 0xCF	; 207
    1cee:	91 e0       	ldi	r25, 0x01	; 1
    1cf0:	0e 94 69 10 	call	0x20d2	; 0x20d2 <m_rf_read>
		message = buffer[0];
    1cf4:	e0 91 cf 01 	lds	r30, 0x01CF	; 0x8001cf <buffer>
    1cf8:	e0 93 ce 01 	sts	0x01CE, r30	; 0x8001ce <message>
		switch(message){
    1cfc:	4e 2f       	mov	r20, r30
    1cfe:	50 e0       	ldi	r21, 0x00	; 0
    1d00:	fa 01       	movw	r30, r20
    1d02:	e0 5a       	subi	r30, 0xA0	; 160
    1d04:	f1 09       	sbc	r31, r1
    1d06:	ea 30       	cpi	r30, 0x0A	; 10
    1d08:	f1 05       	cpc	r31, r1
    1d0a:	20 f4       	brcc	.+8      	; 0x1d14 <main+0x98>
    1d0c:	ea 5a       	subi	r30, 0xAA	; 170
    1d0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d10:	0c 94 a7 16 	jmp	0x2d4e	; 0x2d4e <__tablejump2__>
			default:
			setMainState(COMM);//should be ?
    1d14:	86 e0       	ldi	r24, 0x06	; 6
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			break;
    1d1c:	2c c0       	rjmp	.+88     	; 0x1d76 <main+0xfa>
			case COMM_TEST:
			setMainState(COMM);
    1d1e:	86 e0       	ldi	r24, 0x06	; 6
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			break;
    1d26:	27 c0       	rjmp	.+78     	; 0x1d76 <main+0xfa>
			case PLAY:
			setMainState(RETURN);
    1d28:	81 e0       	ldi	r24, 0x01	; 1
    1d2a:	90 e0       	ldi	r25, 0x00	; 0
    1d2c:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			//should be setMainState(SEARCH);
			break;
    1d30:	22 c0       	rjmp	.+68     	; 0x1d76 <main+0xfa>
			case GOAL_R:
			setMainState(WAIT);
    1d32:	80 e0       	ldi	r24, 0x00	; 0
    1d34:	90 e0       	ldi	r25, 0x00	; 0
    1d36:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			break;
    1d3a:	1d c0       	rjmp	.+58     	; 0x1d76 <main+0xfa>
			case GOAL_B:
			setMainState(WAIT);
    1d3c:	80 e0       	ldi	r24, 0x00	; 0
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			break;
    1d44:	18 c0       	rjmp	.+48     	; 0x1d76 <main+0xfa>
			case PAUSE:
			setMainState(WAIT);
    1d46:	80 e0       	ldi	r24, 0x00	; 0
    1d48:	90 e0       	ldi	r25, 0x00	; 0
    1d4a:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			break;
    1d4e:	13 c0       	rjmp	.+38     	; 0x1d76 <main+0xfa>
			case HALFTIME:
			setMainState(WAIT); // how to deal with halftime change?
    1d50:	80 e0       	ldi	r24, 0x00	; 0
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			break;
    1d58:	0e c0       	rjmp	.+28     	; 0x1d76 <main+0xfa>
			case GAME_OVER:
			setMainState(WAIT);
    1d5a:	80 e0       	ldi	r24, 0x00	; 0
    1d5c:	90 e0       	ldi	r25, 0x00	; 0
    1d5e:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			break;
    1d62:	09 c0       	rjmp	.+18     	; 0x1d76 <main+0xfa>

			case ASSIST:
			setMainState(RUSH);
    1d64:	87 e0       	ldi	r24, 0x07	; 7
    1d66:	90 e0       	ldi	r25, 0x00	; 0
    1d68:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			break;
    1d6c:	04 c0       	rjmp	.+8      	; 0x1d76 <main+0xfa>

			case DEFENSE:
			setMainState(RETURN);
    1d6e:	81 e0       	ldi	r24, 0x01	; 1
    1d70:	90 e0       	ldi	r25, 0x00	; 0
    1d72:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			break;
		}
		RF_READ = 0;
    1d76:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <RF_READ+0x1>
    1d7a:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <RF_READ>
		m_red(TOGGLE);
    1d7e:	6e 9a       	sbi	0x0d, 6	; 13
    1d80:	8e b1       	in	r24, 0x0e	; 14
    1d82:	8f 25       	eor	r24, r15
    1d84:	8e b9       	out	0x0e, r24	; 14
	}
   
	switch(getMainState()){
    1d86:	0e 94 be 03 	call	0x77c	; 0x77c <getMainState>
    1d8a:	90 e0       	ldi	r25, 0x00	; 0
    1d8c:	88 30       	cpi	r24, 0x08	; 8
    1d8e:	91 05       	cpc	r25, r1
    1d90:	28 f4       	brcc	.+10     	; 0x1d9c <main+0x120>
    1d92:	fc 01       	movw	r30, r24
    1d94:	e0 5a       	subi	r30, 0xA0	; 160
    1d96:	ff 4f       	sbci	r31, 0xFF	; 255
    1d98:	0c 94 a7 16 	jmp	0x2d4e	; 0x2d4e <__tablejump2__>
		default:
		setMainState(WAIT); // should be wait?
    1d9c:	80 e0       	ldi	r24, 0x00	; 0
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
		break;
    1da4:	83 cf       	rjmp	.-250    	; 0x1cac <main+0x30>

		case WAIT:
		stop(); // in drive.c
    1da6:	0e 94 b8 07 	call	0xf70	; 0xf70 <stop>
		break;
    1daa:	80 cf       	rjmp	.-256    	; 0x1cac <main+0x30>

		case RETURN:
		position = getPosition();
    1dac:	0e 94 cc 03 	call	0x798	; 0x798 <getPosition>
    1db0:	6c 01       	movw	r12, r24
    1db2:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <position+0x1>
    1db6:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <position>
		if((fabs(position[0] - home_x) < 5) && (fabs(position[1] - home_y) < 5))
    1dba:	a0 90 07 01 	lds	r10, 0x0107	; 0x800107 <home_x>
    1dbe:	b0 90 08 01 	lds	r11, 0x0108	; 0x800108 <home_x+0x1>
    1dc2:	b5 01       	movw	r22, r10
    1dc4:	0b 2c       	mov	r0, r11
    1dc6:	00 0c       	add	r0, r0
    1dc8:	88 0b       	sbc	r24, r24
    1dca:	99 0b       	sbc	r25, r25
    1dcc:	0e 94 9c 14 	call	0x2938	; 0x2938 <__floatsisf>
    1dd0:	9b 01       	movw	r18, r22
    1dd2:	ac 01       	movw	r20, r24
    1dd4:	f6 01       	movw	r30, r12
    1dd6:	60 81       	ld	r22, Z
    1dd8:	71 81       	ldd	r23, Z+1	; 0x01
    1dda:	82 81       	ldd	r24, Z+2	; 0x02
    1ddc:	93 81       	ldd	r25, Z+3	; 0x03
    1dde:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    1de2:	9f 77       	andi	r25, 0x7F	; 127
    1de4:	20 e0       	ldi	r18, 0x00	; 0
    1de6:	30 e0       	ldi	r19, 0x00	; 0
    1de8:	40 ea       	ldi	r20, 0xA0	; 160
    1dea:	50 e4       	ldi	r21, 0x40	; 64
    1dec:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
    1df0:	88 23       	and	r24, r24
    1df2:	1c f5       	brge	.+70     	; 0x1e3a <main+0x1be>
    1df4:	60 91 90 01 	lds	r22, 0x0190	; 0x800190 <home_y>
    1df8:	70 91 91 01 	lds	r23, 0x0191	; 0x800191 <home_y+0x1>
    1dfc:	07 2e       	mov	r0, r23
    1dfe:	00 0c       	add	r0, r0
    1e00:	88 0b       	sbc	r24, r24
    1e02:	99 0b       	sbc	r25, r25
    1e04:	0e 94 9c 14 	call	0x2938	; 0x2938 <__floatsisf>
    1e08:	9b 01       	movw	r18, r22
    1e0a:	ac 01       	movw	r20, r24
    1e0c:	f6 01       	movw	r30, r12
    1e0e:	64 81       	ldd	r22, Z+4	; 0x04
    1e10:	75 81       	ldd	r23, Z+5	; 0x05
    1e12:	86 81       	ldd	r24, Z+6	; 0x06
    1e14:	97 81       	ldd	r25, Z+7	; 0x07
    1e16:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    1e1a:	9f 77       	andi	r25, 0x7F	; 127
    1e1c:	20 e0       	ldi	r18, 0x00	; 0
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	40 ea       	ldi	r20, 0xA0	; 160
    1e22:	50 e4       	ldi	r21, 0x40	; 64
    1e24:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__cmpsf2>
    1e28:	88 23       	and	r24, r24
    1e2a:	3c f4       	brge	.+14     	; 0x1e3a <main+0x1be>
		{stop();setMainState(SEARCH);}
    1e2c:	0e 94 b8 07 	call	0xf70	; 0xf70 <stop>
    1e30:	82 e0       	ldi	r24, 0x02	; 2
    1e32:	90 e0       	ldi	r25, 0x00	; 0
    1e34:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
    1e38:	39 cf       	rjmp	.-398    	; 0x1cac <main+0x30>
		else{move(home_x,home_y);}
    1e3a:	60 91 90 01 	lds	r22, 0x0190	; 0x800190 <home_y>
    1e3e:	70 91 91 01 	lds	r23, 0x0191	; 0x800191 <home_y+0x1>
    1e42:	c5 01       	movw	r24, r10
    1e44:	0e 94 15 05 	call	0xa2a	; 0xa2a <move>
    1e48:	31 cf       	rjmp	.-414    	; 0x1cac <main+0x30>
		break;

		case SEARCH:
		if(getPuckState()==PUCK_VISIBLE)
    1e4a:	0e 94 c4 03 	call	0x788	; 0x788 <getPuckState>
    1e4e:	81 30       	cpi	r24, 0x01	; 1
    1e50:	29 f4       	brne	.+10     	; 0x1e5c <main+0x1e0>
		{setMainState(APPROACH_PUCK);}
    1e52:	83 e0       	ldi	r24, 0x03	; 3
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
    1e5a:	28 cf       	rjmp	.-432    	; 0x1cac <main+0x30>
		else{search();}
    1e5c:	0e 94 fe 04 	call	0x9fc	; 0x9fc <search>
    1e60:	25 cf       	rjmp	.-438    	; 0x1cac <main+0x30>
		break;

		case APPROACH_PUCK:
		if(getPuckState()==I_HAVE_PUCK){
    1e62:	0e 94 c4 03 	call	0x788	; 0x788 <getPuckState>
    1e66:	82 30       	cpi	r24, 0x02	; 2
    1e68:	a9 f4       	brne	.+42     	; 0x1e94 <main+0x218>
			setMainState(APPROACH_GOAL);
    1e6a:	84 e0       	ldi	r24, 0x04	; 4
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			char buffer_T2[BUFFER_SIZE] = {DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE};
    1e72:	8a e0       	ldi	r24, 0x0A	; 10
    1e74:	e1 e2       	ldi	r30, 0x21	; 33
    1e76:	f1 e0       	ldi	r31, 0x01	; 1
    1e78:	de 01       	movw	r26, r28
    1e7a:	11 96       	adiw	r26, 0x01	; 1
    1e7c:	01 90       	ld	r0, Z+
    1e7e:	0d 92       	st	X+, r0
    1e80:	8a 95       	dec	r24
    1e82:	e1 f7       	brne	.-8      	; 0x1e7c <main+0x200>
			m_rf_send(T2_ADDRESS, buffer_T2, BUFFER_SIZE); // for blue it's defense anyway
    1e84:	4a e0       	ldi	r20, 0x0A	; 10
    1e86:	be 01       	movw	r22, r28
    1e88:	6f 5f       	subi	r22, 0xFF	; 255
    1e8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e8c:	8f 2d       	mov	r24, r15
    1e8e:	0e 94 cd 10 	call	0x219a	; 0x219a <m_rf_send>
    1e92:	23 c0       	rjmp	.+70     	; 0x1eda <main+0x25e>
		}
		else if(getPuckState()==PUCK_NDEF){
    1e94:	0e 94 c4 03 	call	0x788	; 0x788 <getPuckState>
    1e98:	81 11       	cpse	r24, r1
    1e9a:	15 c0       	rjmp	.+42     	; 0x1ec6 <main+0x24a>
			setMainState(SEARCH);
    1e9c:	82 e0       	ldi	r24, 0x02	; 2
    1e9e:	90 e0       	ldi	r25, 0x00	; 0
    1ea0:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			char buffer_T2[BUFFER_SIZE] = {DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE,DEFENSE};
    1ea4:	8a e0       	ldi	r24, 0x0A	; 10
    1ea6:	e1 e2       	ldi	r30, 0x21	; 33
    1ea8:	f1 e0       	ldi	r31, 0x01	; 1
    1eaa:	de 01       	movw	r26, r28
    1eac:	11 96       	adiw	r26, 0x01	; 1
    1eae:	01 90       	ld	r0, Z+
    1eb0:	0d 92       	st	X+, r0
    1eb2:	8a 95       	dec	r24
    1eb4:	e1 f7       	brne	.-8      	; 0x1eae <main+0x232>
			m_rf_send(T2_ADDRESS, buffer_T2, BUFFER_SIZE); // for blue it's defense anyway
    1eb6:	4a e0       	ldi	r20, 0x0A	; 10
    1eb8:	be 01       	movw	r22, r28
    1eba:	6f 5f       	subi	r22, 0xFF	; 255
    1ebc:	7f 4f       	sbci	r23, 0xFF	; 255
    1ebe:	8f 2d       	mov	r24, r15
    1ec0:	0e 94 cd 10 	call	0x219a	; 0x219a <m_rf_send>
    1ec4:	0a c0       	rjmp	.+20     	; 0x1eda <main+0x25e>
		}
		else{curve(puck_angle);}
    1ec6:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <puck_angle>
    1eca:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <puck_angle+0x1>
    1ece:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <puck_angle+0x2>
    1ed2:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <puck_angle+0x3>
    1ed6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <curve>
		set(PORTD,LED_pin);
    1eda:	2b b1       	in	r18, 0x0b	; 11
    1edc:	81 e0       	ldi	r24, 0x01	; 1
    1ede:	90 e0       	ldi	r25, 0x00	; 0
    1ee0:	f8 01       	movw	r30, r16
    1ee2:	00 80       	ld	r0, Z
    1ee4:	02 c0       	rjmp	.+4      	; 0x1eea <main+0x26e>
    1ee6:	88 0f       	add	r24, r24
    1ee8:	99 1f       	adc	r25, r25
    1eea:	0a 94       	dec	r0
    1eec:	e2 f7       	brpl	.-8      	; 0x1ee6 <main+0x26a>
    1eee:	82 2b       	or	r24, r18
    1ef0:	8b b9       	out	0x0b, r24	; 11
		break;
    1ef2:	dc ce       	rjmp	.-584    	; 0x1cac <main+0x30>

		case APPROACH_GOAL:
		//if close enough
		//	setMainState(SHOOT);

		if( getPuckState()!= I_HAVE_PUCK ){
    1ef4:	0e 94 c4 03 	call	0x788	; 0x788 <getPuckState>
    1ef8:	82 30       	cpi	r24, 0x02	; 2
    1efa:	a9 f0       	breq	.+42     	; 0x1f26 <main+0x2aa>
			setMainState(APPROACH_PUCK);
    1efc:	83 e0       	ldi	r24, 0x03	; 3
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
			char buffer_T1[BUFFER_SIZE] = {PLAY,PLAY,PLAY,PLAY,PLAY,PLAY,PLAY,PLAY,PLAY,PLAY};
    1f04:	8a e0       	ldi	r24, 0x0A	; 10
    1f06:	eb e2       	ldi	r30, 0x2B	; 43
    1f08:	f1 e0       	ldi	r31, 0x01	; 1
    1f0a:	de 01       	movw	r26, r28
    1f0c:	11 96       	adiw	r26, 0x01	; 1
    1f0e:	01 90       	ld	r0, Z+
    1f10:	0d 92       	st	X+, r0
    1f12:	8a 95       	dec	r24
    1f14:	e1 f7       	brne	.-8      	; 0x1f0e <main+0x292>
			m_rf_send(T1_ADDRESS, buffer_T1, BUFFER_SIZE);
    1f16:	4a e0       	ldi	r20, 0x0A	; 10
    1f18:	be 01       	movw	r22, r28
    1f1a:	6f 5f       	subi	r22, 0xFF	; 255
    1f1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f1e:	88 e3       	ldi	r24, 0x38	; 56
    1f20:	0e 94 cd 10 	call	0x219a	; 0x219a <m_rf_send>
    1f24:	1a c0       	rjmp	.+52     	; 0x1f5a <main+0x2de>
		}
		else{move(goal_x, goal_y);
    1f26:	60 91 92 01 	lds	r22, 0x0192	; 0x800192 <goal_y>
    1f2a:	70 91 93 01 	lds	r23, 0x0193	; 0x800193 <goal_y+0x1>
    1f2e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <goal_x>
    1f32:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <goal_x+0x1>
    1f36:	0e 94 15 05 	call	0xa2a	; 0xa2a <move>
		    char buffer_T1[BUFFER_SIZE] = {ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST,ASSIST};
    1f3a:	8a e0       	ldi	r24, 0x0A	; 10
    1f3c:	e5 e3       	ldi	r30, 0x35	; 53
    1f3e:	f1 e0       	ldi	r31, 0x01	; 1
    1f40:	de 01       	movw	r26, r28
    1f42:	11 96       	adiw	r26, 0x01	; 1
    1f44:	01 90       	ld	r0, Z+
    1f46:	0d 92       	st	X+, r0
    1f48:	8a 95       	dec	r24
    1f4a:	e1 f7       	brne	.-8      	; 0x1f44 <main+0x2c8>
		    m_rf_send(T1_ADDRESS, buffer_T1, BUFFER_SIZE);
    1f4c:	4a e0       	ldi	r20, 0x0A	; 10
    1f4e:	be 01       	movw	r22, r28
    1f50:	6f 5f       	subi	r22, 0xFF	; 255
    1f52:	7f 4f       	sbci	r23, 0xFF	; 255
    1f54:	88 e3       	ldi	r24, 0x38	; 56
    1f56:	0e 94 cd 10 	call	0x219a	; 0x219a <m_rf_send>
			}
		clear(PORTD,LED_pin);
    1f5a:	2b b1       	in	r18, 0x0b	; 11
    1f5c:	81 e0       	ldi	r24, 0x01	; 1
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	f8 01       	movw	r30, r16
    1f62:	00 80       	ld	r0, Z
    1f64:	02 c0       	rjmp	.+4      	; 0x1f6a <main+0x2ee>
    1f66:	88 0f       	add	r24, r24
    1f68:	99 1f       	adc	r25, r25
    1f6a:	0a 94       	dec	r0
    1f6c:	e2 f7       	brpl	.-8      	; 0x1f66 <main+0x2ea>
    1f6e:	80 95       	com	r24
    1f70:	82 23       	and	r24, r18
    1f72:	8b b9       	out	0x0b, r24	; 11
		break;
    1f74:	9b ce       	rjmp	.-714    	; 0x1cac <main+0x30>

		case SHOOT:
		shoot();
    1f76:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <shoot>
		setMainState(SEARCH);
    1f7a:	82 e0       	ldi	r24, 0x02	; 2
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
		break;
    1f82:	94 ce       	rjmp	.-728    	; 0x1cac <main+0x30>

		case COMM:
		comm_test();
    1f84:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <comm_test>
		setMainState(WAIT);
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	0e 94 bb 03 	call	0x776	; 0x776 <setMainState>
		break;
    1f90:	8d ce       	rjmp	.-742    	; 0x1cac <main+0x30>

		case RUSH:
		move(goal_x, goal_y);
    1f92:	60 91 92 01 	lds	r22, 0x0192	; 0x800192 <goal_y>
    1f96:	70 91 93 01 	lds	r23, 0x0193	; 0x800193 <goal_y+0x1>
    1f9a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <goal_x>
    1f9e:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <goal_x+0x1>
    1fa2:	0e 94 15 05 	call	0xa2a	; 0xa2a <move>
		break;
    1fa6:	82 ce       	rjmp	.-764    	; 0x1cac <main+0x30>

00001fa8 <__vector_3>:
	{   clear(TIMSK0, OCIE0A);}
}


ISR(INT2_vect)
{
    1fa8:	1f 92       	push	r1
    1faa:	0f 92       	push	r0
    1fac:	0f b6       	in	r0, 0x3f	; 63
    1fae:	0f 92       	push	r0
    1fb0:	11 24       	eor	r1, r1
    1fb2:	8f 93       	push	r24
    1fb4:	9f 93       	push	r25
	RF_READ = 1;
    1fb6:	81 e0       	ldi	r24, 0x01	; 1
    1fb8:	90 e0       	ldi	r25, 0x00	; 0
    1fba:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <RF_READ+0x1>
    1fbe:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <RF_READ>
}
    1fc2:	9f 91       	pop	r25
    1fc4:	8f 91       	pop	r24
    1fc6:	0f 90       	pop	r0
    1fc8:	0f be       	out	0x3f, r0	; 63
    1fca:	0f 90       	pop	r0
    1fcc:	1f 90       	pop	r1
    1fce:	18 95       	reti

00001fd0 <__vector_21>:

ISR(TIMER0_COMPA_vect){
    1fd0:	1f 92       	push	r1
    1fd2:	0f 92       	push	r0
    1fd4:	0f b6       	in	r0, 0x3f	; 63
    1fd6:	0f 92       	push	r0
    1fd8:	11 24       	eor	r1, r1
    1fda:	8f 93       	push	r24
    1fdc:	9f 93       	push	r25
	if(receive) {}
    1fde:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <receive>
    1fe2:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <receive+0x1>
    1fe6:	89 2b       	or	r24, r25
    1fe8:	31 f4       	brne	.+12     	; 0x1ff6 <__vector_21+0x26>
	else
	{receive = 1;}
    1fea:	81 e0       	ldi	r24, 0x01	; 1
    1fec:	90 e0       	ldi	r25, 0x00	; 0
    1fee:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <receive+0x1>
    1ff2:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <receive>
}
    1ff6:	9f 91       	pop	r25
    1ff8:	8f 91       	pop	r24
    1ffa:	0f 90       	pop	r0
    1ffc:	0f be       	out	0x3f, r0	; 63
    1ffe:	0f 90       	pop	r0
    2000:	1f 90       	pop	r1
    2002:	18 95       	reti

00002004 <m_bus_init>:
    2004:	58 9a       	sbi	0x0b, 0	; 11
    2006:	59 9a       	sbi	0x0b, 1	; 11
    2008:	5a 9a       	sbi	0x0b, 2	; 11
    200a:	8c e0       	ldi	r24, 0x0C	; 12
    200c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    2010:	e9 e6       	ldi	r30, 0x69	; 105
    2012:	f0 e0       	ldi	r31, 0x00	; 0
    2014:	80 81       	ld	r24, Z
    2016:	80 62       	ori	r24, 0x20	; 32
    2018:	80 83       	st	Z, r24
    201a:	80 81       	ld	r24, Z
    201c:	8f 7e       	andi	r24, 0xEF	; 239
    201e:	80 83       	st	Z, r24
    2020:	ea 9a       	sbi	0x1d, 2	; 29
    2022:	78 94       	sei
    2024:	08 95       	ret

00002026 <m_rf_open>:
    2026:	1f 93       	push	r17
    2028:	cf 93       	push	r28
    202a:	df 93       	push	r29
    202c:	18 2f       	mov	r17, r24
    202e:	d6 2f       	mov	r29, r22
    2030:	c4 2f       	mov	r28, r20
    2032:	0e 94 02 10 	call	0x2004	; 0x2004 <m_bus_init>
    2036:	94 ea       	ldi	r25, 0xA4	; 164
    2038:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    203c:	ec eb       	ldi	r30, 0xBC	; 188
    203e:	f0 e0       	ldi	r31, 0x00	; 0
    2040:	90 81       	ld	r25, Z
    2042:	99 23       	and	r25, r25
    2044:	ec f7       	brge	.-6      	; 0x2040 <m_rf_open+0x1a>
    2046:	90 e5       	ldi	r25, 0x50	; 80
    2048:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    204c:	94 e8       	ldi	r25, 0x84	; 132
    204e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2052:	ec eb       	ldi	r30, 0xBC	; 188
    2054:	f0 e0       	ldi	r31, 0x00	; 0
    2056:	90 81       	ld	r25, Z
    2058:	99 23       	and	r25, r25
    205a:	ec f7       	brge	.-6      	; 0x2056 <m_rf_open+0x30>
    205c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    2060:	98 7f       	andi	r25, 0xF8	; 248
    2062:	90 32       	cpi	r25, 0x20	; 32
    2064:	29 f4       	brne	.+10     	; 0x2070 <m_rf_open+0x4a>
    2066:	84 e9       	ldi	r24, 0x94	; 148
    2068:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    206c:	80 e0       	ldi	r24, 0x00	; 0
    206e:	2d c0       	rjmp	.+90     	; 0x20ca <m_rf_open+0xa4>
    2070:	81 e0       	ldi	r24, 0x01	; 1
    2072:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2076:	84 e8       	ldi	r24, 0x84	; 132
    2078:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    207c:	ec eb       	ldi	r30, 0xBC	; 188
    207e:	f0 e0       	ldi	r31, 0x00	; 0
    2080:	90 81       	ld	r25, Z
    2082:	99 23       	and	r25, r25
    2084:	ec f7       	brge	.-6      	; 0x2080 <m_rf_open+0x5a>
    2086:	10 93 bb 00 	sts	0x00BB, r17	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    208a:	84 e8       	ldi	r24, 0x84	; 132
    208c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2090:	ec eb       	ldi	r30, 0xBC	; 188
    2092:	f0 e0       	ldi	r31, 0x00	; 0
    2094:	80 81       	ld	r24, Z
    2096:	88 23       	and	r24, r24
    2098:	ec f7       	brge	.-6      	; 0x2094 <m_rf_open+0x6e>
    209a:	d0 93 bb 00 	sts	0x00BB, r29	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    209e:	84 e8       	ldi	r24, 0x84	; 132
    20a0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    20a4:	ec eb       	ldi	r30, 0xBC	; 188
    20a6:	f0 e0       	ldi	r31, 0x00	; 0
    20a8:	80 81       	ld	r24, Z
    20aa:	88 23       	and	r24, r24
    20ac:	ec f7       	brge	.-6      	; 0x20a8 <m_rf_open+0x82>
    20ae:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    20b2:	84 e8       	ldi	r24, 0x84	; 132
    20b4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    20b8:	ec eb       	ldi	r30, 0xBC	; 188
    20ba:	f0 e0       	ldi	r31, 0x00	; 0
    20bc:	80 81       	ld	r24, Z
    20be:	88 23       	and	r24, r24
    20c0:	ec f7       	brge	.-6      	; 0x20bc <m_rf_open+0x96>
    20c2:	84 e9       	ldi	r24, 0x94	; 148
    20c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    20c8:	81 e0       	ldi	r24, 0x01	; 1
    20ca:	df 91       	pop	r29
    20cc:	cf 91       	pop	r28
    20ce:	1f 91       	pop	r17
    20d0:	08 95       	ret

000020d2 <m_rf_read>:
    20d2:	cf 93       	push	r28
    20d4:	df 93       	push	r29
    20d6:	9c 01       	movw	r18, r24
    20d8:	84 ea       	ldi	r24, 0xA4	; 164
    20da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    20de:	ec eb       	ldi	r30, 0xBC	; 188
    20e0:	f0 e0       	ldi	r31, 0x00	; 0
    20e2:	90 81       	ld	r25, Z
    20e4:	99 23       	and	r25, r25
    20e6:	ec f7       	brge	.-6      	; 0x20e2 <m_rf_read+0x10>
    20e8:	81 e5       	ldi	r24, 0x51	; 81
    20ea:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    20ee:	84 e8       	ldi	r24, 0x84	; 132
    20f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    20f4:	ec eb       	ldi	r30, 0xBC	; 188
    20f6:	f0 e0       	ldi	r31, 0x00	; 0
    20f8:	90 81       	ld	r25, Z
    20fa:	99 23       	and	r25, r25
    20fc:	ec f7       	brge	.-6      	; 0x20f8 <m_rf_read+0x26>
    20fe:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    2102:	88 7f       	andi	r24, 0xF8	; 248
    2104:	88 34       	cpi	r24, 0x48	; 72
    2106:	29 f4       	brne	.+10     	; 0x2112 <m_rf_read+0x40>
    2108:	84 e9       	ldi	r24, 0x94	; 148
    210a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    210e:	80 e0       	ldi	r24, 0x00	; 0
    2110:	41 c0       	rjmp	.+130    	; 0x2194 <m_rf_read+0xc2>
    2112:	84 ec       	ldi	r24, 0xC4	; 196
    2114:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2118:	ec eb       	ldi	r30, 0xBC	; 188
    211a:	f0 e0       	ldi	r31, 0x00	; 0
    211c:	90 81       	ld	r25, Z
    211e:	99 23       	and	r25, r25
    2120:	ec f7       	brge	.-6      	; 0x211c <m_rf_read+0x4a>
    2122:	40 91 bb 00 	lds	r20, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2126:	46 13       	cpse	r20, r22
    2128:	09 c0       	rjmp	.+18     	; 0x213c <m_rf_read+0x6a>
    212a:	84 2f       	mov	r24, r20
    212c:	90 e0       	ldi	r25, 0x00	; 0
    212e:	01 97       	sbiw	r24, 0x01	; 1
    2130:	18 16       	cp	r1, r24
    2132:	19 06       	cpc	r1, r25
    2134:	44 f0       	brlt	.+16     	; 0x2146 <m_rf_read+0x74>
    2136:	40 e0       	ldi	r20, 0x00	; 0
    2138:	50 e0       	ldi	r21, 0x00	; 0
    213a:	1a c0       	rjmp	.+52     	; 0x2170 <m_rf_read+0x9e>
    213c:	84 e9       	ldi	r24, 0x94	; 148
    213e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2142:	80 e0       	ldi	r24, 0x00	; 0
    2144:	27 c0       	rjmp	.+78     	; 0x2194 <m_rf_read+0xc2>
    2146:	d9 01       	movw	r26, r18
    2148:	50 e0       	ldi	r21, 0x00	; 0
    214a:	41 50       	subi	r20, 0x01	; 1
    214c:	51 09       	sbc	r21, r1
    214e:	b9 01       	movw	r22, r18
    2150:	64 0f       	add	r22, r20
    2152:	75 1f       	adc	r23, r21
    2154:	ec eb       	ldi	r30, 0xBC	; 188
    2156:	f0 e0       	ldi	r31, 0x00	; 0
    2158:	84 ec       	ldi	r24, 0xC4	; 196
    215a:	cb eb       	ldi	r28, 0xBB	; 187
    215c:	d0 e0       	ldi	r29, 0x00	; 0
    215e:	80 83       	st	Z, r24
    2160:	90 81       	ld	r25, Z
    2162:	99 23       	and	r25, r25
    2164:	ec f7       	brge	.-6      	; 0x2160 <m_rf_read+0x8e>
    2166:	98 81       	ld	r25, Y
    2168:	9d 93       	st	X+, r25
    216a:	a6 17       	cp	r26, r22
    216c:	b7 07       	cpc	r27, r23
    216e:	b9 f7       	brne	.-18     	; 0x215e <m_rf_read+0x8c>
    2170:	84 e8       	ldi	r24, 0x84	; 132
    2172:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2176:	ec eb       	ldi	r30, 0xBC	; 188
    2178:	f0 e0       	ldi	r31, 0x00	; 0
    217a:	90 81       	ld	r25, Z
    217c:	99 23       	and	r25, r25
    217e:	ec f7       	brge	.-6      	; 0x217a <m_rf_read+0xa8>
    2180:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2184:	f9 01       	movw	r30, r18
    2186:	e4 0f       	add	r30, r20
    2188:	f5 1f       	adc	r31, r21
    218a:	80 83       	st	Z, r24
    218c:	84 e9       	ldi	r24, 0x94	; 148
    218e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2192:	81 e0       	ldi	r24, 0x01	; 1
    2194:	df 91       	pop	r29
    2196:	cf 91       	pop	r28
    2198:	08 95       	ret

0000219a <m_rf_send>:
    219a:	cf 93       	push	r28
    219c:	df 93       	push	r29
    219e:	f8 94       	cli
    21a0:	94 ea       	ldi	r25, 0xA4	; 164
    21a2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    21a6:	ec eb       	ldi	r30, 0xBC	; 188
    21a8:	f0 e0       	ldi	r31, 0x00	; 0
    21aa:	90 81       	ld	r25, Z
    21ac:	99 23       	and	r25, r25
    21ae:	ec f7       	brge	.-6      	; 0x21aa <m_rf_send+0x10>
    21b0:	90 e5       	ldi	r25, 0x50	; 80
    21b2:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    21b6:	94 e8       	ldi	r25, 0x84	; 132
    21b8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    21bc:	ec eb       	ldi	r30, 0xBC	; 188
    21be:	f0 e0       	ldi	r31, 0x00	; 0
    21c0:	90 81       	ld	r25, Z
    21c2:	99 23       	and	r25, r25
    21c4:	ec f7       	brge	.-6      	; 0x21c0 <m_rf_send+0x26>
    21c6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    21ca:	98 7f       	andi	r25, 0xF8	; 248
    21cc:	90 32       	cpi	r25, 0x20	; 32
    21ce:	31 f4       	brne	.+12     	; 0x21dc <m_rf_send+0x42>
    21d0:	84 e9       	ldi	r24, 0x94	; 148
    21d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    21d6:	78 94       	sei
    21d8:	80 e0       	ldi	r24, 0x00	; 0
    21da:	2d c0       	rjmp	.+90     	; 0x2236 <m_rf_send+0x9c>
    21dc:	93 e0       	ldi	r25, 0x03	; 3
    21de:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    21e2:	94 e8       	ldi	r25, 0x84	; 132
    21e4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    21e8:	ec eb       	ldi	r30, 0xBC	; 188
    21ea:	f0 e0       	ldi	r31, 0x00	; 0
    21ec:	90 81       	ld	r25, Z
    21ee:	99 23       	and	r25, r25
    21f0:	ec f7       	brge	.-6      	; 0x21ec <m_rf_send+0x52>
    21f2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    21f6:	84 e8       	ldi	r24, 0x84	; 132
    21f8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    21fc:	ec eb       	ldi	r30, 0xBC	; 188
    21fe:	f0 e0       	ldi	r31, 0x00	; 0
    2200:	80 81       	ld	r24, Z
    2202:	88 23       	and	r24, r24
    2204:	ec f7       	brge	.-6      	; 0x2200 <m_rf_send+0x66>
    2206:	44 23       	and	r20, r20
    2208:	89 f0       	breq	.+34     	; 0x222c <m_rf_send+0x92>
    220a:	db 01       	movw	r26, r22
    220c:	64 0f       	add	r22, r20
    220e:	71 1d       	adc	r23, r1
    2210:	cb eb       	ldi	r28, 0xBB	; 187
    2212:	d0 e0       	ldi	r29, 0x00	; 0
    2214:	ec eb       	ldi	r30, 0xBC	; 188
    2216:	f0 e0       	ldi	r31, 0x00	; 0
    2218:	94 e8       	ldi	r25, 0x84	; 132
    221a:	8d 91       	ld	r24, X+
    221c:	88 83       	st	Y, r24
    221e:	90 83       	st	Z, r25
    2220:	80 81       	ld	r24, Z
    2222:	88 23       	and	r24, r24
    2224:	ec f7       	brge	.-6      	; 0x2220 <m_rf_send+0x86>
    2226:	a6 17       	cp	r26, r22
    2228:	b7 07       	cpc	r27, r23
    222a:	b9 f7       	brne	.-18     	; 0x221a <m_rf_send+0x80>
    222c:	84 e9       	ldi	r24, 0x94	; 148
    222e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2232:	78 94       	sei
    2234:	81 e0       	ldi	r24, 0x01	; 1
    2236:	df 91       	pop	r29
    2238:	cf 91       	pop	r28
    223a:	08 95       	ret

0000223c <twi_wait>:
    223c:	20 e0       	ldi	r18, 0x00	; 0
    223e:	30 e0       	ldi	r19, 0x00	; 0
    2240:	ec eb       	ldi	r30, 0xBC	; 188
    2242:	f0 e0       	ldi	r31, 0x00	; 0
    2244:	80 81       	ld	r24, Z
    2246:	88 23       	and	r24, r24
    2248:	34 f0       	brlt	.+12     	; 0x2256 <twi_wait+0x1a>
    224a:	2f 5f       	subi	r18, 0xFF	; 255
    224c:	3f 4f       	sbci	r19, 0xFF	; 255
    224e:	29 3e       	cpi	r18, 0xE9	; 233
    2250:	83 e0       	ldi	r24, 0x03	; 3
    2252:	38 07       	cpc	r19, r24
    2254:	b9 f7       	brne	.-18     	; 0x2244 <twi_wait+0x8>
    2256:	81 e0       	ldi	r24, 0x01	; 1
    2258:	28 3e       	cpi	r18, 0xE8	; 232
    225a:	33 40       	sbci	r19, 0x03	; 3
    225c:	09 f4       	brne	.+2      	; 0x2260 <twi_wait+0x24>
    225e:	80 e0       	ldi	r24, 0x00	; 0
    2260:	08 95       	ret

00002262 <send_byte>:
    2262:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2266:	84 e8       	ldi	r24, 0x84	; 132
    2268:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    226c:	0e 94 1e 11 	call	0x223c	; 0x223c <twi_wait>
    2270:	88 23       	and	r24, r24
    2272:	19 f0       	breq	.+6      	; 0x227a <send_byte+0x18>
    2274:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    2278:	88 7f       	andi	r24, 0xF8	; 248
    227a:	08 95       	ret

0000227c <start_write>:
    227c:	cf 93       	push	r28
    227e:	c8 2f       	mov	r28, r24
    2280:	94 ea       	ldi	r25, 0xA4	; 164
    2282:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2286:	0e 94 1e 11 	call	0x223c	; 0x223c <twi_wait>
    228a:	88 23       	and	r24, r24
    228c:	61 f0       	breq	.+24     	; 0x22a6 <start_write+0x2a>
    228e:	8c 2f       	mov	r24, r28
    2290:	88 0f       	add	r24, r24
    2292:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    2296:	80 32       	cpi	r24, 0x20	; 32
    2298:	29 f4       	brne	.+10     	; 0x22a4 <start_write+0x28>
    229a:	84 e9       	ldi	r24, 0x94	; 148
    229c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    22a0:	80 e0       	ldi	r24, 0x00	; 0
    22a2:	01 c0       	rjmp	.+2      	; 0x22a6 <start_write+0x2a>
    22a4:	81 e0       	ldi	r24, 0x01	; 1
    22a6:	cf 91       	pop	r28
    22a8:	08 95       	ret

000022aa <m_wii_open>:
    22aa:	0e 94 02 10 	call	0x2004	; 0x2004 <m_bus_init>
    22ae:	88 e5       	ldi	r24, 0x58	; 88
    22b0:	0e 94 3e 11 	call	0x227c	; 0x227c <start_write>
    22b4:	88 23       	and	r24, r24
    22b6:	09 f4       	brne	.+2      	; 0x22ba <m_wii_open+0x10>
    22b8:	cd c0       	rjmp	.+410    	; 0x2454 <m_wii_open+0x1aa>
    22ba:	80 e3       	ldi	r24, 0x30	; 48
    22bc:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    22c0:	88 23       	and	r24, r24
    22c2:	09 f4       	brne	.+2      	; 0x22c6 <m_wii_open+0x1c>
    22c4:	c9 c0       	rjmp	.+402    	; 0x2458 <m_wii_open+0x1ae>
    22c6:	81 e0       	ldi	r24, 0x01	; 1
    22c8:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    22cc:	88 23       	and	r24, r24
    22ce:	09 f4       	brne	.+2      	; 0x22d2 <m_wii_open+0x28>
    22d0:	c5 c0       	rjmp	.+394    	; 0x245c <m_wii_open+0x1b2>
    22d2:	84 e9       	ldi	r24, 0x94	; 148
    22d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    22d8:	83 ec       	ldi	r24, 0xC3	; 195
    22da:	99 e0       	ldi	r25, 0x09	; 9
    22dc:	01 97       	sbiw	r24, 0x01	; 1
    22de:	f1 f7       	brne	.-4      	; 0x22dc <m_wii_open+0x32>
    22e0:	00 c0       	rjmp	.+0      	; 0x22e2 <m_wii_open+0x38>
    22e2:	00 00       	nop
    22e4:	88 e5       	ldi	r24, 0x58	; 88
    22e6:	0e 94 3e 11 	call	0x227c	; 0x227c <start_write>
    22ea:	88 23       	and	r24, r24
    22ec:	09 f4       	brne	.+2      	; 0x22f0 <m_wii_open+0x46>
    22ee:	b8 c0       	rjmp	.+368    	; 0x2460 <m_wii_open+0x1b6>
    22f0:	80 e0       	ldi	r24, 0x00	; 0
    22f2:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    22f6:	88 23       	and	r24, r24
    22f8:	09 f4       	brne	.+2      	; 0x22fc <m_wii_open+0x52>
    22fa:	b4 c0       	rjmp	.+360    	; 0x2464 <m_wii_open+0x1ba>
    22fc:	80 e0       	ldi	r24, 0x00	; 0
    22fe:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    2302:	88 23       	and	r24, r24
    2304:	09 f4       	brne	.+2      	; 0x2308 <m_wii_open+0x5e>
    2306:	b0 c0       	rjmp	.+352    	; 0x2468 <m_wii_open+0x1be>
    2308:	80 e0       	ldi	r24, 0x00	; 0
    230a:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    230e:	88 23       	and	r24, r24
    2310:	09 f4       	brne	.+2      	; 0x2314 <m_wii_open+0x6a>
    2312:	ac c0       	rjmp	.+344    	; 0x246c <m_wii_open+0x1c2>
    2314:	80 e0       	ldi	r24, 0x00	; 0
    2316:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    231a:	88 23       	and	r24, r24
    231c:	09 f4       	brne	.+2      	; 0x2320 <m_wii_open+0x76>
    231e:	a8 c0       	rjmp	.+336    	; 0x2470 <m_wii_open+0x1c6>
    2320:	80 e0       	ldi	r24, 0x00	; 0
    2322:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    2326:	88 23       	and	r24, r24
    2328:	09 f4       	brne	.+2      	; 0x232c <m_wii_open+0x82>
    232a:	a4 c0       	rjmp	.+328    	; 0x2474 <m_wii_open+0x1ca>
    232c:	80 e0       	ldi	r24, 0x00	; 0
    232e:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    2332:	88 23       	and	r24, r24
    2334:	09 f4       	brne	.+2      	; 0x2338 <m_wii_open+0x8e>
    2336:	a0 c0       	rjmp	.+320    	; 0x2478 <m_wii_open+0x1ce>
    2338:	80 e0       	ldi	r24, 0x00	; 0
    233a:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    233e:	88 23       	and	r24, r24
    2340:	09 f4       	brne	.+2      	; 0x2344 <m_wii_open+0x9a>
    2342:	9c c0       	rjmp	.+312    	; 0x247c <m_wii_open+0x1d2>
    2344:	80 e9       	ldi	r24, 0x90	; 144
    2346:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    234a:	88 23       	and	r24, r24
    234c:	09 f4       	brne	.+2      	; 0x2350 <m_wii_open+0xa6>
    234e:	98 c0       	rjmp	.+304    	; 0x2480 <m_wii_open+0x1d6>
    2350:	84 e9       	ldi	r24, 0x94	; 148
    2352:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2356:	83 ec       	ldi	r24, 0xC3	; 195
    2358:	99 e0       	ldi	r25, 0x09	; 9
    235a:	01 97       	sbiw	r24, 0x01	; 1
    235c:	f1 f7       	brne	.-4      	; 0x235a <m_wii_open+0xb0>
    235e:	00 c0       	rjmp	.+0      	; 0x2360 <m_wii_open+0xb6>
    2360:	00 00       	nop
    2362:	88 e5       	ldi	r24, 0x58	; 88
    2364:	0e 94 3e 11 	call	0x227c	; 0x227c <start_write>
    2368:	88 23       	and	r24, r24
    236a:	09 f4       	brne	.+2      	; 0x236e <m_wii_open+0xc4>
    236c:	8b c0       	rjmp	.+278    	; 0x2484 <m_wii_open+0x1da>
    236e:	87 e0       	ldi	r24, 0x07	; 7
    2370:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    2374:	88 23       	and	r24, r24
    2376:	09 f4       	brne	.+2      	; 0x237a <m_wii_open+0xd0>
    2378:	87 c0       	rjmp	.+270    	; 0x2488 <m_wii_open+0x1de>
    237a:	80 e0       	ldi	r24, 0x00	; 0
    237c:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    2380:	88 23       	and	r24, r24
    2382:	09 f4       	brne	.+2      	; 0x2386 <m_wii_open+0xdc>
    2384:	83 c0       	rjmp	.+262    	; 0x248c <m_wii_open+0x1e2>
    2386:	81 e4       	ldi	r24, 0x41	; 65
    2388:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    238c:	88 23       	and	r24, r24
    238e:	09 f4       	brne	.+2      	; 0x2392 <m_wii_open+0xe8>
    2390:	7f c0       	rjmp	.+254    	; 0x2490 <m_wii_open+0x1e6>
    2392:	84 e9       	ldi	r24, 0x94	; 148
    2394:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2398:	83 ec       	ldi	r24, 0xC3	; 195
    239a:	99 e0       	ldi	r25, 0x09	; 9
    239c:	01 97       	sbiw	r24, 0x01	; 1
    239e:	f1 f7       	brne	.-4      	; 0x239c <m_wii_open+0xf2>
    23a0:	00 c0       	rjmp	.+0      	; 0x23a2 <m_wii_open+0xf8>
    23a2:	00 00       	nop
    23a4:	88 e5       	ldi	r24, 0x58	; 88
    23a6:	0e 94 3e 11 	call	0x227c	; 0x227c <start_write>
    23aa:	88 23       	and	r24, r24
    23ac:	09 f4       	brne	.+2      	; 0x23b0 <m_wii_open+0x106>
    23ae:	72 c0       	rjmp	.+228    	; 0x2494 <m_wii_open+0x1ea>
    23b0:	8a e1       	ldi	r24, 0x1A	; 26
    23b2:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    23b6:	88 23       	and	r24, r24
    23b8:	09 f4       	brne	.+2      	; 0x23bc <m_wii_open+0x112>
    23ba:	6e c0       	rjmp	.+220    	; 0x2498 <m_wii_open+0x1ee>
    23bc:	80 e4       	ldi	r24, 0x40	; 64
    23be:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    23c2:	88 23       	and	r24, r24
    23c4:	09 f4       	brne	.+2      	; 0x23c8 <m_wii_open+0x11e>
    23c6:	6a c0       	rjmp	.+212    	; 0x249c <m_wii_open+0x1f2>
    23c8:	80 e0       	ldi	r24, 0x00	; 0
    23ca:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    23ce:	88 23       	and	r24, r24
    23d0:	09 f4       	brne	.+2      	; 0x23d4 <m_wii_open+0x12a>
    23d2:	66 c0       	rjmp	.+204    	; 0x24a0 <m_wii_open+0x1f6>
    23d4:	84 e9       	ldi	r24, 0x94	; 148
    23d6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    23da:	83 ec       	ldi	r24, 0xC3	; 195
    23dc:	99 e0       	ldi	r25, 0x09	; 9
    23de:	01 97       	sbiw	r24, 0x01	; 1
    23e0:	f1 f7       	brne	.-4      	; 0x23de <m_wii_open+0x134>
    23e2:	00 c0       	rjmp	.+0      	; 0x23e4 <m_wii_open+0x13a>
    23e4:	00 00       	nop
    23e6:	88 e5       	ldi	r24, 0x58	; 88
    23e8:	0e 94 3e 11 	call	0x227c	; 0x227c <start_write>
    23ec:	88 23       	and	r24, r24
    23ee:	09 f4       	brne	.+2      	; 0x23f2 <m_wii_open+0x148>
    23f0:	59 c0       	rjmp	.+178    	; 0x24a4 <m_wii_open+0x1fa>
    23f2:	83 e3       	ldi	r24, 0x33	; 51
    23f4:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    23f8:	88 23       	and	r24, r24
    23fa:	09 f4       	brne	.+2      	; 0x23fe <m_wii_open+0x154>
    23fc:	55 c0       	rjmp	.+170    	; 0x24a8 <m_wii_open+0x1fe>
    23fe:	83 e0       	ldi	r24, 0x03	; 3
    2400:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    2404:	88 23       	and	r24, r24
    2406:	09 f4       	brne	.+2      	; 0x240a <m_wii_open+0x160>
    2408:	51 c0       	rjmp	.+162    	; 0x24ac <m_wii_open+0x202>
    240a:	84 e9       	ldi	r24, 0x94	; 148
    240c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2410:	83 ec       	ldi	r24, 0xC3	; 195
    2412:	99 e0       	ldi	r25, 0x09	; 9
    2414:	01 97       	sbiw	r24, 0x01	; 1
    2416:	f1 f7       	brne	.-4      	; 0x2414 <m_wii_open+0x16a>
    2418:	00 c0       	rjmp	.+0      	; 0x241a <m_wii_open+0x170>
    241a:	00 00       	nop
    241c:	88 e5       	ldi	r24, 0x58	; 88
    241e:	0e 94 3e 11 	call	0x227c	; 0x227c <start_write>
    2422:	88 23       	and	r24, r24
    2424:	09 f4       	brne	.+2      	; 0x2428 <m_wii_open+0x17e>
    2426:	44 c0       	rjmp	.+136    	; 0x24b0 <m_wii_open+0x206>
    2428:	80 e3       	ldi	r24, 0x30	; 48
    242a:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    242e:	88 23       	and	r24, r24
    2430:	09 f4       	brne	.+2      	; 0x2434 <m_wii_open+0x18a>
    2432:	40 c0       	rjmp	.+128    	; 0x24b4 <m_wii_open+0x20a>
    2434:	88 e0       	ldi	r24, 0x08	; 8
    2436:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    243a:	88 23       	and	r24, r24
    243c:	e9 f1       	breq	.+122    	; 0x24b8 <m_wii_open+0x20e>
    243e:	84 e9       	ldi	r24, 0x94	; 148
    2440:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2444:	83 ec       	ldi	r24, 0xC3	; 195
    2446:	99 e0       	ldi	r25, 0x09	; 9
    2448:	01 97       	sbiw	r24, 0x01	; 1
    244a:	f1 f7       	brne	.-4      	; 0x2448 <m_wii_open+0x19e>
    244c:	00 c0       	rjmp	.+0      	; 0x244e <m_wii_open+0x1a4>
    244e:	00 00       	nop
    2450:	81 e0       	ldi	r24, 0x01	; 1
    2452:	08 95       	ret
    2454:	80 e0       	ldi	r24, 0x00	; 0
    2456:	08 95       	ret
    2458:	80 e0       	ldi	r24, 0x00	; 0
    245a:	08 95       	ret
    245c:	80 e0       	ldi	r24, 0x00	; 0
    245e:	08 95       	ret
    2460:	80 e0       	ldi	r24, 0x00	; 0
    2462:	08 95       	ret
    2464:	80 e0       	ldi	r24, 0x00	; 0
    2466:	08 95       	ret
    2468:	80 e0       	ldi	r24, 0x00	; 0
    246a:	08 95       	ret
    246c:	80 e0       	ldi	r24, 0x00	; 0
    246e:	08 95       	ret
    2470:	80 e0       	ldi	r24, 0x00	; 0
    2472:	08 95       	ret
    2474:	80 e0       	ldi	r24, 0x00	; 0
    2476:	08 95       	ret
    2478:	80 e0       	ldi	r24, 0x00	; 0
    247a:	08 95       	ret
    247c:	80 e0       	ldi	r24, 0x00	; 0
    247e:	08 95       	ret
    2480:	80 e0       	ldi	r24, 0x00	; 0
    2482:	08 95       	ret
    2484:	80 e0       	ldi	r24, 0x00	; 0
    2486:	08 95       	ret
    2488:	80 e0       	ldi	r24, 0x00	; 0
    248a:	08 95       	ret
    248c:	80 e0       	ldi	r24, 0x00	; 0
    248e:	08 95       	ret
    2490:	80 e0       	ldi	r24, 0x00	; 0
    2492:	08 95       	ret
    2494:	80 e0       	ldi	r24, 0x00	; 0
    2496:	08 95       	ret
    2498:	80 e0       	ldi	r24, 0x00	; 0
    249a:	08 95       	ret
    249c:	80 e0       	ldi	r24, 0x00	; 0
    249e:	08 95       	ret
    24a0:	80 e0       	ldi	r24, 0x00	; 0
    24a2:	08 95       	ret
    24a4:	80 e0       	ldi	r24, 0x00	; 0
    24a6:	08 95       	ret
    24a8:	80 e0       	ldi	r24, 0x00	; 0
    24aa:	08 95       	ret
    24ac:	80 e0       	ldi	r24, 0x00	; 0
    24ae:	08 95       	ret
    24b0:	80 e0       	ldi	r24, 0x00	; 0
    24b2:	08 95       	ret
    24b4:	80 e0       	ldi	r24, 0x00	; 0
    24b6:	08 95       	ret
    24b8:	80 e0       	ldi	r24, 0x00	; 0
    24ba:	08 95       	ret

000024bc <start_read>:
    24bc:	cf 93       	push	r28
    24be:	c8 2f       	mov	r28, r24
    24c0:	84 ea       	ldi	r24, 0xA4	; 164
    24c2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    24c6:	0e 94 1e 11 	call	0x223c	; 0x223c <twi_wait>
    24ca:	88 23       	and	r24, r24
    24cc:	69 f0       	breq	.+26     	; 0x24e8 <start_read+0x2c>
    24ce:	8c 2f       	mov	r24, r28
    24d0:	88 0f       	add	r24, r24
    24d2:	8f 5f       	subi	r24, 0xFF	; 255
    24d4:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    24d8:	88 34       	cpi	r24, 0x48	; 72
    24da:	29 f4       	brne	.+10     	; 0x24e6 <start_read+0x2a>
    24dc:	84 e9       	ldi	r24, 0x94	; 148
    24de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    24e2:	80 e0       	ldi	r24, 0x00	; 0
    24e4:	01 c0       	rjmp	.+2      	; 0x24e8 <start_read+0x2c>
    24e6:	81 e0       	ldi	r24, 0x01	; 1
    24e8:	cf 91       	pop	r28
    24ea:	08 95       	ret

000024ec <m_wii_read>:
    24ec:	0f 93       	push	r16
    24ee:	1f 93       	push	r17
    24f0:	cf 93       	push	r28
    24f2:	df 93       	push	r29
    24f4:	cd b7       	in	r28, 0x3d	; 61
    24f6:	de b7       	in	r29, 0x3e	; 62
    24f8:	60 97       	sbiw	r28, 0x10	; 16
    24fa:	0f b6       	in	r0, 0x3f	; 63
    24fc:	f8 94       	cli
    24fe:	de bf       	out	0x3e, r29	; 62
    2500:	0f be       	out	0x3f, r0	; 63
    2502:	cd bf       	out	0x3d, r28	; 61
    2504:	8c 01       	movw	r16, r24
    2506:	fe 01       	movw	r30, r28
    2508:	31 96       	adiw	r30, 0x01	; 1
    250a:	80 e1       	ldi	r24, 0x10	; 16
    250c:	df 01       	movw	r26, r30
    250e:	1d 92       	st	X+, r1
    2510:	8a 95       	dec	r24
    2512:	e9 f7       	brne	.-6      	; 0x250e <m_wii_read+0x22>
    2514:	88 e5       	ldi	r24, 0x58	; 88
    2516:	0e 94 3e 11 	call	0x227c	; 0x227c <start_write>
    251a:	88 23       	and	r24, r24
    251c:	09 f4       	brne	.+2      	; 0x2520 <m_wii_read+0x34>
    251e:	69 c0       	rjmp	.+210    	; 0x25f2 <m_wii_read+0x106>
    2520:	86 e3       	ldi	r24, 0x36	; 54
    2522:	0e 94 31 11 	call	0x2262	; 0x2262 <send_byte>
    2526:	88 23       	and	r24, r24
    2528:	09 f4       	brne	.+2      	; 0x252c <m_wii_read+0x40>
    252a:	65 c0       	rjmp	.+202    	; 0x25f6 <m_wii_read+0x10a>
    252c:	84 e9       	ldi	r24, 0x94	; 148
    252e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2532:	b8 e0       	ldi	r27, 0x08	; 8
    2534:	ba 95       	dec	r27
    2536:	f1 f7       	brne	.-4      	; 0x2534 <m_wii_read+0x48>
    2538:	00 00       	nop
    253a:	88 e5       	ldi	r24, 0x58	; 88
    253c:	0e 94 5e 12 	call	0x24bc	; 0x24bc <start_read>
    2540:	88 23       	and	r24, r24
    2542:	09 f4       	brne	.+2      	; 0x2546 <m_wii_read+0x5a>
    2544:	5a c0       	rjmp	.+180    	; 0x25fa <m_wii_read+0x10e>
    2546:	be 01       	movw	r22, r28
    2548:	6f 5f       	subi	r22, 0xFF	; 255
    254a:	7f 4f       	sbci	r23, 0xFF	; 255
    254c:	ae 01       	movw	r20, r28
    254e:	40 5f       	subi	r20, 0xF0	; 240
    2550:	5f 4f       	sbci	r21, 0xFF	; 255
    2552:	ec eb       	ldi	r30, 0xBC	; 188
    2554:	f0 e0       	ldi	r31, 0x00	; 0
    2556:	84 ec       	ldi	r24, 0xC4	; 196
    2558:	2b eb       	ldi	r18, 0xBB	; 187
    255a:	30 e0       	ldi	r19, 0x00	; 0
    255c:	80 83       	st	Z, r24
    255e:	90 81       	ld	r25, Z
    2560:	99 23       	and	r25, r25
    2562:	ec f7       	brge	.-6      	; 0x255e <m_wii_read+0x72>
    2564:	d9 01       	movw	r26, r18
    2566:	9c 91       	ld	r25, X
    2568:	db 01       	movw	r26, r22
    256a:	9d 93       	st	X+, r25
    256c:	bd 01       	movw	r22, r26
    256e:	a4 17       	cp	r26, r20
    2570:	b5 07       	cpc	r27, r21
    2572:	a1 f7       	brne	.-24     	; 0x255c <m_wii_read+0x70>
    2574:	84 e8       	ldi	r24, 0x84	; 132
    2576:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    257a:	ec eb       	ldi	r30, 0xBC	; 188
    257c:	f0 e0       	ldi	r31, 0x00	; 0
    257e:	80 81       	ld	r24, Z
    2580:	88 23       	and	r24, r24
    2582:	ec f7       	brge	.-6      	; 0x257e <m_wii_read+0x92>
    2584:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2588:	88 8b       	std	Y+16, r24	; 0x10
    258a:	84 e9       	ldi	r24, 0x94	; 148
    258c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2590:	be 01       	movw	r22, r28
    2592:	6c 5f       	subi	r22, 0xFC	; 252
    2594:	7f 4f       	sbci	r23, 0xFF	; 255
    2596:	f8 01       	movw	r30, r16
    2598:	08 5e       	subi	r16, 0xE8	; 232
    259a:	1f 4f       	sbci	r17, 0xFF	; 255
    259c:	db 01       	movw	r26, r22
    259e:	2c 91       	ld	r18, X
    25a0:	32 2f       	mov	r19, r18
    25a2:	30 73       	andi	r19, 0x30	; 48
    25a4:	cb 01       	movw	r24, r22
    25a6:	02 97       	sbiw	r24, 0x02	; 2
    25a8:	dc 01       	movw	r26, r24
    25aa:	8c 91       	ld	r24, X
    25ac:	90 e0       	ldi	r25, 0x00	; 0
    25ae:	b0 e1       	ldi	r27, 0x10	; 16
    25b0:	3b 9f       	mul	r19, r27
    25b2:	80 0d       	add	r24, r0
    25b4:	91 1d       	adc	r25, r1
    25b6:	11 24       	eor	r1, r1
    25b8:	91 83       	std	Z+1, r25	; 0x01
    25ba:	80 83       	st	Z, r24
    25bc:	42 2f       	mov	r20, r18
    25be:	40 7c       	andi	r20, 0xC0	; 192
    25c0:	50 e0       	ldi	r21, 0x00	; 0
    25c2:	44 0f       	add	r20, r20
    25c4:	55 1f       	adc	r21, r21
    25c6:	44 0f       	add	r20, r20
    25c8:	55 1f       	adc	r21, r21
    25ca:	cb 01       	movw	r24, r22
    25cc:	01 97       	sbiw	r24, 0x01	; 1
    25ce:	dc 01       	movw	r26, r24
    25d0:	8c 91       	ld	r24, X
    25d2:	48 0f       	add	r20, r24
    25d4:	51 1d       	adc	r21, r1
    25d6:	53 83       	std	Z+3, r21	; 0x03
    25d8:	42 83       	std	Z+2, r20	; 0x02
    25da:	2f 70       	andi	r18, 0x0F	; 15
    25dc:	30 e0       	ldi	r19, 0x00	; 0
    25de:	35 83       	std	Z+5, r19	; 0x05
    25e0:	24 83       	std	Z+4, r18	; 0x04
    25e2:	6d 5f       	subi	r22, 0xFD	; 253
    25e4:	7f 4f       	sbci	r23, 0xFF	; 255
    25e6:	36 96       	adiw	r30, 0x06	; 6
    25e8:	e0 17       	cp	r30, r16
    25ea:	f1 07       	cpc	r31, r17
    25ec:	b9 f6       	brne	.-82     	; 0x259c <m_wii_read+0xb0>
    25ee:	81 e0       	ldi	r24, 0x01	; 1
    25f0:	05 c0       	rjmp	.+10     	; 0x25fc <m_wii_read+0x110>
    25f2:	80 e0       	ldi	r24, 0x00	; 0
    25f4:	03 c0       	rjmp	.+6      	; 0x25fc <m_wii_read+0x110>
    25f6:	80 e0       	ldi	r24, 0x00	; 0
    25f8:	01 c0       	rjmp	.+2      	; 0x25fc <m_wii_read+0x110>
    25fa:	80 e0       	ldi	r24, 0x00	; 0
    25fc:	60 96       	adiw	r28, 0x10	; 16
    25fe:	0f b6       	in	r0, 0x3f	; 63
    2600:	f8 94       	cli
    2602:	de bf       	out	0x3e, r29	; 62
    2604:	0f be       	out	0x3f, r0	; 63
    2606:	cd bf       	out	0x3d, r28	; 61
    2608:	df 91       	pop	r29
    260a:	cf 91       	pop	r28
    260c:	1f 91       	pop	r17
    260e:	0f 91       	pop	r16
    2610:	08 95       	ret

00002612 <__subsf3>:
    2612:	50 58       	subi	r21, 0x80	; 128

00002614 <__addsf3>:
    2614:	bb 27       	eor	r27, r27
    2616:	aa 27       	eor	r26, r26
    2618:	0e 94 21 13 	call	0x2642	; 0x2642 <__addsf3x>
    261c:	0c 94 64 15 	jmp	0x2ac8	; 0x2ac8 <__fp_round>
    2620:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__fp_pscA>
    2624:	38 f0       	brcs	.+14     	; 0x2634 <__addsf3+0x20>
    2626:	0e 94 32 15 	call	0x2a64	; 0x2a64 <__fp_pscB>
    262a:	20 f0       	brcs	.+8      	; 0x2634 <__addsf3+0x20>
    262c:	39 f4       	brne	.+14     	; 0x263c <__addsf3+0x28>
    262e:	9f 3f       	cpi	r25, 0xFF	; 255
    2630:	19 f4       	brne	.+6      	; 0x2638 <__addsf3+0x24>
    2632:	26 f4       	brtc	.+8      	; 0x263c <__addsf3+0x28>
    2634:	0c 94 01 15 	jmp	0x2a02	; 0x2a02 <__fp_nan>
    2638:	0e f4       	brtc	.+2      	; 0x263c <__addsf3+0x28>
    263a:	e0 95       	com	r30
    263c:	e7 fb       	bst	r30, 7
    263e:	0c 94 fb 14 	jmp	0x29f6	; 0x29f6 <__fp_inf>

00002642 <__addsf3x>:
    2642:	e9 2f       	mov	r30, r25
    2644:	0e 94 89 15 	call	0x2b12	; 0x2b12 <__fp_split3>
    2648:	58 f3       	brcs	.-42     	; 0x2620 <__addsf3+0xc>
    264a:	ba 17       	cp	r27, r26
    264c:	62 07       	cpc	r22, r18
    264e:	73 07       	cpc	r23, r19
    2650:	84 07       	cpc	r24, r20
    2652:	95 07       	cpc	r25, r21
    2654:	20 f0       	brcs	.+8      	; 0x265e <__addsf3x+0x1c>
    2656:	79 f4       	brne	.+30     	; 0x2676 <__addsf3x+0x34>
    2658:	a6 f5       	brtc	.+104    	; 0x26c2 <__addsf3x+0x80>
    265a:	0c 94 ab 15 	jmp	0x2b56	; 0x2b56 <__fp_zero>
    265e:	0e f4       	brtc	.+2      	; 0x2662 <__addsf3x+0x20>
    2660:	e0 95       	com	r30
    2662:	0b 2e       	mov	r0, r27
    2664:	ba 2f       	mov	r27, r26
    2666:	a0 2d       	mov	r26, r0
    2668:	0b 01       	movw	r0, r22
    266a:	b9 01       	movw	r22, r18
    266c:	90 01       	movw	r18, r0
    266e:	0c 01       	movw	r0, r24
    2670:	ca 01       	movw	r24, r20
    2672:	a0 01       	movw	r20, r0
    2674:	11 24       	eor	r1, r1
    2676:	ff 27       	eor	r31, r31
    2678:	59 1b       	sub	r21, r25
    267a:	99 f0       	breq	.+38     	; 0x26a2 <__addsf3x+0x60>
    267c:	59 3f       	cpi	r21, 0xF9	; 249
    267e:	50 f4       	brcc	.+20     	; 0x2694 <__addsf3x+0x52>
    2680:	50 3e       	cpi	r21, 0xE0	; 224
    2682:	68 f1       	brcs	.+90     	; 0x26de <__addsf3x+0x9c>
    2684:	1a 16       	cp	r1, r26
    2686:	f0 40       	sbci	r31, 0x00	; 0
    2688:	a2 2f       	mov	r26, r18
    268a:	23 2f       	mov	r18, r19
    268c:	34 2f       	mov	r19, r20
    268e:	44 27       	eor	r20, r20
    2690:	58 5f       	subi	r21, 0xF8	; 248
    2692:	f3 cf       	rjmp	.-26     	; 0x267a <__addsf3x+0x38>
    2694:	46 95       	lsr	r20
    2696:	37 95       	ror	r19
    2698:	27 95       	ror	r18
    269a:	a7 95       	ror	r26
    269c:	f0 40       	sbci	r31, 0x00	; 0
    269e:	53 95       	inc	r21
    26a0:	c9 f7       	brne	.-14     	; 0x2694 <__addsf3x+0x52>
    26a2:	7e f4       	brtc	.+30     	; 0x26c2 <__addsf3x+0x80>
    26a4:	1f 16       	cp	r1, r31
    26a6:	ba 0b       	sbc	r27, r26
    26a8:	62 0b       	sbc	r22, r18
    26aa:	73 0b       	sbc	r23, r19
    26ac:	84 0b       	sbc	r24, r20
    26ae:	ba f0       	brmi	.+46     	; 0x26de <__addsf3x+0x9c>
    26b0:	91 50       	subi	r25, 0x01	; 1
    26b2:	a1 f0       	breq	.+40     	; 0x26dc <__addsf3x+0x9a>
    26b4:	ff 0f       	add	r31, r31
    26b6:	bb 1f       	adc	r27, r27
    26b8:	66 1f       	adc	r22, r22
    26ba:	77 1f       	adc	r23, r23
    26bc:	88 1f       	adc	r24, r24
    26be:	c2 f7       	brpl	.-16     	; 0x26b0 <__addsf3x+0x6e>
    26c0:	0e c0       	rjmp	.+28     	; 0x26de <__addsf3x+0x9c>
    26c2:	ba 0f       	add	r27, r26
    26c4:	62 1f       	adc	r22, r18
    26c6:	73 1f       	adc	r23, r19
    26c8:	84 1f       	adc	r24, r20
    26ca:	48 f4       	brcc	.+18     	; 0x26de <__addsf3x+0x9c>
    26cc:	87 95       	ror	r24
    26ce:	77 95       	ror	r23
    26d0:	67 95       	ror	r22
    26d2:	b7 95       	ror	r27
    26d4:	f7 95       	ror	r31
    26d6:	9e 3f       	cpi	r25, 0xFE	; 254
    26d8:	08 f0       	brcs	.+2      	; 0x26dc <__addsf3x+0x9a>
    26da:	b0 cf       	rjmp	.-160    	; 0x263c <__addsf3+0x28>
    26dc:	93 95       	inc	r25
    26de:	88 0f       	add	r24, r24
    26e0:	08 f0       	brcs	.+2      	; 0x26e4 <__addsf3x+0xa2>
    26e2:	99 27       	eor	r25, r25
    26e4:	ee 0f       	add	r30, r30
    26e6:	97 95       	ror	r25
    26e8:	87 95       	ror	r24
    26ea:	08 95       	ret
    26ec:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__fp_pscA>
    26f0:	60 f0       	brcs	.+24     	; 0x270a <__addsf3x+0xc8>
    26f2:	80 e8       	ldi	r24, 0x80	; 128
    26f4:	91 e0       	ldi	r25, 0x01	; 1
    26f6:	09 f4       	brne	.+2      	; 0x26fa <__addsf3x+0xb8>
    26f8:	9e ef       	ldi	r25, 0xFE	; 254
    26fa:	0e 94 32 15 	call	0x2a64	; 0x2a64 <__fp_pscB>
    26fe:	28 f0       	brcs	.+10     	; 0x270a <__addsf3x+0xc8>
    2700:	40 e8       	ldi	r20, 0x80	; 128
    2702:	51 e0       	ldi	r21, 0x01	; 1
    2704:	71 f4       	brne	.+28     	; 0x2722 <atan2+0x10>
    2706:	5e ef       	ldi	r21, 0xFE	; 254
    2708:	0c c0       	rjmp	.+24     	; 0x2722 <atan2+0x10>
    270a:	0c 94 01 15 	jmp	0x2a02	; 0x2a02 <__fp_nan>
    270e:	0c 94 ab 15 	jmp	0x2b56	; 0x2b56 <__fp_zero>

00002712 <atan2>:
    2712:	e9 2f       	mov	r30, r25
    2714:	e0 78       	andi	r30, 0x80	; 128
    2716:	0e 94 89 15 	call	0x2b12	; 0x2b12 <__fp_split3>
    271a:	40 f3       	brcs	.-48     	; 0x26ec <__addsf3x+0xaa>
    271c:	09 2e       	mov	r0, r25
    271e:	05 2a       	or	r0, r21
    2720:	b1 f3       	breq	.-20     	; 0x270e <__addsf3x+0xcc>
    2722:	26 17       	cp	r18, r22
    2724:	37 07       	cpc	r19, r23
    2726:	48 07       	cpc	r20, r24
    2728:	59 07       	cpc	r21, r25
    272a:	38 f0       	brcs	.+14     	; 0x273a <atan2+0x28>
    272c:	0e 2e       	mov	r0, r30
    272e:	07 f8       	bld	r0, 7
    2730:	e0 25       	eor	r30, r0
    2732:	69 f0       	breq	.+26     	; 0x274e <atan2+0x3c>
    2734:	e0 25       	eor	r30, r0
    2736:	e0 64       	ori	r30, 0x40	; 64
    2738:	0a c0       	rjmp	.+20     	; 0x274e <atan2+0x3c>
    273a:	ef 63       	ori	r30, 0x3F	; 63
    273c:	07 f8       	bld	r0, 7
    273e:	00 94       	com	r0
    2740:	07 fa       	bst	r0, 7
    2742:	db 01       	movw	r26, r22
    2744:	b9 01       	movw	r22, r18
    2746:	9d 01       	movw	r18, r26
    2748:	dc 01       	movw	r26, r24
    274a:	ca 01       	movw	r24, r20
    274c:	ad 01       	movw	r20, r26
    274e:	ef 93       	push	r30
    2750:	0e 94 09 14 	call	0x2812	; 0x2812 <__divsf3_pse>
    2754:	0e 94 64 15 	call	0x2ac8	; 0x2ac8 <__fp_round>
    2758:	0e 94 b9 13 	call	0x2772	; 0x2772 <atan>
    275c:	5f 91       	pop	r21
    275e:	55 23       	and	r21, r21
    2760:	39 f0       	breq	.+14     	; 0x2770 <atan2+0x5e>
    2762:	2b ed       	ldi	r18, 0xDB	; 219
    2764:	3f e0       	ldi	r19, 0x0F	; 15
    2766:	49 e4       	ldi	r20, 0x49	; 73
    2768:	50 fd       	sbrc	r21, 0
    276a:	49 ec       	ldi	r20, 0xC9	; 201
    276c:	0c 94 0a 13 	jmp	0x2614	; 0x2614 <__addsf3>
    2770:	08 95       	ret

00002772 <atan>:
    2772:	df 93       	push	r29
    2774:	dd 27       	eor	r29, r29
    2776:	b9 2f       	mov	r27, r25
    2778:	bf 77       	andi	r27, 0x7F	; 127
    277a:	40 e8       	ldi	r20, 0x80	; 128
    277c:	5f e3       	ldi	r21, 0x3F	; 63
    277e:	16 16       	cp	r1, r22
    2780:	17 06       	cpc	r1, r23
    2782:	48 07       	cpc	r20, r24
    2784:	5b 07       	cpc	r21, r27
    2786:	18 f4       	brcc	.+6      	; 0x278e <atan+0x1c>
    2788:	d9 2f       	mov	r29, r25
    278a:	0e 94 b7 15 	call	0x2b6e	; 0x2b6e <inverse>
    278e:	9f 93       	push	r25
    2790:	8f 93       	push	r24
    2792:	7f 93       	push	r23
    2794:	6f 93       	push	r22
    2796:	0e 94 7a 16 	call	0x2cf4	; 0x2cf4 <square>
    279a:	e0 ed       	ldi	r30, 0xD0	; 208
    279c:	f0 e0       	ldi	r31, 0x00	; 0
    279e:	0e 94 04 15 	call	0x2a08	; 0x2a08 <__fp_powser>
    27a2:	0e 94 64 15 	call	0x2ac8	; 0x2ac8 <__fp_round>
    27a6:	2f 91       	pop	r18
    27a8:	3f 91       	pop	r19
    27aa:	4f 91       	pop	r20
    27ac:	5f 91       	pop	r21
    27ae:	0e 94 d2 15 	call	0x2ba4	; 0x2ba4 <__mulsf3x>
    27b2:	dd 23       	and	r29, r29
    27b4:	51 f0       	breq	.+20     	; 0x27ca <atan+0x58>
    27b6:	90 58       	subi	r25, 0x80	; 128
    27b8:	a2 ea       	ldi	r26, 0xA2	; 162
    27ba:	2a ed       	ldi	r18, 0xDA	; 218
    27bc:	3f e0       	ldi	r19, 0x0F	; 15
    27be:	49 ec       	ldi	r20, 0xC9	; 201
    27c0:	5f e3       	ldi	r21, 0x3F	; 63
    27c2:	d0 78       	andi	r29, 0x80	; 128
    27c4:	5d 27       	eor	r21, r29
    27c6:	0e 94 21 13 	call	0x2642	; 0x2642 <__addsf3x>
    27ca:	df 91       	pop	r29
    27cc:	0c 94 64 15 	jmp	0x2ac8	; 0x2ac8 <__fp_round>

000027d0 <__cmpsf2>:
    27d0:	0e 94 d7 14 	call	0x29ae	; 0x29ae <__fp_cmp>
    27d4:	08 f4       	brcc	.+2      	; 0x27d8 <__cmpsf2+0x8>
    27d6:	81 e0       	ldi	r24, 0x01	; 1
    27d8:	08 95       	ret

000027da <cos>:
    27da:	0e 94 3b 15 	call	0x2a76	; 0x2a76 <__fp_rempio2>
    27de:	e3 95       	inc	r30
    27e0:	0c 94 75 15 	jmp	0x2aea	; 0x2aea <__fp_sinus>

000027e4 <__divsf3>:
    27e4:	0e 94 06 14 	call	0x280c	; 0x280c <__divsf3x>
    27e8:	0c 94 64 15 	jmp	0x2ac8	; 0x2ac8 <__fp_round>
    27ec:	0e 94 32 15 	call	0x2a64	; 0x2a64 <__fp_pscB>
    27f0:	58 f0       	brcs	.+22     	; 0x2808 <__divsf3+0x24>
    27f2:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__fp_pscA>
    27f6:	40 f0       	brcs	.+16     	; 0x2808 <__divsf3+0x24>
    27f8:	29 f4       	brne	.+10     	; 0x2804 <__divsf3+0x20>
    27fa:	5f 3f       	cpi	r21, 0xFF	; 255
    27fc:	29 f0       	breq	.+10     	; 0x2808 <__divsf3+0x24>
    27fe:	0c 94 fb 14 	jmp	0x29f6	; 0x29f6 <__fp_inf>
    2802:	51 11       	cpse	r21, r1
    2804:	0c 94 ac 15 	jmp	0x2b58	; 0x2b58 <__fp_szero>
    2808:	0c 94 01 15 	jmp	0x2a02	; 0x2a02 <__fp_nan>

0000280c <__divsf3x>:
    280c:	0e 94 89 15 	call	0x2b12	; 0x2b12 <__fp_split3>
    2810:	68 f3       	brcs	.-38     	; 0x27ec <__divsf3+0x8>

00002812 <__divsf3_pse>:
    2812:	99 23       	and	r25, r25
    2814:	b1 f3       	breq	.-20     	; 0x2802 <__divsf3+0x1e>
    2816:	55 23       	and	r21, r21
    2818:	91 f3       	breq	.-28     	; 0x27fe <__divsf3+0x1a>
    281a:	95 1b       	sub	r25, r21
    281c:	55 0b       	sbc	r21, r21
    281e:	bb 27       	eor	r27, r27
    2820:	aa 27       	eor	r26, r26
    2822:	62 17       	cp	r22, r18
    2824:	73 07       	cpc	r23, r19
    2826:	84 07       	cpc	r24, r20
    2828:	38 f0       	brcs	.+14     	; 0x2838 <__divsf3_pse+0x26>
    282a:	9f 5f       	subi	r25, 0xFF	; 255
    282c:	5f 4f       	sbci	r21, 0xFF	; 255
    282e:	22 0f       	add	r18, r18
    2830:	33 1f       	adc	r19, r19
    2832:	44 1f       	adc	r20, r20
    2834:	aa 1f       	adc	r26, r26
    2836:	a9 f3       	breq	.-22     	; 0x2822 <__divsf3_pse+0x10>
    2838:	35 d0       	rcall	.+106    	; 0x28a4 <__divsf3_pse+0x92>
    283a:	0e 2e       	mov	r0, r30
    283c:	3a f0       	brmi	.+14     	; 0x284c <__divsf3_pse+0x3a>
    283e:	e0 e8       	ldi	r30, 0x80	; 128
    2840:	32 d0       	rcall	.+100    	; 0x28a6 <__divsf3_pse+0x94>
    2842:	91 50       	subi	r25, 0x01	; 1
    2844:	50 40       	sbci	r21, 0x00	; 0
    2846:	e6 95       	lsr	r30
    2848:	00 1c       	adc	r0, r0
    284a:	ca f7       	brpl	.-14     	; 0x283e <__divsf3_pse+0x2c>
    284c:	2b d0       	rcall	.+86     	; 0x28a4 <__divsf3_pse+0x92>
    284e:	fe 2f       	mov	r31, r30
    2850:	29 d0       	rcall	.+82     	; 0x28a4 <__divsf3_pse+0x92>
    2852:	66 0f       	add	r22, r22
    2854:	77 1f       	adc	r23, r23
    2856:	88 1f       	adc	r24, r24
    2858:	bb 1f       	adc	r27, r27
    285a:	26 17       	cp	r18, r22
    285c:	37 07       	cpc	r19, r23
    285e:	48 07       	cpc	r20, r24
    2860:	ab 07       	cpc	r26, r27
    2862:	b0 e8       	ldi	r27, 0x80	; 128
    2864:	09 f0       	breq	.+2      	; 0x2868 <__divsf3_pse+0x56>
    2866:	bb 0b       	sbc	r27, r27
    2868:	80 2d       	mov	r24, r0
    286a:	bf 01       	movw	r22, r30
    286c:	ff 27       	eor	r31, r31
    286e:	93 58       	subi	r25, 0x83	; 131
    2870:	5f 4f       	sbci	r21, 0xFF	; 255
    2872:	3a f0       	brmi	.+14     	; 0x2882 <__divsf3_pse+0x70>
    2874:	9e 3f       	cpi	r25, 0xFE	; 254
    2876:	51 05       	cpc	r21, r1
    2878:	78 f0       	brcs	.+30     	; 0x2898 <__divsf3_pse+0x86>
    287a:	0c 94 fb 14 	jmp	0x29f6	; 0x29f6 <__fp_inf>
    287e:	0c 94 ac 15 	jmp	0x2b58	; 0x2b58 <__fp_szero>
    2882:	5f 3f       	cpi	r21, 0xFF	; 255
    2884:	e4 f3       	brlt	.-8      	; 0x287e <__divsf3_pse+0x6c>
    2886:	98 3e       	cpi	r25, 0xE8	; 232
    2888:	d4 f3       	brlt	.-12     	; 0x287e <__divsf3_pse+0x6c>
    288a:	86 95       	lsr	r24
    288c:	77 95       	ror	r23
    288e:	67 95       	ror	r22
    2890:	b7 95       	ror	r27
    2892:	f7 95       	ror	r31
    2894:	9f 5f       	subi	r25, 0xFF	; 255
    2896:	c9 f7       	brne	.-14     	; 0x288a <__divsf3_pse+0x78>
    2898:	88 0f       	add	r24, r24
    289a:	91 1d       	adc	r25, r1
    289c:	96 95       	lsr	r25
    289e:	87 95       	ror	r24
    28a0:	97 f9       	bld	r25, 7
    28a2:	08 95       	ret
    28a4:	e1 e0       	ldi	r30, 0x01	; 1
    28a6:	66 0f       	add	r22, r22
    28a8:	77 1f       	adc	r23, r23
    28aa:	88 1f       	adc	r24, r24
    28ac:	bb 1f       	adc	r27, r27
    28ae:	62 17       	cp	r22, r18
    28b0:	73 07       	cpc	r23, r19
    28b2:	84 07       	cpc	r24, r20
    28b4:	ba 07       	cpc	r27, r26
    28b6:	20 f0       	brcs	.+8      	; 0x28c0 <__divsf3_pse+0xae>
    28b8:	62 1b       	sub	r22, r18
    28ba:	73 0b       	sbc	r23, r19
    28bc:	84 0b       	sbc	r24, r20
    28be:	ba 0b       	sbc	r27, r26
    28c0:	ee 1f       	adc	r30, r30
    28c2:	88 f7       	brcc	.-30     	; 0x28a6 <__divsf3_pse+0x94>
    28c4:	e0 95       	com	r30
    28c6:	08 95       	ret

000028c8 <__fixsfsi>:
    28c8:	0e 94 6b 14 	call	0x28d6	; 0x28d6 <__fixunssfsi>
    28cc:	68 94       	set
    28ce:	b1 11       	cpse	r27, r1
    28d0:	0c 94 ac 15 	jmp	0x2b58	; 0x2b58 <__fp_szero>
    28d4:	08 95       	ret

000028d6 <__fixunssfsi>:
    28d6:	0e 94 91 15 	call	0x2b22	; 0x2b22 <__fp_splitA>
    28da:	88 f0       	brcs	.+34     	; 0x28fe <__fixunssfsi+0x28>
    28dc:	9f 57       	subi	r25, 0x7F	; 127
    28de:	98 f0       	brcs	.+38     	; 0x2906 <__fixunssfsi+0x30>
    28e0:	b9 2f       	mov	r27, r25
    28e2:	99 27       	eor	r25, r25
    28e4:	b7 51       	subi	r27, 0x17	; 23
    28e6:	b0 f0       	brcs	.+44     	; 0x2914 <__fixunssfsi+0x3e>
    28e8:	e1 f0       	breq	.+56     	; 0x2922 <__fixunssfsi+0x4c>
    28ea:	66 0f       	add	r22, r22
    28ec:	77 1f       	adc	r23, r23
    28ee:	88 1f       	adc	r24, r24
    28f0:	99 1f       	adc	r25, r25
    28f2:	1a f0       	brmi	.+6      	; 0x28fa <__fixunssfsi+0x24>
    28f4:	ba 95       	dec	r27
    28f6:	c9 f7       	brne	.-14     	; 0x28ea <__fixunssfsi+0x14>
    28f8:	14 c0       	rjmp	.+40     	; 0x2922 <__fixunssfsi+0x4c>
    28fa:	b1 30       	cpi	r27, 0x01	; 1
    28fc:	91 f0       	breq	.+36     	; 0x2922 <__fixunssfsi+0x4c>
    28fe:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <__fp_zero>
    2902:	b1 e0       	ldi	r27, 0x01	; 1
    2904:	08 95       	ret
    2906:	0c 94 ab 15 	jmp	0x2b56	; 0x2b56 <__fp_zero>
    290a:	67 2f       	mov	r22, r23
    290c:	78 2f       	mov	r23, r24
    290e:	88 27       	eor	r24, r24
    2910:	b8 5f       	subi	r27, 0xF8	; 248
    2912:	39 f0       	breq	.+14     	; 0x2922 <__fixunssfsi+0x4c>
    2914:	b9 3f       	cpi	r27, 0xF9	; 249
    2916:	cc f3       	brlt	.-14     	; 0x290a <__fixunssfsi+0x34>
    2918:	86 95       	lsr	r24
    291a:	77 95       	ror	r23
    291c:	67 95       	ror	r22
    291e:	b3 95       	inc	r27
    2920:	d9 f7       	brne	.-10     	; 0x2918 <__fixunssfsi+0x42>
    2922:	3e f4       	brtc	.+14     	; 0x2932 <__fixunssfsi+0x5c>
    2924:	90 95       	com	r25
    2926:	80 95       	com	r24
    2928:	70 95       	com	r23
    292a:	61 95       	neg	r22
    292c:	7f 4f       	sbci	r23, 0xFF	; 255
    292e:	8f 4f       	sbci	r24, 0xFF	; 255
    2930:	9f 4f       	sbci	r25, 0xFF	; 255
    2932:	08 95       	ret

00002934 <__floatunsisf>:
    2934:	e8 94       	clt
    2936:	09 c0       	rjmp	.+18     	; 0x294a <__floatsisf+0x12>

00002938 <__floatsisf>:
    2938:	97 fb       	bst	r25, 7
    293a:	3e f4       	brtc	.+14     	; 0x294a <__floatsisf+0x12>
    293c:	90 95       	com	r25
    293e:	80 95       	com	r24
    2940:	70 95       	com	r23
    2942:	61 95       	neg	r22
    2944:	7f 4f       	sbci	r23, 0xFF	; 255
    2946:	8f 4f       	sbci	r24, 0xFF	; 255
    2948:	9f 4f       	sbci	r25, 0xFF	; 255
    294a:	99 23       	and	r25, r25
    294c:	a9 f0       	breq	.+42     	; 0x2978 <__floatsisf+0x40>
    294e:	f9 2f       	mov	r31, r25
    2950:	96 e9       	ldi	r25, 0x96	; 150
    2952:	bb 27       	eor	r27, r27
    2954:	93 95       	inc	r25
    2956:	f6 95       	lsr	r31
    2958:	87 95       	ror	r24
    295a:	77 95       	ror	r23
    295c:	67 95       	ror	r22
    295e:	b7 95       	ror	r27
    2960:	f1 11       	cpse	r31, r1
    2962:	f8 cf       	rjmp	.-16     	; 0x2954 <__floatsisf+0x1c>
    2964:	fa f4       	brpl	.+62     	; 0x29a4 <__floatsisf+0x6c>
    2966:	bb 0f       	add	r27, r27
    2968:	11 f4       	brne	.+4      	; 0x296e <__floatsisf+0x36>
    296a:	60 ff       	sbrs	r22, 0
    296c:	1b c0       	rjmp	.+54     	; 0x29a4 <__floatsisf+0x6c>
    296e:	6f 5f       	subi	r22, 0xFF	; 255
    2970:	7f 4f       	sbci	r23, 0xFF	; 255
    2972:	8f 4f       	sbci	r24, 0xFF	; 255
    2974:	9f 4f       	sbci	r25, 0xFF	; 255
    2976:	16 c0       	rjmp	.+44     	; 0x29a4 <__floatsisf+0x6c>
    2978:	88 23       	and	r24, r24
    297a:	11 f0       	breq	.+4      	; 0x2980 <__floatsisf+0x48>
    297c:	96 e9       	ldi	r25, 0x96	; 150
    297e:	11 c0       	rjmp	.+34     	; 0x29a2 <__floatsisf+0x6a>
    2980:	77 23       	and	r23, r23
    2982:	21 f0       	breq	.+8      	; 0x298c <__floatsisf+0x54>
    2984:	9e e8       	ldi	r25, 0x8E	; 142
    2986:	87 2f       	mov	r24, r23
    2988:	76 2f       	mov	r23, r22
    298a:	05 c0       	rjmp	.+10     	; 0x2996 <__floatsisf+0x5e>
    298c:	66 23       	and	r22, r22
    298e:	71 f0       	breq	.+28     	; 0x29ac <__floatsisf+0x74>
    2990:	96 e8       	ldi	r25, 0x86	; 134
    2992:	86 2f       	mov	r24, r22
    2994:	70 e0       	ldi	r23, 0x00	; 0
    2996:	60 e0       	ldi	r22, 0x00	; 0
    2998:	2a f0       	brmi	.+10     	; 0x29a4 <__floatsisf+0x6c>
    299a:	9a 95       	dec	r25
    299c:	66 0f       	add	r22, r22
    299e:	77 1f       	adc	r23, r23
    29a0:	88 1f       	adc	r24, r24
    29a2:	da f7       	brpl	.-10     	; 0x299a <__floatsisf+0x62>
    29a4:	88 0f       	add	r24, r24
    29a6:	96 95       	lsr	r25
    29a8:	87 95       	ror	r24
    29aa:	97 f9       	bld	r25, 7
    29ac:	08 95       	ret

000029ae <__fp_cmp>:
    29ae:	99 0f       	add	r25, r25
    29b0:	00 08       	sbc	r0, r0
    29b2:	55 0f       	add	r21, r21
    29b4:	aa 0b       	sbc	r26, r26
    29b6:	e0 e8       	ldi	r30, 0x80	; 128
    29b8:	fe ef       	ldi	r31, 0xFE	; 254
    29ba:	16 16       	cp	r1, r22
    29bc:	17 06       	cpc	r1, r23
    29be:	e8 07       	cpc	r30, r24
    29c0:	f9 07       	cpc	r31, r25
    29c2:	c0 f0       	brcs	.+48     	; 0x29f4 <__fp_cmp+0x46>
    29c4:	12 16       	cp	r1, r18
    29c6:	13 06       	cpc	r1, r19
    29c8:	e4 07       	cpc	r30, r20
    29ca:	f5 07       	cpc	r31, r21
    29cc:	98 f0       	brcs	.+38     	; 0x29f4 <__fp_cmp+0x46>
    29ce:	62 1b       	sub	r22, r18
    29d0:	73 0b       	sbc	r23, r19
    29d2:	84 0b       	sbc	r24, r20
    29d4:	95 0b       	sbc	r25, r21
    29d6:	39 f4       	brne	.+14     	; 0x29e6 <__fp_cmp+0x38>
    29d8:	0a 26       	eor	r0, r26
    29da:	61 f0       	breq	.+24     	; 0x29f4 <__fp_cmp+0x46>
    29dc:	23 2b       	or	r18, r19
    29de:	24 2b       	or	r18, r20
    29e0:	25 2b       	or	r18, r21
    29e2:	21 f4       	brne	.+8      	; 0x29ec <__fp_cmp+0x3e>
    29e4:	08 95       	ret
    29e6:	0a 26       	eor	r0, r26
    29e8:	09 f4       	brne	.+2      	; 0x29ec <__fp_cmp+0x3e>
    29ea:	a1 40       	sbci	r26, 0x01	; 1
    29ec:	a6 95       	lsr	r26
    29ee:	8f ef       	ldi	r24, 0xFF	; 255
    29f0:	81 1d       	adc	r24, r1
    29f2:	81 1d       	adc	r24, r1
    29f4:	08 95       	ret

000029f6 <__fp_inf>:
    29f6:	97 f9       	bld	r25, 7
    29f8:	9f 67       	ori	r25, 0x7F	; 127
    29fa:	80 e8       	ldi	r24, 0x80	; 128
    29fc:	70 e0       	ldi	r23, 0x00	; 0
    29fe:	60 e0       	ldi	r22, 0x00	; 0
    2a00:	08 95       	ret

00002a02 <__fp_nan>:
    2a02:	9f ef       	ldi	r25, 0xFF	; 255
    2a04:	80 ec       	ldi	r24, 0xC0	; 192
    2a06:	08 95       	ret

00002a08 <__fp_powser>:
    2a08:	df 93       	push	r29
    2a0a:	cf 93       	push	r28
    2a0c:	1f 93       	push	r17
    2a0e:	0f 93       	push	r16
    2a10:	ff 92       	push	r15
    2a12:	ef 92       	push	r14
    2a14:	df 92       	push	r13
    2a16:	7b 01       	movw	r14, r22
    2a18:	8c 01       	movw	r16, r24
    2a1a:	68 94       	set
    2a1c:	06 c0       	rjmp	.+12     	; 0x2a2a <__fp_powser+0x22>
    2a1e:	da 2e       	mov	r13, r26
    2a20:	ef 01       	movw	r28, r30
    2a22:	0e 94 d2 15 	call	0x2ba4	; 0x2ba4 <__mulsf3x>
    2a26:	fe 01       	movw	r30, r28
    2a28:	e8 94       	clt
    2a2a:	a5 91       	lpm	r26, Z+
    2a2c:	25 91       	lpm	r18, Z+
    2a2e:	35 91       	lpm	r19, Z+
    2a30:	45 91       	lpm	r20, Z+
    2a32:	55 91       	lpm	r21, Z+
    2a34:	a6 f3       	brts	.-24     	; 0x2a1e <__fp_powser+0x16>
    2a36:	ef 01       	movw	r28, r30
    2a38:	0e 94 21 13 	call	0x2642	; 0x2642 <__addsf3x>
    2a3c:	fe 01       	movw	r30, r28
    2a3e:	97 01       	movw	r18, r14
    2a40:	a8 01       	movw	r20, r16
    2a42:	da 94       	dec	r13
    2a44:	69 f7       	brne	.-38     	; 0x2a20 <__fp_powser+0x18>
    2a46:	df 90       	pop	r13
    2a48:	ef 90       	pop	r14
    2a4a:	ff 90       	pop	r15
    2a4c:	0f 91       	pop	r16
    2a4e:	1f 91       	pop	r17
    2a50:	cf 91       	pop	r28
    2a52:	df 91       	pop	r29
    2a54:	08 95       	ret

00002a56 <__fp_pscA>:
    2a56:	00 24       	eor	r0, r0
    2a58:	0a 94       	dec	r0
    2a5a:	16 16       	cp	r1, r22
    2a5c:	17 06       	cpc	r1, r23
    2a5e:	18 06       	cpc	r1, r24
    2a60:	09 06       	cpc	r0, r25
    2a62:	08 95       	ret

00002a64 <__fp_pscB>:
    2a64:	00 24       	eor	r0, r0
    2a66:	0a 94       	dec	r0
    2a68:	12 16       	cp	r1, r18
    2a6a:	13 06       	cpc	r1, r19
    2a6c:	14 06       	cpc	r1, r20
    2a6e:	05 06       	cpc	r0, r21
    2a70:	08 95       	ret
    2a72:	0c 94 01 15 	jmp	0x2a02	; 0x2a02 <__fp_nan>

00002a76 <__fp_rempio2>:
    2a76:	0e 94 91 15 	call	0x2b22	; 0x2b22 <__fp_splitA>
    2a7a:	d8 f3       	brcs	.-10     	; 0x2a72 <__fp_pscB+0xe>
    2a7c:	e8 94       	clt
    2a7e:	e0 e0       	ldi	r30, 0x00	; 0
    2a80:	bb 27       	eor	r27, r27
    2a82:	9f 57       	subi	r25, 0x7F	; 127
    2a84:	f0 f0       	brcs	.+60     	; 0x2ac2 <__fp_rempio2+0x4c>
    2a86:	2a ed       	ldi	r18, 0xDA	; 218
    2a88:	3f e0       	ldi	r19, 0x0F	; 15
    2a8a:	49 ec       	ldi	r20, 0xC9	; 201
    2a8c:	06 c0       	rjmp	.+12     	; 0x2a9a <__fp_rempio2+0x24>
    2a8e:	ee 0f       	add	r30, r30
    2a90:	bb 0f       	add	r27, r27
    2a92:	66 1f       	adc	r22, r22
    2a94:	77 1f       	adc	r23, r23
    2a96:	88 1f       	adc	r24, r24
    2a98:	28 f0       	brcs	.+10     	; 0x2aa4 <__fp_rempio2+0x2e>
    2a9a:	b2 3a       	cpi	r27, 0xA2	; 162
    2a9c:	62 07       	cpc	r22, r18
    2a9e:	73 07       	cpc	r23, r19
    2aa0:	84 07       	cpc	r24, r20
    2aa2:	28 f0       	brcs	.+10     	; 0x2aae <__fp_rempio2+0x38>
    2aa4:	b2 5a       	subi	r27, 0xA2	; 162
    2aa6:	62 0b       	sbc	r22, r18
    2aa8:	73 0b       	sbc	r23, r19
    2aaa:	84 0b       	sbc	r24, r20
    2aac:	e3 95       	inc	r30
    2aae:	9a 95       	dec	r25
    2ab0:	72 f7       	brpl	.-36     	; 0x2a8e <__fp_rempio2+0x18>
    2ab2:	80 38       	cpi	r24, 0x80	; 128
    2ab4:	30 f4       	brcc	.+12     	; 0x2ac2 <__fp_rempio2+0x4c>
    2ab6:	9a 95       	dec	r25
    2ab8:	bb 0f       	add	r27, r27
    2aba:	66 1f       	adc	r22, r22
    2abc:	77 1f       	adc	r23, r23
    2abe:	88 1f       	adc	r24, r24
    2ac0:	d2 f7       	brpl	.-12     	; 0x2ab6 <__fp_rempio2+0x40>
    2ac2:	90 48       	sbci	r25, 0x80	; 128
    2ac4:	0c 94 80 16 	jmp	0x2d00	; 0x2d00 <__fp_mpack_finite>

00002ac8 <__fp_round>:
    2ac8:	09 2e       	mov	r0, r25
    2aca:	03 94       	inc	r0
    2acc:	00 0c       	add	r0, r0
    2ace:	11 f4       	brne	.+4      	; 0x2ad4 <__fp_round+0xc>
    2ad0:	88 23       	and	r24, r24
    2ad2:	52 f0       	brmi	.+20     	; 0x2ae8 <__fp_round+0x20>
    2ad4:	bb 0f       	add	r27, r27
    2ad6:	40 f4       	brcc	.+16     	; 0x2ae8 <__fp_round+0x20>
    2ad8:	bf 2b       	or	r27, r31
    2ada:	11 f4       	brne	.+4      	; 0x2ae0 <__fp_round+0x18>
    2adc:	60 ff       	sbrs	r22, 0
    2ade:	04 c0       	rjmp	.+8      	; 0x2ae8 <__fp_round+0x20>
    2ae0:	6f 5f       	subi	r22, 0xFF	; 255
    2ae2:	7f 4f       	sbci	r23, 0xFF	; 255
    2ae4:	8f 4f       	sbci	r24, 0xFF	; 255
    2ae6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ae8:	08 95       	ret

00002aea <__fp_sinus>:
    2aea:	ef 93       	push	r30
    2aec:	e0 ff       	sbrs	r30, 0
    2aee:	07 c0       	rjmp	.+14     	; 0x2afe <__fp_sinus+0x14>
    2af0:	a2 ea       	ldi	r26, 0xA2	; 162
    2af2:	2a ed       	ldi	r18, 0xDA	; 218
    2af4:	3f e0       	ldi	r19, 0x0F	; 15
    2af6:	49 ec       	ldi	r20, 0xC9	; 201
    2af8:	5f eb       	ldi	r21, 0xBF	; 191
    2afa:	0e 94 21 13 	call	0x2642	; 0x2642 <__addsf3x>
    2afe:	0e 94 64 15 	call	0x2ac8	; 0x2ac8 <__fp_round>
    2b02:	0f 90       	pop	r0
    2b04:	03 94       	inc	r0
    2b06:	01 fc       	sbrc	r0, 1
    2b08:	90 58       	subi	r25, 0x80	; 128
    2b0a:	ed ef       	ldi	r30, 0xFD	; 253
    2b0c:	f0 e0       	ldi	r31, 0x00	; 0
    2b0e:	0c 94 93 16 	jmp	0x2d26	; 0x2d26 <__fp_powsodd>

00002b12 <__fp_split3>:
    2b12:	57 fd       	sbrc	r21, 7
    2b14:	90 58       	subi	r25, 0x80	; 128
    2b16:	44 0f       	add	r20, r20
    2b18:	55 1f       	adc	r21, r21
    2b1a:	59 f0       	breq	.+22     	; 0x2b32 <__fp_splitA+0x10>
    2b1c:	5f 3f       	cpi	r21, 0xFF	; 255
    2b1e:	71 f0       	breq	.+28     	; 0x2b3c <__fp_splitA+0x1a>
    2b20:	47 95       	ror	r20

00002b22 <__fp_splitA>:
    2b22:	88 0f       	add	r24, r24
    2b24:	97 fb       	bst	r25, 7
    2b26:	99 1f       	adc	r25, r25
    2b28:	61 f0       	breq	.+24     	; 0x2b42 <__fp_splitA+0x20>
    2b2a:	9f 3f       	cpi	r25, 0xFF	; 255
    2b2c:	79 f0       	breq	.+30     	; 0x2b4c <__fp_splitA+0x2a>
    2b2e:	87 95       	ror	r24
    2b30:	08 95       	ret
    2b32:	12 16       	cp	r1, r18
    2b34:	13 06       	cpc	r1, r19
    2b36:	14 06       	cpc	r1, r20
    2b38:	55 1f       	adc	r21, r21
    2b3a:	f2 cf       	rjmp	.-28     	; 0x2b20 <__fp_split3+0xe>
    2b3c:	46 95       	lsr	r20
    2b3e:	f1 df       	rcall	.-30     	; 0x2b22 <__fp_splitA>
    2b40:	08 c0       	rjmp	.+16     	; 0x2b52 <__fp_splitA+0x30>
    2b42:	16 16       	cp	r1, r22
    2b44:	17 06       	cpc	r1, r23
    2b46:	18 06       	cpc	r1, r24
    2b48:	99 1f       	adc	r25, r25
    2b4a:	f1 cf       	rjmp	.-30     	; 0x2b2e <__fp_splitA+0xc>
    2b4c:	86 95       	lsr	r24
    2b4e:	71 05       	cpc	r23, r1
    2b50:	61 05       	cpc	r22, r1
    2b52:	08 94       	sec
    2b54:	08 95       	ret

00002b56 <__fp_zero>:
    2b56:	e8 94       	clt

00002b58 <__fp_szero>:
    2b58:	bb 27       	eor	r27, r27
    2b5a:	66 27       	eor	r22, r22
    2b5c:	77 27       	eor	r23, r23
    2b5e:	cb 01       	movw	r24, r22
    2b60:	97 f9       	bld	r25, 7
    2b62:	08 95       	ret

00002b64 <__gesf2>:
    2b64:	0e 94 d7 14 	call	0x29ae	; 0x29ae <__fp_cmp>
    2b68:	08 f4       	brcc	.+2      	; 0x2b6c <__gesf2+0x8>
    2b6a:	8f ef       	ldi	r24, 0xFF	; 255
    2b6c:	08 95       	ret

00002b6e <inverse>:
    2b6e:	9b 01       	movw	r18, r22
    2b70:	ac 01       	movw	r20, r24
    2b72:	60 e0       	ldi	r22, 0x00	; 0
    2b74:	70 e0       	ldi	r23, 0x00	; 0
    2b76:	80 e8       	ldi	r24, 0x80	; 128
    2b78:	9f e3       	ldi	r25, 0x3F	; 63
    2b7a:	0c 94 f2 13 	jmp	0x27e4	; 0x27e4 <__divsf3>

00002b7e <__mulsf3>:
    2b7e:	0e 94 d2 15 	call	0x2ba4	; 0x2ba4 <__mulsf3x>
    2b82:	0c 94 64 15 	jmp	0x2ac8	; 0x2ac8 <__fp_round>
    2b86:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__fp_pscA>
    2b8a:	38 f0       	brcs	.+14     	; 0x2b9a <__mulsf3+0x1c>
    2b8c:	0e 94 32 15 	call	0x2a64	; 0x2a64 <__fp_pscB>
    2b90:	20 f0       	brcs	.+8      	; 0x2b9a <__mulsf3+0x1c>
    2b92:	95 23       	and	r25, r21
    2b94:	11 f0       	breq	.+4      	; 0x2b9a <__mulsf3+0x1c>
    2b96:	0c 94 fb 14 	jmp	0x29f6	; 0x29f6 <__fp_inf>
    2b9a:	0c 94 01 15 	jmp	0x2a02	; 0x2a02 <__fp_nan>
    2b9e:	11 24       	eor	r1, r1
    2ba0:	0c 94 ac 15 	jmp	0x2b58	; 0x2b58 <__fp_szero>

00002ba4 <__mulsf3x>:
    2ba4:	0e 94 89 15 	call	0x2b12	; 0x2b12 <__fp_split3>
    2ba8:	70 f3       	brcs	.-36     	; 0x2b86 <__mulsf3+0x8>

00002baa <__mulsf3_pse>:
    2baa:	95 9f       	mul	r25, r21
    2bac:	c1 f3       	breq	.-16     	; 0x2b9e <__mulsf3+0x20>
    2bae:	95 0f       	add	r25, r21
    2bb0:	50 e0       	ldi	r21, 0x00	; 0
    2bb2:	55 1f       	adc	r21, r21
    2bb4:	62 9f       	mul	r22, r18
    2bb6:	f0 01       	movw	r30, r0
    2bb8:	72 9f       	mul	r23, r18
    2bba:	bb 27       	eor	r27, r27
    2bbc:	f0 0d       	add	r31, r0
    2bbe:	b1 1d       	adc	r27, r1
    2bc0:	63 9f       	mul	r22, r19
    2bc2:	aa 27       	eor	r26, r26
    2bc4:	f0 0d       	add	r31, r0
    2bc6:	b1 1d       	adc	r27, r1
    2bc8:	aa 1f       	adc	r26, r26
    2bca:	64 9f       	mul	r22, r20
    2bcc:	66 27       	eor	r22, r22
    2bce:	b0 0d       	add	r27, r0
    2bd0:	a1 1d       	adc	r26, r1
    2bd2:	66 1f       	adc	r22, r22
    2bd4:	82 9f       	mul	r24, r18
    2bd6:	22 27       	eor	r18, r18
    2bd8:	b0 0d       	add	r27, r0
    2bda:	a1 1d       	adc	r26, r1
    2bdc:	62 1f       	adc	r22, r18
    2bde:	73 9f       	mul	r23, r19
    2be0:	b0 0d       	add	r27, r0
    2be2:	a1 1d       	adc	r26, r1
    2be4:	62 1f       	adc	r22, r18
    2be6:	83 9f       	mul	r24, r19
    2be8:	a0 0d       	add	r26, r0
    2bea:	61 1d       	adc	r22, r1
    2bec:	22 1f       	adc	r18, r18
    2bee:	74 9f       	mul	r23, r20
    2bf0:	33 27       	eor	r19, r19
    2bf2:	a0 0d       	add	r26, r0
    2bf4:	61 1d       	adc	r22, r1
    2bf6:	23 1f       	adc	r18, r19
    2bf8:	84 9f       	mul	r24, r20
    2bfa:	60 0d       	add	r22, r0
    2bfc:	21 1d       	adc	r18, r1
    2bfe:	82 2f       	mov	r24, r18
    2c00:	76 2f       	mov	r23, r22
    2c02:	6a 2f       	mov	r22, r26
    2c04:	11 24       	eor	r1, r1
    2c06:	9f 57       	subi	r25, 0x7F	; 127
    2c08:	50 40       	sbci	r21, 0x00	; 0
    2c0a:	9a f0       	brmi	.+38     	; 0x2c32 <__mulsf3_pse+0x88>
    2c0c:	f1 f0       	breq	.+60     	; 0x2c4a <__mulsf3_pse+0xa0>
    2c0e:	88 23       	and	r24, r24
    2c10:	4a f0       	brmi	.+18     	; 0x2c24 <__mulsf3_pse+0x7a>
    2c12:	ee 0f       	add	r30, r30
    2c14:	ff 1f       	adc	r31, r31
    2c16:	bb 1f       	adc	r27, r27
    2c18:	66 1f       	adc	r22, r22
    2c1a:	77 1f       	adc	r23, r23
    2c1c:	88 1f       	adc	r24, r24
    2c1e:	91 50       	subi	r25, 0x01	; 1
    2c20:	50 40       	sbci	r21, 0x00	; 0
    2c22:	a9 f7       	brne	.-22     	; 0x2c0e <__mulsf3_pse+0x64>
    2c24:	9e 3f       	cpi	r25, 0xFE	; 254
    2c26:	51 05       	cpc	r21, r1
    2c28:	80 f0       	brcs	.+32     	; 0x2c4a <__mulsf3_pse+0xa0>
    2c2a:	0c 94 fb 14 	jmp	0x29f6	; 0x29f6 <__fp_inf>
    2c2e:	0c 94 ac 15 	jmp	0x2b58	; 0x2b58 <__fp_szero>
    2c32:	5f 3f       	cpi	r21, 0xFF	; 255
    2c34:	e4 f3       	brlt	.-8      	; 0x2c2e <__mulsf3_pse+0x84>
    2c36:	98 3e       	cpi	r25, 0xE8	; 232
    2c38:	d4 f3       	brlt	.-12     	; 0x2c2e <__mulsf3_pse+0x84>
    2c3a:	86 95       	lsr	r24
    2c3c:	77 95       	ror	r23
    2c3e:	67 95       	ror	r22
    2c40:	b7 95       	ror	r27
    2c42:	f7 95       	ror	r31
    2c44:	e7 95       	ror	r30
    2c46:	9f 5f       	subi	r25, 0xFF	; 255
    2c48:	c1 f7       	brne	.-16     	; 0x2c3a <__mulsf3_pse+0x90>
    2c4a:	fe 2b       	or	r31, r30
    2c4c:	88 0f       	add	r24, r24
    2c4e:	91 1d       	adc	r25, r1
    2c50:	96 95       	lsr	r25
    2c52:	87 95       	ror	r24
    2c54:	97 f9       	bld	r25, 7
    2c56:	08 95       	ret

00002c58 <sin>:
    2c58:	9f 93       	push	r25
    2c5a:	0e 94 3b 15 	call	0x2a76	; 0x2a76 <__fp_rempio2>
    2c5e:	0f 90       	pop	r0
    2c60:	07 fc       	sbrc	r0, 7
    2c62:	ee 5f       	subi	r30, 0xFE	; 254
    2c64:	0c 94 75 15 	jmp	0x2aea	; 0x2aea <__fp_sinus>
    2c68:	19 f4       	brne	.+6      	; 0x2c70 <sin+0x18>
    2c6a:	16 f4       	brtc	.+4      	; 0x2c70 <sin+0x18>
    2c6c:	0c 94 01 15 	jmp	0x2a02	; 0x2a02 <__fp_nan>
    2c70:	0c 94 7e 16 	jmp	0x2cfc	; 0x2cfc <__fp_mpack>

00002c74 <sqrt>:
    2c74:	0e 94 91 15 	call	0x2b22	; 0x2b22 <__fp_splitA>
    2c78:	b8 f3       	brcs	.-18     	; 0x2c68 <sin+0x10>
    2c7a:	99 23       	and	r25, r25
    2c7c:	c9 f3       	breq	.-14     	; 0x2c70 <sin+0x18>
    2c7e:	b6 f3       	brts	.-20     	; 0x2c6c <sin+0x14>
    2c80:	9f 57       	subi	r25, 0x7F	; 127
    2c82:	55 0b       	sbc	r21, r21
    2c84:	87 ff       	sbrs	r24, 7
    2c86:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <__fp_norm2>
    2c8a:	00 24       	eor	r0, r0
    2c8c:	a0 e6       	ldi	r26, 0x60	; 96
    2c8e:	40 ea       	ldi	r20, 0xA0	; 160
    2c90:	90 01       	movw	r18, r0
    2c92:	80 58       	subi	r24, 0x80	; 128
    2c94:	56 95       	lsr	r21
    2c96:	97 95       	ror	r25
    2c98:	28 f4       	brcc	.+10     	; 0x2ca4 <sqrt+0x30>
    2c9a:	80 5c       	subi	r24, 0xC0	; 192
    2c9c:	66 0f       	add	r22, r22
    2c9e:	77 1f       	adc	r23, r23
    2ca0:	88 1f       	adc	r24, r24
    2ca2:	20 f0       	brcs	.+8      	; 0x2cac <sqrt+0x38>
    2ca4:	26 17       	cp	r18, r22
    2ca6:	37 07       	cpc	r19, r23
    2ca8:	48 07       	cpc	r20, r24
    2caa:	30 f4       	brcc	.+12     	; 0x2cb8 <sqrt+0x44>
    2cac:	62 1b       	sub	r22, r18
    2cae:	73 0b       	sbc	r23, r19
    2cb0:	84 0b       	sbc	r24, r20
    2cb2:	20 29       	or	r18, r0
    2cb4:	31 29       	or	r19, r1
    2cb6:	4a 2b       	or	r20, r26
    2cb8:	a6 95       	lsr	r26
    2cba:	17 94       	ror	r1
    2cbc:	07 94       	ror	r0
    2cbe:	20 25       	eor	r18, r0
    2cc0:	31 25       	eor	r19, r1
    2cc2:	4a 27       	eor	r20, r26
    2cc4:	58 f7       	brcc	.-42     	; 0x2c9c <sqrt+0x28>
    2cc6:	66 0f       	add	r22, r22
    2cc8:	77 1f       	adc	r23, r23
    2cca:	88 1f       	adc	r24, r24
    2ccc:	20 f0       	brcs	.+8      	; 0x2cd6 <sqrt+0x62>
    2cce:	26 17       	cp	r18, r22
    2cd0:	37 07       	cpc	r19, r23
    2cd2:	48 07       	cpc	r20, r24
    2cd4:	30 f4       	brcc	.+12     	; 0x2ce2 <sqrt+0x6e>
    2cd6:	62 0b       	sbc	r22, r18
    2cd8:	73 0b       	sbc	r23, r19
    2cda:	84 0b       	sbc	r24, r20
    2cdc:	20 0d       	add	r18, r0
    2cde:	31 1d       	adc	r19, r1
    2ce0:	41 1d       	adc	r20, r1
    2ce2:	a0 95       	com	r26
    2ce4:	81 f7       	brne	.-32     	; 0x2cc6 <sqrt+0x52>
    2ce6:	b9 01       	movw	r22, r18
    2ce8:	84 2f       	mov	r24, r20
    2cea:	91 58       	subi	r25, 0x81	; 129
    2cec:	88 0f       	add	r24, r24
    2cee:	96 95       	lsr	r25
    2cf0:	87 95       	ror	r24
    2cf2:	08 95       	ret

00002cf4 <square>:
    2cf4:	9b 01       	movw	r18, r22
    2cf6:	ac 01       	movw	r20, r24
    2cf8:	0c 94 bf 15 	jmp	0x2b7e	; 0x2b7e <__mulsf3>

00002cfc <__fp_mpack>:
    2cfc:	9f 3f       	cpi	r25, 0xFF	; 255
    2cfe:	31 f0       	breq	.+12     	; 0x2d0c <__fp_mpack_finite+0xc>

00002d00 <__fp_mpack_finite>:
    2d00:	91 50       	subi	r25, 0x01	; 1
    2d02:	20 f4       	brcc	.+8      	; 0x2d0c <__fp_mpack_finite+0xc>
    2d04:	87 95       	ror	r24
    2d06:	77 95       	ror	r23
    2d08:	67 95       	ror	r22
    2d0a:	b7 95       	ror	r27
    2d0c:	88 0f       	add	r24, r24
    2d0e:	91 1d       	adc	r25, r1
    2d10:	96 95       	lsr	r25
    2d12:	87 95       	ror	r24
    2d14:	97 f9       	bld	r25, 7
    2d16:	08 95       	ret

00002d18 <__fp_norm2>:
    2d18:	91 50       	subi	r25, 0x01	; 1
    2d1a:	50 40       	sbci	r21, 0x00	; 0
    2d1c:	66 0f       	add	r22, r22
    2d1e:	77 1f       	adc	r23, r23
    2d20:	88 1f       	adc	r24, r24
    2d22:	d2 f7       	brpl	.-12     	; 0x2d18 <__fp_norm2>
    2d24:	08 95       	ret

00002d26 <__fp_powsodd>:
    2d26:	9f 93       	push	r25
    2d28:	8f 93       	push	r24
    2d2a:	7f 93       	push	r23
    2d2c:	6f 93       	push	r22
    2d2e:	ff 93       	push	r31
    2d30:	ef 93       	push	r30
    2d32:	9b 01       	movw	r18, r22
    2d34:	ac 01       	movw	r20, r24
    2d36:	0e 94 bf 15 	call	0x2b7e	; 0x2b7e <__mulsf3>
    2d3a:	ef 91       	pop	r30
    2d3c:	ff 91       	pop	r31
    2d3e:	0e 94 04 15 	call	0x2a08	; 0x2a08 <__fp_powser>
    2d42:	2f 91       	pop	r18
    2d44:	3f 91       	pop	r19
    2d46:	4f 91       	pop	r20
    2d48:	5f 91       	pop	r21
    2d4a:	0c 94 bf 15 	jmp	0x2b7e	; 0x2b7e <__mulsf3>

00002d4e <__tablejump2__>:
    2d4e:	ee 0f       	add	r30, r30
    2d50:	ff 1f       	adc	r31, r31
    2d52:	05 90       	lpm	r0, Z+
    2d54:	f4 91       	lpm	r31, Z
    2d56:	e0 2d       	mov	r30, r0
    2d58:	09 94       	ijmp

00002d5a <_exit>:
    2d5a:	f8 94       	cli

00002d5c <__stop_program>:
    2d5c:	ff cf       	rjmp	.-2      	; 0x2d5c <__stop_program>
